(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    209635,       4159]
NotebookOptionsPosition[    201212,       4011]
NotebookOutlinePosition[    201557,       4026]
CellTagsIndexPosition[    201514,       4023]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
HT10 
\:0412\:044b\:043f\:043e\:043b\:043d\:0438\:043b \:0410\:043b\:0435\:043a\
\:0441\:0430\:043d\:0434\:0440 \:0428\:0438\:0440\:043e\:043a\:043e\:0432 \
\:041f\:041c-1701\
\>", "Title",
 CellChangeTimes->{{3.8139248647597437`*^9, 
  3.8139248787888985`*^9}},ExpressionUUID->"620ffbd9-395b-43ca-853b-\
261de8d62e19"],

Cell[CellGroupData[{

Cell["Package", "Chapter",
 CellChangeTimes->{{3.8139396982214136`*^9, 3.813939699627165*^9}, {
  3.8139419686378984`*^9, 
  3.813941969895158*^9}},ExpressionUUID->"1945d99f-15ea-4e8f-ab66-\
17fa877255c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"1098de61-f6ee-4de1-bfd4-d28c89666bc0"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MethodSugiyama`\>\"", "]"}]], "Input",
 CellLabel->"In[2]:=",ExpressionUUID->"c6c3ee9e-0451-4a01-8bb1-fea1560a9b87"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "\"\<MethodSugiyama`*\>\""}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"bcdf7f06-94cd-4206-a4ee-a951c5d1bd2b"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["MethodSugiyama`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], " ", 
              StyleBox["MethodSugiyama`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["AddDummyVertices", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-aa1b4da2-99d2-4d82-8ed8-20ebe03f0168", {
                   "AddDummyVertices", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DFSearch", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-aa1b4da2-99d2-4d82-8ed8-20ebe03f0168", {
                   "DFSearch", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetGraph", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-aa1b4da2-99d2-4d82-8ed8-20ebe03f0168", {
                   "GetGraph", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetVertexOrder", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-aa1b4da2-99d2-4d82-8ed8-20ebe03f0168", {
                   "GetVertexOrder", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BFSearch", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-aa1b4da2-99d2-4d82-8ed8-20ebe03f0168", {
                   "BFSearch", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["getAcyclicTriangle", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-aa1b4da2-99d2-4d82-8ed8-20ebe03f0168", {
                   "getAcyclicTriangle", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetLayering", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-aa1b4da2-99d2-4d82-8ed8-20ebe03f0168", {
                   "GetLayering", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GreedyCycleRemoval", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-aa1b4da2-99d2-4d82-8ed8-20ebe03f0168", {
                   "GreedyCycleRemoval", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DDVertex", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-aa1b4da2-99d2-4d82-8ed8-20ebe03f0168", {
                   "DDVertex", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetDAG", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-aa1b4da2-99d2-4d82-8ed8-20ebe03f0168", {
                   "GetDAG", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["getOrderRandom", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-aa1b4da2-99d2-4d82-8ed8-20ebe03f0168", {
                   "getOrderRandom", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SetCoveringFormulation", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-aa1b4da2-99d2-4d82-8ed8-20ebe03f0168", {
                   "SetCoveringFormulation", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.2375]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{
  3.8139271987917223`*^9, 3.8139351759744234`*^9, 3.813937151399702*^9, 
   3.8139390261396914`*^9, 3.813939077132028*^9, 3.8139391965391345`*^9, {
   3.8139392574376397`*^9, 3.813939271858883*^9}, 3.813941876541374*^9, 
   3.8139419731058893`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"7092b3f3-c53b-4290-a113-09d280ec2e41"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Part I", "Chapter",
 CellChangeTimes->{{3.813939688271715*^9, 
  3.813939691801952*^9}},ExpressionUUID->"914be963-72f4-44bb-b051-\
20117dd0ca5b"],

Cell["\<\
 
1.  \:0420\:0435\:0430\:043b\:0438\:0437\:043e\:0432\:0430\:0442\:044c \:0430\
\:043b\:0433\:043e\:0440\:0438\:0442\:043c \:0434\:043b\:044f \:043f\:043e\
\:0434\:0441\:0447\:0435\:0442\:0430 \:0447\:0438\:0441\:043b\:0430 \:043f\
\:0435\:0440\:0435\:0441\:0435\:0447\:0435\:043d\:0438\:0439 \:0440\:0435\
\:0431\:0435\:0440 \:0434\:043b\:044f \:043c\:043d\:043e\:0433\:043e\:0441\
\:043b\:043e\:0439\:043d\:043e\:0433\:043e \:0438\:0435\:0440\:0430\:0440\
\:0445\:0438\:0447\:0435\:0441\:043a\:043e\:0433\:043e \:0433\:0440\:0430\
\:0444\:0430 \:0431\:0435\:0437 \:0434\:043b\:0438\:043d\:043d\:044b\:0445 \
\:0440\:0435\:0431\:0435\:0440 \:0441 \:0437\:0430\:0434\:0430\:043d\:043d\
\:044b\:043c \:043f\:043e\:0440\:044f\:0434\:043a\:043e\:043c \:0432\:0435\
\:0440\:0448\:0438\:043d \:043d\:0430 \:0441\:043b\:043e\:044f\:0445 \:0447\
\:0435\:0440\:0435\:0437 \:0447\:0438\:0441\:043b\:043e \:0438\:043d\:0432\
\:0435\:0440\:0441\:0438\:0439 \:0432 \:043f\:0435\:0440\:0435\:0441\:0442\
\:0430\:043d\:043e\:0432\:043a\:0435  (BarthMutzelJuenger2004.pdf). 
\:0421\:0440\:0430\:0432\:043d\:0438\:0442\:044c \:0431\:044b\:0441\:0442\
\:0440\:043e\:0434\:0435\:0439\:0441\:0442\:0432\:0438\:0435 \:0441 \:043f\
\:0440\:044f\:043c\:044b\:043c \:0430\:043b\:0433\:043e\:0440\:0438\:0442\
\:043c\:043e\:043c \:0438\:0437 \:0414\:0417\:21169. (1 \:0431\:0430\:043b\
\:043b)
\
\>", "Text",
 CellChangeTimes->{{3.8139248834230146`*^9, 3.813924898992439*^9}, {
   3.813924982773383*^9, 3.813925001036894*^9}, 
   3.813935306161185*^9},ExpressionUUID->"174497f1-1ae2-4a45-be00-\
b62359a37bde"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "isPairOfEdgesCrossing", "]"}], "\n", 
 RowBox[{
  RowBox[{"isPairOfEdgesCrossing", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"edge1_", ",", "edge2_"}], "}"}], ",", "ordering_"}], "]"}], ":=",
   "\n", "\t", 
  RowBox[{"If", "[", "\n", "\t\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"edge1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
       " ", "===", " ", 
      RowBox[{
      "edge2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], " ", 
     "||", " ", 
     RowBox[{
      RowBox[{"edge1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
       " ", "===", " ", 
      RowBox[{
      "edge2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
    ",", "\n", "\t\t\t", "0", ",", "\n", "\t\t\t", 
    RowBox[{"Boole", "[", "\n", "\t\t\t\t", 
     RowBox[{"Xor", "[", "\n", "\t\t\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"FirstPosition", "[", 
          RowBox[{"ordering", ",", 
           RowBox[{
           "edge1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          "]"}], "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ", 
        "<", " ", 
        RowBox[{
         RowBox[{"FirstPosition", "[", 
          RowBox[{"ordering", ",", 
           RowBox[{
           "edge2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          "]"}], "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
       ",", "\n", "\t\t\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"FirstPosition", "[", 
          RowBox[{"ordering", ",", 
           RowBox[{
           "edge1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "]"}], "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ", 
        "<", " ", 
        RowBox[{
         RowBox[{"FirstPosition", "[", 
          RowBox[{"ordering", ",", 
           RowBox[{
           "edge2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "]"}], "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
      "\n", "\t\t\t\t", "]"}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t\t", "\n", 
   "\t\t", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "getNumberOfCrossings", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getNumberOfCrossings", "[", 
   RowBox[{"arcs_", ",", "order_"}], "]"}], ":=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"isPairOfEdgesCrossing", "[", 
      RowBox[{"#", ",", "order"}], "]"}], "&"}], "/@", 
    RowBox[{"Subsets", "[", 
     RowBox[{"arcs", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}]}]}], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"049450de-5ed1-47ba-8226-8860ec1eba03"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getDummiesResult", "=", 
   RowBox[{"AddDummyVertices", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Composition", "[", 
       RowBox[{"GetLayering", ",", "GetDAG"}], "]"}], "[", 
      RowBox[{"GetGraph", "[", "5", "]"}], "]"}], ",", 
     RowBox[{"ApproachOption", "\[Rule]", "\"\<Cut\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8139398136650677`*^9, 3.8139398138708057`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"c6b74e4e-0396-4217-bc50-4c0ef0fe7029"],

Cell[CellGroupData[{

Cell["Example", "Section",
 CellChangeTimes->{{3.813941463857696*^9, 
  3.813941465215267*^9}},ExpressionUUID->"3ae2a01b-bd79-4d4c-ae57-\
0ea0fd3b296d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"getDummiesResult", "[", "\"\<graph with dummies\>\"", "]"}], ",", 
   RowBox[{"VertexLabels", "->", "\"\<Name\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.813940451274644*^9, 3.813940481482542*^9}},
 CellLabel->
  "In[489]:=",ExpressionUUID->"a58d4738-dc6e-44f9-86ae-07d02b4cfee9"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{2, 4, 3, 5, 1, 
      6}, {{{1, 2}, {3, 1}, {4, 1}, {3, 5}, {4, 5}, {5, 2}, {3, 6}, {6, 2}}, 
       Null}, {VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0., 1.}, {1., 0.}}, 0.02261146496815286], 
        ArrowBox[{{1., 2.}, {0., 1.}}, 0.02261146496815286], 
        ArrowBox[{{1., 2.}, {1., 1.}}, 0.02261146496815286], 
        ArrowBox[{{1., 2.}, {2., 1.}}, 0.02261146496815286], 
        ArrowBox[{{0., 2.}, {0., 1.}}, 0.02261146496815286], 
        ArrowBox[{{0., 2.}, {1., 1.}}, 0.02261146496815286], 
        ArrowBox[{{1., 1.}, {1., 0.}}, 0.02261146496815286], 
        ArrowBox[{{2., 1.}, {1., 0.}}, 0.02261146496815286]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 1.}, 0.02261146496815286], 
         InsetBox["2", 
          Offset[{2, 2}, {0.02261146496815286, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 0.}, 0.02261146496815286], 
         InsetBox["4", 
          Offset[{2, 2}, {1.0226114649681528, 0.02261146496815286}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.02261146496815286], 
         InsetBox["3", 
          Offset[{2, 2}, {1.0226114649681528, 2.022611464968153}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.02261146496815286], 
         InsetBox["5", 
          Offset[{2, 2}, {0.02261146496815286, 2.022611464968153}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.02261146496815286], 
         InsetBox["1", 
          Offset[{2, 2}, {1.0226114649681528, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.02261146496815286], 
         InsetBox["6", 
          Offset[{2, 2}, {2.022611464968153, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.8139404517983427`*^9, 3.813940482003005*^9}, 
   3.8139414671764755`*^9},
 CellLabel->
  "Out[489]=",ExpressionUUID->"a2c50094-915a-4966-9973-5add67f5ce7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"le", "=", 
  RowBox[{
  "getDummiesResult", "[", "\"\<layers with dummies\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"edge", "=", 
  RowBox[{
  "getDummiesResult", "[", "\"\<graph with dummies\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{
  3.813940493981487*^9, {3.813940686032485*^9, 3.813940686325034*^9}, {
   3.8139412431296377`*^9, 3.813941243306074*^9}},
 CellLabel->
  "In[490]:=",ExpressionUUID->"94385e4a-6423-4897-9929-76f4cdf6d5b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", "4", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8139404942952175`*^9, 3.813940686699545*^9, {3.81394124431104*^9, 
   3.8139412700796065`*^9}, {3.813941423530299*^9, 3.813941433825246*^9}, 
   3.8139414684561973`*^9},
 CellLabel->
  "Out[490]=",ExpressionUUID->"faec2d37-6399-4fb2-844d-e147a70d226e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", "\[DirectedEdge]", "4"}], ",", 
   RowBox[{"3", "\[DirectedEdge]", "2"}], ",", 
   RowBox[{"5", "\[DirectedEdge]", "2"}], ",", 
   RowBox[{"3", "\[DirectedEdge]", "1"}], ",", 
   RowBox[{"5", "\[DirectedEdge]", "1"}], ",", 
   RowBox[{"1", "\[DirectedEdge]", "4"}], ",", 
   RowBox[{"3", "\[DirectedEdge]", "6"}], ",", 
   RowBox[{"6", "\[DirectedEdge]", "4"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8139404942952175`*^9, 3.813940686699545*^9, {3.81394124431104*^9, 
   3.8139412700796065`*^9}, {3.813941423530299*^9, 3.813941433825246*^9}, 
   3.8139414684622145`*^9},
 CellLabel->
  "Out[491]=",ExpressionUUID->"51284960-cfb3-4742-8444-da362faf3624"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"amount", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"step1", "=", 
     RowBox[{"Cases", "[", 
      RowBox[{"edge", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"a_", "\[DirectedEdge]", "b_"}], "/;", 
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"le", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", "a"}], "]"}]}], "\[Rule]", 
        RowBox[{"a", "\[DirectedEdge]", "b"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"sortedge", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"step1", ",", 
          RowBox[{"i", "\[DirectedEdge]", "j"}]}], "]"}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"sortedge", ",", 
          RowBox[{"i", "\[DirectedEdge]", "j"}]}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
        "le", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"le", "\[LeftDoubleBracket]", 
         RowBox[{"k", "+", "1"}], "\[RightDoubleBracket]"}]}], "}"}]}], "]"}],
     ";", 
    RowBox[{"(*", 
     RowBox[{
     "\:043f\:043e\:043b\:0443\:0447\:0430\:0435\:043c", " ", "\:0432", " ", 
      "\:043f\:0440\:0430\:0432\:0438\:043b\:044c\:043d\:043e\:043c", " ", 
      "\:043f\:043e\:0440\:044f\:0434\:043a\:0435", " ", 
      "\:0440\:0435\:0431\:0440\:0430"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"amount", ",", 
      RowBox[{"Total", "@", 
       RowBox[{"Flatten", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"le", "[", 
              RowBox[{"[", 
               RowBox[{"k", "+", "1"}], "]"}], "]"}], ",", "v"}], "]"}], "-", 
           "1"}], ",", 
          RowBox[{"{", 
           RowBox[{"v", ",", 
            RowBox[{"sortedge", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}]}]}],
      "]"}]}], ",", 
   RowBox[{"(*", 
    RowBox[{
    "\:0441\:0447\:0438\:0442\:0430\:0435\:043c", " ", 
     "\:0438\:043d\:0432\:0435\:0440\:0441\:0438\:0438"}], "*)"}], 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{
      RowBox[{"Length", "@", "le"}], "-", "1"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8139406256601086`*^9, 3.8139407279252033`*^9}, {
  3.8139407664488583`*^9, 3.813940767599227*^9}, {3.813941252149842*^9, 
  3.8139413023598814`*^9}, {3.813941337664775*^9, 3.8139414321430445`*^9}},
 CellLabel->
  "In[492]:=",ExpressionUUID->"8583ab2a-8896-4177-9d5c-d77ce99c22a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", "amount"}]], "Input",
 CellChangeTimes->{{3.813941380802887*^9, 3.8139413852368965`*^9}},
 CellLabel->
  "In[494]:=",ExpressionUUID->"0ef1d7bb-6cf0-4160-8f16-a61f8f232797"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.8139413818282285`*^9, 3.8139413855252595`*^9}, {
  3.813941430767326*^9, 3.813941470834081*^9}},
 CellLabel->
  "Out[494]=",ExpressionUUID->"69158233-dc59-444d-8121-ebf0bca30fe0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Realisation", "Section",
 CellChangeTimes->{{3.8139414739125414`*^9, 
  3.813941475895294*^9}},ExpressionUUID->"9b9a2dd2-68c2-4097-a117-\
7b8d3a22ac8c"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "InversionAlgorithm", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InversionAlgorithm", "[", "G_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"amount", "=", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"le", "=", 
       RowBox[{"G", "[", "\"\<layers with dummies\>\"", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"edge", "=", 
       RowBox[{"G", "[", "\"\<graph with dummies\>\"", "]"}]}], ",", 
      "sortedge", ",", "step1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"step1", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{"edge", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"a_", "\[DirectedEdge]", "b_"}], "/;", 
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"le", "[", 
                RowBox[{"[", "k", "]"}], "]"}], ",", "a"}], "]"}]}], 
            "\[Rule]", 
            RowBox[{"a", "\[DirectedEdge]", "b"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"sortedge", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"step1", ",", 
              RowBox[{"i", "\[DirectedEdge]", "j"}]}], "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"sortedge", ",", 
              RowBox[{"i", "\[DirectedEdge]", "j"}]}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{
            "le", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"le", "\[LeftDoubleBracket]", 
             RowBox[{"k", "+", "1"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
         "]"}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "\:043f\:043e\:043b\:0443\:0447\:0430\:0435\:043c", " ", "\:0432", 
          " ", "\:043f\:0440\:0430\:0432\:0438\:043b\:044c\:043d\:043e\:043c",
           " ", "\:043f\:043e\:0440\:044f\:0434\:043a\:0435", " ", 
          "\:0440\:0435\:0431\:0440\:0430"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"amount", ",", 
          RowBox[{"Total", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"le", "[", 
                  RowBox[{"[", 
                   RowBox[{"k", "+", "1"}], "]"}], "]"}], ",", "v"}], "]"}], 
               "-", "1"}], ",", 
              RowBox[{"{", 
               RowBox[{"v", ",", 
                RowBox[{"sortedge", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}], 
             "]"}]}]}]}], "]"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "\:0441\:0447\:0438\:0442\:0430\:0435\:043c", " ", 
         "\:0438\:043d\:0432\:0435\:0440\:0441\:0438\:0438"}], "*)"}], 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{
          RowBox[{"Length", "@", "le"}], "-", "1"}]}], "}"}]}], "]"}], ";", 
     RowBox[{"Total", "@", "amount"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.813941485381454*^9, 3.8139415759052315`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"956eca1f-8caf-4c71-9083-475791468dac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InversionAlgorithm", "[", "getDummiesResult", "]"}]], "Input",
 CellChangeTimes->{{3.8139415897031436`*^9, 3.8139415899461203`*^9}},
 CellLabel->
  "In[497]:=",ExpressionUUID->"099d7ff3-e379-47c4-afe6-99e39d462fd5"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.8139415903636036`*^9},
 CellLabel->
  "Out[497]=",ExpressionUUID->"4cc8505a-5c41-48e6-b8c0-b359443cbba1"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Bzmd/+0BZzgRsfhsR4bf+O2Bv35p28VLkf9rdb/DPzip2t85Mq+2n+s6Bh44
ebR3cmtI+zO/5hqKUi7VL2O6KxeQ/2/vGNzXOdIlkLvN7nLxzG9GgDOKBWJS
if6FvvHtrV29urWjf2fP25OiW+lApfBPRSttVL0m9ZdHdT9Rym54evCZLa3N
XtndOXy0f0ojNyajyXa/DGfFEXI9yjv44/2/ot9F/7zxvOPTHcls6oOZkwNv
iTrP233Zv2z+ztWP/+GF/qPRdOyM439OS+VSC8v/Urvyjwdv+cbuS79738/u
PLrjuZMvb3ljD/vU39x92fUHb3l7kmefebrGBw3kfwBoUb2QTg8dTg88n5N0
5qQnIs/9EfkfODj5f2/3E7lirlAq+GMBnqTv/L0/+er271+456prHr3+/9v1
HwvO//QntVguHTh56LKH/pOT/71RX7lSzhfzvbKBG5+7/Ss7LlmC/F+r1dwm
d9eodFfn8Pr55P/beCffHturk19P8Ukq+SttVuVvKEEtIP/PLAc8/BZfbNPY
SoVFHOwEq0yj3vDYvP1D4ntaPnr39r3+tmCvTfmbgOZqg/y/jwvuf3V0/4nJ
zT7Nz6l6tSh/++7Yvff2Hm/loahefrB7VMCXBD2hFT0LOJQMdwp7f3HgT2z+
f6TnoMFtqjfqwXjoif5Dn9vynU9tOu+Ph24fkPPT+cwi5f8h/fjXd/34X7Z8
5wtbv/utey+/5IFffHvPlexT043/tutHP37410/2H6ISoFKtIP8DQIsa1UrZ
a67QL6t0vOQ2xo6sQ/5fIyKpmMyuel34/ssTb74v77MHHdlijv0UhW1TwEa3
09ajHDR4zDqX4XT+33/iIHu3eDo+pp++9ZVtm9/c+wDvyfveeeTH+69bcP5P
ZJPTRsmNL2741j2X/fDBX35p+8Wn838gFmTvw9cI/nbozq/s+P5S5P9qza61
vzMk2sjjtz53cmNX5yP9h4Ximz3qax2qXx0X7Oua2GFW/i6qXUj+X9cxeDdv
6NjAtFluXtFDKWApMaV0vqjT2o73jtPx0+LI/8f7D40Lb6PwT4fuhOjW+/pe
29HzzsP9h98f3907ufW9sXueGTzYevfa7Tx+R9+E1exmVgResVPXs4Ws3mX8
w4u3z+T/b9392j0C7WS1VlPa1Nvevp8qgi9u/d62d+6n7F2qlBcp//dphk+f
D/n05vN/9uQf1r26ddv7D9722o5LH/0Ne/v1L9zKE/XS3iL/A8B8NSqlkseM
/L92aJz6R7uf/bfdP6a/FD986Lp3JnmeiJf9VDydODr+FvuX5doDN749zhMZ
Jc35P1/MeyO+aYPYGXJT2u8WnfjlUzcuLP9Xa1Wt27Dr+AM/eOBa2na8se/C
+37a9vxvVVnfGJhe33KCurWj/4ETxwamNjpV11HaF0lu3tP3+iH+kwvO/7fM
LAT20slJg8RQzCH/Q0vo0E2EE1NS/XPdgg0tX7o6OPiMXPrnkPanVuVv+qc2
7u17fUv3+zNbx52dPbfxTs7ruN3EGzrcMyZTmVPR1Mq9BEAZPl8q3HH8ns/P
9O38w7Pr3p3uqlQrvZKBv75012c2n//dPT89NPIKe+fFzv+f3vTtr+78wfOD
R6x+O/3CdIXc+7qeoB371KbzLrrv6u3H90XSMeR/AJgv5P+1JpQId4j7vrXn
CvpL8d19Vx/oecHotbCf0jh19/NOpf0bDt9Bf6folub8X6/XS5VyJp8pVkr0
aGeT/50h15HRNy7Ye9Ul+35+y+FNPZL+q574fdvzv0lueuXEZOuNUzZ18V7k
P2GQ/3dAc7VWfv1bgvu29bx7lvmfnv353nHtlLaQW8RvFlaTSqnit/tPTigf
6hq5veUj7QX+AYPivyPaq+yqX0ulf1XKbtDI/kgbFQWvju7f3fvmutZagLLb
nR1Dj3eNjgg1IXdo5bauYjp81uvHBG9dd+DP9Ovoe3t/9kjvM/Tr7pmTh3/2
6O+/uO2iWw5vHlSNsnde7Pz/77v/478P3jxtlhTKRdqxUqXUKT3xm6f++qXt
F39+64XXPfMXXzKI/A8A84X8v9YUSkWJTfHTx3//r9su+vquH9/4/Ppxo5D9
VL+Cv+7IZvoL8rWdP9z+zgOxdNziszbn/9kiqejC8n+1Vk3l0u9Md954aP2n
N5//18N3vTL6lsQsv3bmD2Wb87/MdKxvovXMs+/Eqx3ju/0zPX8cql9NiW7h
je+kzO/T/DyuuyKs/alR8d/vj+9+fODQ5u6OVropsttzPWOaSU0hi/wPLSkX
y069870RyT2dw60MXaNgf2dn9ysj+yn5x3RXUvXqUl0X1TEzf2mjW6gEOC7Y
t6v3rQ2dvS0etBs6hvZ0DveOyT0Wz4ruAkoE2sm7X7uHye1bv7fhtZ22gOPW
Y1u/sfvS/7XzB0/2vaB3m9i7LVL+nzCLLnvoP7+y45Lz771y3YsbdR7j6U+N
aMdvPnTXV3f+gB7ziif+y5PwI/8DwHwh/69BrojnjqM7vrPnKqaVxK5L3xF3
UxqvN+ov8l+5+rHr/3nTeVc9/LsX+a9y5v+ew/zfaDRS+YzMplz/6o7z7rn8
m3suPyI4bvSYVXbNdc/8ZTnk/1f6Jlo////kwPP86TspLyV1l7M9/zlbQnc5
VQEnpjbff+JYiwMqcP4f5qtUKFmUltcGhZt5/FY6f97a0b+j5513xva4VdfG
dVfSURrRXuVS/dKpus6nZkpXqgU0sj8e4j+xrefdFt8LVHds4fHf44sdOge9
ldr9kpwVi8/25IkXPrv5AvqV+Otn/soT9V766G8+ven88/f+pEvWH03F2Lst
OP/X6nUK6qVKuVwt02/g2auMEb3HtOuN+7+37+pv7r70T8/eqnCo2VY/dM8+
xeDvD/79y9sv+fzW7/7q2b/h/D8ALADy/xoUSceODb957YEb/nnjeZ/ZfP4z
/KOhZGRmvOvuL2773qc2fXvLG3sn9MLFy/+VakXnMd75yq6L913zo4eue6rv
EP2xi6ZjyyT/M+P/+6dv72h1/P9i5H969hdPTurFeoz/hxYV80Wj1Phy/9SG
1qaucPI/HaJa+R8ODz/2Av9Ax/guj/oXdEhTOTAiXP/giaMt5n+qO+7gDR0f
FNrUtpWe/0uVUp9q6Lzdl31+y4UX7btm/ctbv3Xv5V/f+aPfPn2T2q2nHM7e
bcH5P53PuMNeq9/uDLnCySjnC+kX6eujb1/+6G8/s/mCf7/n0k7ZyWQ2Rfeh
ez528nkK/5/e9O0rH/nd493PxbNJ5H8AmC/k/zUoW8iJTLK/vnw3+2drT8dj
UovCFnD84aX1bK+J5/nHXCHP4uV/k896aOiVH9x/Lf0x/fkTf3x7vENolIhN
Mp6wl10ok8qQR7oPTuimnSE3/RVuV/+fFpdP2tnz9oGB594U3PeWYO/b/9gm
RLfOGv/zXx0z43+2dL/fyvgfCm93zfT/MclN6P8DLaJSUSfUHeqbaPG4PTX+
Z/TU+B+36pcC4e17+t7Y2v3+U4PPGRS/p0M3oLlaKbvhsf4XW8z/bAnw6slJ
s8K80vM/UTjUN714F8V+ytsX3Xf1F7Z+78f7f/Xg+094oh/+lltw/pfYFI/3
Prfl7X0vDr8msyrLlTl/dtP5tMapv/nljV/b8cPPbrngj4c3PDXwUpf0xFMn
X/z1M3/71KZvf3nbxXe8unNMN5UvFZD/AWC+Fpz//du+WrKJ66XCh1u52KBf
O/WVOudr7ahUK6FEePu7D35+y3f/eeN561/Z8d5k55By9LqDf/mXLd/5xj2X
9igHc8X84uX/AcXw31/a+IWt3/3K9kuufuz3j3U/82Tv8w/xntr2xn3fmen/
Q7tx46ENT/Y83ycdSGSTS5r/azWX0dU5Kt3ZOXz7fPr/c7am+b8tdVA8naC2
8/hv8sU2Nfr/Q6sKuYJmUvNcz9g8D9Qn2APVqvxN3+SWTV08unFP3+tiyd+o
gA3NzF55cuCFeT3msb4Jo9RYq6z4/O8Muw8PvvofD3+4NMnvnvv7SdkQ/VI6
fZ8F5/9XJ9655L5r6Hcd/VobVo0Vy3MqfXqcQqn4/ODRXz/1l3/b9aPPbr7g
wvt++odnbrnkvqv/bccPv77rR9c++adjY29GZi4cIP8DwHwtPP9v/lJO3Fly
Gz/cfLZqIlwv43TlctdoNCjlPj909Pv3/fwzm86//tl1j/Geef7kkSse/e35
e6687fAWlVNbb9QXL//3SPtveO62z2+98FObvv25rRd+bdcPv7brR1/d9UNK
+J/ZfAG75s4Xt130s8euf4T3lC/mX8r8z6z/a/cPTCgfnOf6v+cw/982s/5v
p0DmNmH9X2jVOcz/9/QeHxWud6muW+P5P5qOCTSTP3/qT6fz/+2v7/RFA6VZ
5+oXnP+f4h9mJhdsPG/7uw+avJbK3NDemPlFbQ8635rsuOnQnd+451L63fjF
bd+jL/nW7st+f/CWXvmgN+bH+r8AsDALzv/e2/9n+Mlro4duPL3Fj2/NK4er
8dASfwuwMEPq0VuPbPnC1u/+8IFr//jMultf2vydvVdd/uhvjwy95p5ZEeBs
8n+lVk3nM/RXibZENkl/j2YvBiQyS5/qfeGu13avf3XH6e2WI5v/8Pxt/37P
pfQ49Jfumif+sO34vjfH34ukY0ua/+v1WDA2LTM82y24m7fw/L+7900qAY6N
PPTy8KMUn1rvoELb+o6hJ2eaKEa8kWq5unjfLKwmzPgfke7QiYnW162j7cDA
8yLxzUHNz3yan4skNz3cf5gO3acHn1HL/hjUXB3QXK2Q3tj6+J91M9Xrayen
LArLKhj/UywXA/FQj2ropfHj7DZmFtKN9VmXuT8+/1OlQL8ke1SD9LXHpt6R
2VVUU9B9oqno3q7H2S985ORzqVy63jjDpfN8qeAKewS6yZfHjj9y4tl9XU/s
7z14WPDGkEYQSIRKlVMXB5H/AWC+Fpz/mzf/jm+k+l+u+O1L/C3Awlh8tucG
jnx5xyVf3nbx+fdc8aP7f/mV7Zf8+tm/Sczy5MzV7QXnf4r6sUxCalO+Pvku
bSKrnP6Kzf6L6Y36JGbZhG56XDt1euuXDR0bPn7pI8yl9i9s++697z7cK+nX
OHS5Yn4p8z/tfC6d0+nsb/SOb+XxF5z/z2a7s2PoSM+YXGnOJrMrt4k6LDFm
/q/MeKR/6o6Wl66j7f4Tr/LGdzlVv4pqf2JX/Zo3vvO4YF/f5BYqB2K6K+n2
wam77z/xSouPdisdvbyhNweFNs2Kn//botP5/+/HNr8n7hm3iELp6Md/SblS
NrhNm97a+9nNF3zz3suOTb7z8fenX0rZQi6UCDuDLl80kMlnTn8qV8rLXOpu
xcB9nY9/cftFyP8A0CLk/zUrncv0Kflf3f2jf9543qc2ffvTm86nD248clcq
l67MtLZYcP6nL1TZNXvef/RLOy6h7b6eJzn5v1avV2qVSnXOFk3HZBbltQf/
zF4oPzb2ljvsZdriNRpLmf8/mBkC5HX4+09M7e7kt56jztW2bmYR1Y6+SZvB
SQlq9nUTgI/B9v98fajV/p/stqmL9+TAC0rpDSHNz9gWoGHtT6kWSOouj+p+
opLd8MzQwS0tj167rWOQqub3hyUO/Yrv/9mi0/n/c1sv/PLOS/7Xrh+8K+v9
+C8plotik+z2V7d/bdeP1h/ZPq6f/sRnYZcko1+t9O/s3wl6v/nSx37z5Z3f
/8K279EvcOR/AGhRo16r5VIly1Ru8hXaiqbJajz4UXN4a8lwUT+ZE73D3pmz
5WW8ss9cn3VqApazSrUqd6iZyWU7f8T+/frp479/bugoG7k/OLv8LzJKNh3f
89nNF1z20H8eERyv1j45x1LdsRz6f34w86c2GoxJptQH+8a3LPklgI28oUd7
BGPjyqA7hPAPrWPW/zI43x+V3tva+l/sdjvvxJbuDioBhqbv8qqvTeiuSOkv
Y8O/UHzz0ZGHt/W8u57X1+KjbegYuq9zpG9M4bV6V/r6Xy16Y+q9Xz55w+xt
SDv28V9SqVacIXe3rP/ZoSNDqlFv1L/gZ7eHXTcdvnv2s+/jPV6pYdAgAAB8
JF88cGjo2F3H7/3jyxtoe3bwiMymPP3ZVvI/hXaxWXZ/9wH2EfpU/GgqRhVE
v3zo7y9v+uK2791+ZCtfLWhlZ/LFvCPoeqD3KXqcm17dPKqfjGcS7KeWOP+T
bCprM7ne54sf6BxZyksA9Fx7OoePn5zSa+2pWGqxv01YTSrlSsAZ6J9UPdI1
sn7+U9efGHihf2rTpGidUPz3afEt46LbXhp+bGfP2+s6Blp/kLt4Q090jQpE
2rAnvEaGrsnsqpf5r83ezH7rx39JvV5nx/N4I75EJnl6GP8CxDLxtyc7Zj/7
gGqkhi58AADw0ZhGQPV6tV6jxE4b00pi1gnnVvL/Px7k1CPUG/XGB41ytfLi
0CvXPvGnL++45NHugxpnS+vdz3mo+qmHYm9f+vxfrVRT8bR4QvV8t+C2lhcC
O/uNnovi0wRfGgnGKM4t9rcJqwm9c5KRpFBmeKFbsGH++Z9y/q0d/bO3meQ/
j/B/y8zQtSM9Ywq1JR1PM+/gNYD9LTp7a/GyXYP1wVm9SvTl9bnPfsZ5xAAA
AC3i5P8fPHzdHcd3vzB0TOs2fPwXlirl/Z0HfvTAL7+664evT7znW+jV7VAi
PKIZ3/H+/msP3vjtPVd8dvMFS5b/KbqUCiW7wdkzKnuoa3QBaWoB260dg/d3
jrzHF5vV1lw6V8dJPJgPOmjLhbJBZ3+rd+Lu+UwBPlcbPeMOHr+zb9Ju8ZSL
ZYxeAwAAWHEo/7vDnqcHXvrevp+x2+UP/2bra3smjaKP/8JKtXJM8OaGV3bc
fGyzyCrPFnIL2wFH0PWG4J3rnvrz6R3Y9ua+ce1UYUnWmKjX6slIUqW2vD0w
fW/XyGKXAOs7hrbz+Ed7xsbGFC6jq5grIj7BfFEJ4LX7Bocle7vOavWKhW13
dQw90iMYH5GFvOE1cvIfAABglanX68F4qFtykjI/u93z5v7Dg69qXZ9w/r/e
qLtCbp3LYPJY8qWFn6v3Rnx9koEH3nv89A4cHnxFapafzXDZ+YoGotJpzeET
E7sWsxcQPfI2Hv+Z7tGBvin5qNyitGST2TUyfRLOrXgoLpcZX+qb2NG51FPX
7+0cfnVgWqc0Y+oKAADACtVoNChph5IRo8/Mbma/1RPxZgrZT/jCDxqFUoHu
li3kOKvhzEuhXAwnI9aA/fQOuKPeZC61lANjivliwBOeHFce7pvYyZtHW5V5
bTPhX9DfNzVxYlo8IGZLgKgvWilVcBUA5qWYK3qcgf4h8cNdo613AT37jZ7r
QJeAPyL12Hz5TL7dLwMAAADAAlGtUcgV3Cb36ITqpb6JXZ3D53ZYxfqOIQr/
z3YLOvsmhSeFp7Z+oWxYZlaYw54wPTsuBEDratVaKp5WifXH+qd28IaXZhbA
7R2Du3nDr/aMC/lSq8oa9UepcEbpCgAAACtUvVbPZ/JUAkwJFC/1jd8z01z9
nMQqepztnfxnewWDgyIJXyLqF31YApwUigfF6kk1WwJgNDW0rlws+x3+kUnV
szONgBa7BGBXrHuxe+xE3xR76BqlxrA3XClX6i03wwEAAABYPpj+ftUalQAB
T0gs0r41IHyoa3T92cWqdTOtPu/vHHnt5NTkhMpp9XgsHs20RjIkmX0VQDIo
UU2oPGZPLoV2QNAqqlipZjRqbF0npx/uGtnIW9yJwFt4/Ce6R/v6JsdPTLOH
rpQv1U5rXUZXKpaqVrEWFQAAAKxIFL+L+WLEF1GqLF0j0oPdY/s6Rzbz5j0p
mD1Zuqdz+MkuwXvDEoncGHKHculcNpUNuoNGqVE2Ipt9FYA2zZTGbXJnEhms
CACfiOkCWizHgjGjzCjoF77TO0ElwN2LUwLMHMwU/gUdJybHT05zrl6pxlU2
rS3sDReyBaqg2/3CAAAAACxQMpq06RxCgeLdAeGB3rGtPD6Fqzs6hm7vGLpt
ZhbkurkBaeZUPzNAekPH0F28oS28ocd6BG/2T08My8xqazwYP/3IVGKEPCGK
bcxVgP45JYB8RO4yutLxNHIUfIxGo1EpVRLhhEFikA2fKiTf6Bl/cGZF4HM7
HfjWmdV+H+ke5Q0IFQIFPR1lfk7pKh4Qa6e1AWeAKlwcugAAALBCUYwp5Arx
SMJsdE5NqXv6pl7tGX+6e/T+zpGdncMbefzb/zE0aB0T+4eoOtjeyd/XOXKg
e/Roz1hn3+T4uNKgtUeDsVwmX63MGh3R+KBSrsSCMYvSIh2Wzs5Ron6RbERm
09jioTgGAsEZUfivlqthT5jCv5QvPT2dRHBi+t3eiYfO9VWAzbwhZtjPoEin
tIS9Yb/db5AazlACDIqpOrBr7XToYi4AAAAArFBM0KpUM8kMxR6X2aNSW8bE
up4x+TvDktcGhS+fnDzUN/5C7/ih3nH6+NWB6bf54u4x+ahIq1BZ7CZXyBNK
x9Ps7MjmBy8VS5SUKOorx5ScKEW3WNVWKhDoPkv/XcNyVq8x49Po0DLJTRT+
Z18/olpyalTePSx5und8B2/4LK8CsFNXdncOP39i4qRAZtY56HAt5Uv5TD7i
i9h1dvWkes40ln8culTV0u5lU9k5NS8AAADAikKFAOWuXDoX9Uc9Fo9da6eQ
Y5QadUKddlpL/xqkBrPCbNfYPWZPxBthVvWq1j7xLCiz9HA0SY8mG5FxmgJR
lqOARyUAlQ84mwosZnJKrhjxR7RC7ezsTQcP/Vcv0du0NpvaNjSmePHEBJUA
d/OG1i+ojS191UYen8L/0ZOTgkmV0+DMpT4c2EMf0H/dFrdOpGNqkLklAO0J
M5nd4knFUszRi5ZWAAAAsEI1mLheq9Qo0pSL5VKxVCqUSvlSMV+kjfm4WKLb
K6VKtVKle7YU2htMlMokMlQ1nB7FPTvRGSSGoCtYq31yKQGrHrNOX6EUcAZO
9Y+afeafL9WL9bFAjI5A2jwOv0So7eqdfL5bcE/n/C4EsNNY7uscfrF7rPfE
tFxi8HtC5VJ59iHNlsN0qEcDUYvKIhqYU7rSjtEtVMAaZUx3UPra9r5uAAAA
AMtNtcwMMaISQDutFQ/MGVZNRQGVAH6nn5lWidXB1jCmM20277P5KOdzwr98
VG5WmCn8U3XA3jmfyYf9UavRNSHWvc8XH+oee7xrdF/n8A4efyOPv4E3dNvc
tH8Hb2gTj7+Tx7+/c+TJ7tGXesY6R6RCqd5hdkeDsWKu+FF7Rc+YCCecRqdW
qG2+ECAbYY5e2ud0PE1FMWpYAAAAgNOY1YezBUpKVAJQups9FogdTeGz+7Kp
LC4ErE3s2LOAK6CZ1MyeeEvHCaVuCv8RX4Qzx4S+hMJ52Bu2ae3yac3QmPxd
vvhw/9RTJ8Yf7hXs6x69t2vkns5h+ndfz+gjvWNPn5g40j/1/rB4ZEyhmtY6
9M5oIFoulj9xEjodk1SY+B1+o4xpacspYGkP6eh16p2JSIL2BzUsAAAAwGmN
eqOYL0b90eYx1RSiFGMKh86Ry6C54ppDFR/Vhl6rVyFQcNI1E/7l5kQoccZc
zaxnV2OGqxVyhUgg5rR4dAqzXKgVjyunRmRjg+KxAdH4oHhqVC4eVylEOr3S
4rJ5Y6FEMV9iJq23PIaNDl12GJtda6ed5FwFYIsUqlwCzkA+kz/3LxAAAADA
isWcs82XYoGYVW2Vj8pnj/Gg4KccZ5oCxUPxchEDqteKaqWaS+fcJrdmSsMZ
Zk9J26KyJMKJTzgeGszVJboPPU4qlqL7x4IxKjPD3nDYE454I/Qx3UK3p+Np
yueV0sx88/lfZWI6ZSUyPpvPIDFIBiWc+ex0C7tSMD0RxgIBAAAAnMaes40H
mb6g3PO9/UyLdZvaxkzzLH3ywAxY6diT6l6Ll0q/2XGaPpaPyNkOscttRE0h
W2B6k8pMyjHlGbuD0gFMh/eplYJRBAAAAADMaNQbuXTOprWdcTSFQWKIBqKV
UqXduwmLK5vKuowu5rT/3EWipXwphf9kJLkMW2syBWy1VswV3Sa3elLNOXrZ
CwFsd1A6wpfh/gMAAAC0C4WobDLrNjMDP7htVYZlerE+6ApiNPVqxa4659A7
VOOq5lPodq09GU0u2wLw9GIZIXfIrDBzVrimWoYtAaiEifqjpTxWuAMAAAD4
ELM0gMXTvNCqaIC5ChBwBgrZAmWtdu8mnEuVciUVSzmNTsWYgnPpRyFQUPhP
RBIrYhp4qXBqMgulfU7PUvYqhkluohqB6W1bqeFaAAAAAACrmC/6nf4zDqWg
G71WL6YDrzLpeNqhd5xh5MyQxKFz0GfbvYPzwDYv8jv86in17M6lH17OGFfS
N0slQLVSbffOAgAAACwLtVqNSoCgK2iUGpsDIZUAbpM7k8i0ezfhHGDP/LNT
vzk/a9U400Wfwj/dp927OR8zK1wXc8VEOGHX2intc74vKgoUYwpmnWtnMJ/G
eDYAAACAUwq5Qsgd0ov1smHZ7HEUogFmfSW2BEBbxRWtUqokIonmFvrMEloU
/g3OdCy9Iob9nBGVsclo0mVyaaeZlYI53UHpkKZj22v10mFMBQ4OYwAAAIAP
ZvJhMpI0SA3NbRXlo3KLyoISYKWaWUKLfrgU/puDMaVlis2Z5Gq4xFPMFcPe
sE6okw43lQD/OIxT0RQOYwAAAABSr9cr5UoinHDoHLIR2ezVoMQDYspOZrk5
4ouUi2Vkp5WFfqzxUNyqmln0jTPsZ0LlNrsp/K+O4fHMCneFUiqWooqGWdFs
bglAhzQd2AaJwWvzZlPZlXuxAwAAAOAcoqyYjCadBienKRBFKSlfSiVAyB0q
5orITitFqVhiw3/zmH/6EVNOXmVJmO0OShWNz+4zSA0U+JtntVBpQEc4vSxU
LLR7fwEAAADaj+JTMV+kZEj5cPZVAPZCAGWnkCfE9AXFAsHLG7vWcywYsygt
cxZ6/kc1xyySlcq1ezcXC1WysUDMJDdJ+BLOYcy+AvSpiC9SrVTpSMYlLQAA
AFjL2DOoVAIEXAGtUMtpq0j/VY4pKTpmU1mkpuWMAnDEHzm1Qtbc3vjqCbXf
4Wca46+iM/8cjXqDXoF0PO2z+bRTzKRgTglAt9Dh7TK6Vl7XIwAAAIBFQNk+
n80H3cEzDqLQTGnYpkAITssTlW9Rf9QkNzWP+ddOa71WL/1wV3H4P42+x3wm
H/aErSor1a3NY4GU40qr2kp3oBcES90BAAAAVCvVkCdklBmb11dVCBRM08j4
Cm4auSpR4UY/tYg/Qj+15ms3ilGF3+4vZAvt3s2llowkHTqHfETOvCZzj2Ta
dEJdwMGsdk0HM65qAQAAwFpGWYgZRx2MWVQWTl9QppvKsMymscXD8XbvJnyI
KdncIaOUW7LRz0s7rQ17wszcjbV3opuCfS6do1fGIDE0jwViR7XZtfZEOFGt
ojsoAAAArHWlAtNDhqJ+8wgKusWqtlKBUC6W272bcKoBPoX/OUO2+pl8S7k3
4AwU88VabY1er2GWus4xw6IcegenvRVbHykECovSQq9SNpVdHQ1RAQAAABas
Vq2loim7xi4flXPaqsuGZUaZkQqEcglLA7QNvfL0+lP414v1zY1btdPaoDtY
LBQ/WPM/n3q9nk1m3WY3u1Jw84UA9YTaY/GkYimsFAwAAABr2am26omMx+yR
8WVzBpb0iyg16SX6oCuIsRPtQgVawBHQi/ScMf9UC9CNsWCsVCg16vjRMKgE
oFqJbY7UvEywaGBmqQsFs9odmtwCAADAGletVJkSwOLRCXWc4RPSYSmVAD67
b3V3lVyeCtlCwBXQi/WzT2ifWrJNYQ57wxT+1+CY/49BVSo7qs1ldGmFZ7gQ
IB+VG6VGv92P7qAAAACwxjFLA+SKlPN1IqYEmH36lP6rGlf5bL5MMoM+KkuD
XuRivhh0BzXTGs6wH9kIMy4r4otUShjHcmZMd9Bs3u/w0wslH+EObGMnBZ9a
KbiIAgoAAADWLmaoebEcDUSbT5xSgpKPyu06ezaVxVWAxca2+vRavZopDSe7
SoellGkxiP0TsaskJ6NJu9befBWAHdvGzJ5wBanOavfOAgAAALRNvV5nh09Y
1VaFQMEZPq0cU1qUFmZGMJoCLRr6EeRSOQr/VIVxzvzLR+RMX9ZQnDnzjzH/
LaAXKh1Pe21epjto03LJ9PJSCeA2uRORBBVceEkBAABgbWJmBNfrbF9Q+ahc
PMBdaorpCxpg+oIiL51b7CtP4d9n86nGVbMn/NJPgcoxeuXp54IhWPNCL2kh
Vwh5QhaVRTmu5ExvYVvd0qFOh3Q+k0d3UAAAAFizKGFmU1m2BODkJWG/0CA1
RP1RhKVzi21f4zK6mpdjoJ+CRWlhBl+t1Sb/Z6XxAdWqhWzBZXKpJlTc43mm
qqVX2Gv1UvHV7n0FAAAAaBuK9xQ43Wa3ZkrDyUuyYZlBYgi6g5Sp2r2bq0St
WkvH006DUz2pnn3mX9QvYier0meZMSo4878wjZlJwZk8HbRmhZkzw51KWtGA
iEoDKnipsK2U0BcIAAAA1i62L2jzsqqnV57NZ/Popn42mJmq1VoqlnKZXAqB
Ys6wn390qqHPIvmfE8V8MRqIWtVWOqTP2B3UJDeFveFcOodqCwAAANasQq5A
OZ8ZONHPHTihmdJ4rV40ojwb7Hlpu9YuG5FxXl7FmMKmsdHr3+59XFWYSe7F
ks/u0wq1Z1gmrF9EVRjVXGy3WyysDAAAAGtQrVYr5opBV9AgNXDCkmRIopnU
uEyuTCKD6cALUClXktEkMzV1TCkamDMihQout9nNLLuGMf/nFLvmdTFfjAVj
VF5x+lyxl13oRjrag+5gPptv9/4CAAAAtAFFJqaJijtkkBhkw7LZZ03FA2LV
uIpKgFQshSaKraMXisJ/PBS36+zMSzowd8G1mfCfTqTbvZurGVN8RZJOg1M7
zSx40bxMmF6s99l89FNgVlvAgQ0AAABrT7lUTkQSBukZWqkzDWpUlkwyg3Wp
WsGs8FWuUsVEL5p4SMwZf0Lh32V0YW710ijmilTY6kQ6TmF7agjWTNvVVDSF
hrcAAACwBtXr9UqJGa/i0Dso8M8OS6IBZoFgo8wY8UVKhVK793S5ozAZD8WN
UqN8RM6ppNgpFRRKMexnadRrdfpxZJNZqrk0k9xWV+IBMf2MdEKd1+bNpDKY
6g4AAABrDXPiulKlEoDCEqcpEJUDEr7EJDcFXUHE14/SqDcobVKVZFFapENz
LqMwkymmND6bj7Jou3dzzaEDO5PI0IvPjHAb4V4IoPJWM61xGp2JcKJULGFS
MAAAAKw17JqqLpOL8ipngWAKTnRjyBMqZAs4WcrBhP9SORaMGWVGzml/ehmZ
M/82L4b9tFGpUIoFYka5sXnla9qkfKlJYWIWvy6V67U6xrkBAADA2sF0UKnX
KSwFnAGdUMdJSmz7FK/Fi/PYHPSKRX1ResUkfAknW+pEOr/DXy4ywbLdu7l2
MSPcypVMkrkQoBVqJYMSTm1LJQDd7jIyDa/onu3eXwAAAIClls8yC6oapIbm
3vWaKY3b5KaYVK1U272b7deoN4p5Zp6pUWrkrKRG/6WKgMJ/Lp1r924Co1ar
0c8i7AlblBbFWFN30CGxakJlVVvD3jAu1gAAAMAaVClVQp6QUWZsXk2VXbs2
nUhXq2u6BKjXmRmmFBfPuICCVqgNOANY5Gu5qVVriXDCprXJR+WSQUlzayB2
/etSoUT3xFggAAAAWDvYGcGxQMyqsnLnAgyIZMMym8ZGOardu9lOTIdJT0g7
zR1PwmbIoDvIjCfHXIllhg5sCva5dC7kDunFeqbnbdMyYaoJFR3eyUgSY4EA
AABgrSkVSvFQ/IyrqSrGmA7qsSAza7Ldu7nUKEPmM/mAM0ABsnnYD4V/ypaF
bAFnj5ctKgGofKOj16F3qCfVzWuE0QFvVpgDjgCzUnMVPa8AAABgDalWmAWt
qATgLA1Am2xEZpQbqUBgFlFaM1m3XqsX80U2/Dd3ktGL9GFvmO7Q7t2ElmQS
GbfZTSVA80rBTM+rSY3H6jm1UvCaOcIBAABgjWOaAtXqFJM8Zg83I/XPzHIV
6YKu4NoJSIVswe/wU2Js7iRplDILpa2dl2IVYBteRf1Rk9zELNww9wfKtAYa
llqUlmggWqthOgAAAACsIdVKlV1HielyOXfEC3PSW6z32ryrf6RE44NcKuez
+zTTmuZhP2a5OewNl/IlpMSVhS0BEuGE2+zWTmubJ7yzS2DTEZ6OpyslzAgA
AACAtaJeq1O49dv97KD32RcC2CmTTEBKpKlSWJUBmB0xzlZAnHwoG5YZJIZo
IEoxst27CQtEh3c+k6fD2yg1ykfkzZOC2bZX8VCcfsqN+io8wgEAAACaUbCv
lCpRP7PWFec0KbuIkl1nzyQzq3Ktq0K24LV4qcxp7hhpkpsoFq7WwmftYNe/
Y7qDqm2cHzE72k00IKLilx3t1u6dBQAAAFgijXqjVCglI0mr2sppCkTBWDmm
tKgs7Izgdu/pucRMf7B41BPq5mE/VpU1GoiuqRnQq1u5VE7FUl6rVy/RN69/
Jx2WUvHrNrmZ7qAlTPQAAACAtYJiz+m+oJxpsFK+lOkLGoiViqthJHytWstn
8hT+NVMaztlg+aicPfO/yoodqNVqzLLOnhAVd1TSige5618oBUqb2hbxRQrZ
wiqf8wIAAAAwSyaZsWvtzYOlmU44MmPUz7RMafc+nq18Nu80OCkEcjvDDIgs
Sks6kUb8W8Vy6ZzT6Gxe/OL0vGCfzUflYbt3EwAAAGCJVCvVbDLrNrm558b/
MSU26AoWcoV27+bCpWIpl9HFOQPM9oR06ByJcKJaxpj/1YyOcCoB6DA2K8zN
CwSIB5hp71QCRwNRNH0FAACANaJRb7Bj46kE4AyTkAxJ9GJ9wBXIZ/MrLhrV
qrVMMkPhnwIed+zHODP2IxlNYhLoWkCHbjFfpIRPOZ8O8ubuoOxKwSFPKJvK
4pAAAACANaKQLQScAeWYsrk3DkUmr827snrj0K7mMjl2dgNnzL9sREY5MJ/O
Y9jPmkJ1brlYpiNZK9Q2H+RUFdKBQdViOp6u1+sr6FAHAAAAWJharVbIFYLu
oEFioCzEuQpAJQBFo0xixfQFTUaTDp2DM7WZPpaPyt1mN2U8Cv/IeGtLg1km
jLkQ4I9SYSgbllExyCkB6IAxyU0hT4ju1u7dBQAAAFh0jXqjmCuG3CGjzCgb
kXFWB1OOKakEoFzNXAhYrmsnUaSn3UvFUg69g3Mtg74FtophFzhr955C25SL
5UQ44dQ7tUKtdFjKqQLoFr1E73f46ThhZgQs10MdAAAA4FyplCqJSIJdQZUz
TIJusaqsmURm2XZNZ8f8W5QW+eicjkb0jajGVRT+S4XSSrmEAYuHXQKDudol
NVDgbx4OpBAobBpbKpqiYqFexwEDAAAAqxlFI4r37Cl0SkGzo5FoQEQlgF6s
j/giFJ/avadzNT6gYB8PxS0qC1O5DMy9eDGu9Nl9uXQOQ7uBMTMWiLJ9Op52
Gp2cGeLsUDHZsEwzqfHZfNlUtt27CwAAALC4KCHXqjUqAdxmt3pyzoK5VA5Q
nDbKjAFnoJgrLpNz6WzNEgvGbGqbfHTOZQsJX6IT6pjwn8otk72F5YOO83Qi
7bV5DRIDBX7OzBfatNNal9GViCRKxRIuBAAAAMDqRlVAIVdwmVzNfUHZpkAh
V6iQLbQ9VNN+lovlZCTJTluY3epHPCDWCrWU7jCQGz5GqVCK+qMmual5pWB2
jTD6VDQQLeaLtRqmjQMAAMBqxo6RCDgDOpGOu3DSzIxgr9Xb3tERFMYo20d8
EYOEO5CbbVsUcoco3SGzwceg45yOonw277P5dEIdtzVov0jKl6on1Wx3ULSN
BQAAgFUvn8mzfUGZlolzcxEFbLeJaadZrbahow7FNsr2IU/ILOcu7couXkzh
v5AtIPxDK5g1I9I5OmbMCjNn5svplYJtGlvEHynm0B0UAAAAVrlysUwx2yg1
Nq+dqhxXOg3OTCKzxE01T/VyD0T1Yv2cvepnzvxT+A+6gjhVC/PF9L8KJ2xq
m3JMSQdS82Uvg5SpK+nYW86NcAEAAADOEttXPxaMWVXWMy6catVYE5HEUu4P
07/RFdRMaZjpybNauNN/qSKI+qMra8FiWCaYye+1GnPNyxXUiXTNBS+VAOyF
gGQ0ScVCu/cXAAAAYBFR5I4H4za1TSFQcAYCsf3So4HoEiwNQPGsmCv67X7K
+ZzwLx+RG2VGCv+l/DJrTworCrscNhW8dp1dPaFuLgHYlYIDzgDTVwp9gQAA
AGD1qpar6XiaLQGaVwczyo0UmYr54uIlonqtns/kQ+6QdlorHpjVqqVfKOVL
KZKFPWEs7wvnBFWyqVjKZXSpJlTMBJPm7qBCLTsFHg2mAAAAYLWiRETZngKP
x+xh+qXPLgFmBt5TIgq6guVieZGuAhRyBZ/dR7XGnPA/M+yHrT6YfqQIYnCO
MNNMcsw0E2532X9c+ZKPys0KMx14VALgwAMAAIDVqlqpZpNZv93PHSDdP7Pe
lljnsXhyqdy5PQ9fqzKjst1mt2Zaw730QBlMaY6FYstuVWJY+aiipOMqGU3S
UU3lLWeBAGZR7FG5QWKgz2YSGaYKAAAAAFiNmFCUL/kdfqbx/tzem+wESYpD
TF/QczQJl8I/VRxeq5ceefaAf/pYPiK3qCzRQBTDfmDxsN1BfXafXqKnQ45T
gdJ/2UZYiXACRSgAAACsVkynlGqN6cApmpmHe3JOLKcqwK6zZxKZczIumqIX
FRSc0MXWGhT+KXSh1Q8sNrYLFh1sVpWVM/H8dBVA5XDYE8bRCAAAAKsV04ez
WGITEacpEG10C91Ony0Xywt+imq1mklmnAanalzV/Pg2tY15/NLCHx+gdXTA
08GWiqXY9lOcFfHYhed0Ip3L6EpGkmdz2AMAAAAsZ/VaPR6K27QzTYHm9khh
lgZQW2OBBY7MZ9sNuUyuM4d/DRP+6T7n/DsC+Bh0wBfzxZAnZFFZlGPK5pWC
5aNyZqVgX6SQK9RqWIQOAAAAVicK6g6do/mMKG0mmYmy0HwHAjUajXQi7TQ6
Oa1+2Ihl19pT0dQifS8AraBj3mlwSviS5mOeNvWk2m/3U6WA4UAAAACwKlXL
1Uwi4za5KfY0D4owSAxBV7CYK7b6aJVqKpay6+zMsKK5A62VY0oqNCj8o9cK
tBfTCCuVpQPbJDfJR+Scw14yJFFNqOgYjgVizLp4WCAAAAAAVp16rU4lgMfi
0UxpOAOBpHypXqSnpJTP5D/xdCiFJYr3FPKV40pOpqJbmPAfS2HYDywH9TrT
HTQaiDr0Dqp8uRPhZwaqmRVmOvKzySwOWgAAAFiVKOH7Hf7muQC0UV3gtXkp
BX3kAsENJlCx4f+MPYWcBmc6kV7abwjgkxXzRY+VqXybh6uJ+kWyYZnb6E7H
01QjYzgQAAAArDK1Wq2QLYQ8IYPEwFksiSI9BSSn3plJZGrVM8yLZPorhhI2
tU0+ym2xrhxTuk1uCv/o8w/LEDspOOKL0NEr4Uu4CwQMiNgLAfS+WLzVsQEA
AADapV4/1SDFLDfLRmSzLwRQRaAUnFopqVKeMyiachHTSlR9hlai6km1y+hi
RlAg/MMyViow7XDpWNWJdGfoDjrCTITx2/3pWLpcQhUAAAAAq02lVKEsZJQZ
m0/mUzSyqqzMHN5SpTGjVq3Fw/FTKyvNHTsh5UvdJnc2lW33NwTwyaj4pcI2
6AoapUY6mJtXCpaPyG3aU+tWfORAOAAAAIAVqFFvUBDKJDMOvUM5phQ2jYjW
i/QRX6SUL7HrCFuUFumwtHnYj8/uo/B/xvFCAMtOgznyKdsnI0mnwdl8MYs9
+HVCnd/uz2fy7d5dAAAAgHOJObFfq6XiKY/F09wdRTIoMUqN9KmQJ2RSmOQC
OScmaaY1brObMhLCP6w4VPym42k6vA0Sg3yEewlMPCjWCrV0eCciuBAAAAAA
q1AhW6Cow3RHGeR2R5GNyJpvZ6cJeK3eVvqFAixPdOiWCqWIL2JWmBUCRfPB
Lx+V06eigSi9QVDkAgAAwGpSr9fLpbLf4deJdM3DITgtE+m/6kk1u1gAzovC
itaoN6qVKsV7Kma109rmg18yJKHSwGVypeNplLoAAACwylCep1RvkBikw1JO
EJp95l8v0VOlgDOisGpQGZtL5ejgNyvM8lF58xoBzErBWns0EC3mi6h5AQAA
YDUpFUphb1g7rW1eHexUd5RRudfmLRaKOBcKqwzb4damsZ2aC9M/5+Cnotgg
NYQ8ISqTq5Xq7Na4AAAAACsXpXrKNnadXT4iP+PJf61QG/VHEf5h9WH73Bbz
xaArqBfrudMB+pmRb8pxpU1rS8VSlXKl3fsLAAAAcLYo/xRzTPjRCXWcXkCz
u6Nb1dZoIMpZHQxgdajX64VcgY5wu9ZOaZ9bAg+IFQKFSW6it0kunWv3zgIA
AAAsHBP+ZxYF1kxrzhj+Z3cEovwTC8aoWKjXMBYaVqFatZaKpZwGp3pSLeVL
m4fD6UQ6n81HJQAVwpgRAAAAACsOO/LBZ/dR+G9eEZVzC7M0wJCEbQFUKpQw
FghWpUadqYijgahBapANy5qvhSlGmQsB8VC8XCy3e2cBAAAA5oFpfpLOea1e
nWjusJ9+oXxETgnHY/Zop7VSvnT2p+ieOqGOPkVfW61U2/1NAJx79Vq9VCyl
Yim3yd3cHVQ8IKY3iF6s91g8mUQG7bAAAABg+Ws0GhT+s6ms3+5XT8xZ/5fJ
NqNyq8oa8UXymTzdwSg1Soels68FiAZEqgkVhZ90PF0towSAVSubzPpsPiqQ
mZWCm8YC0bvAZXQlI0nmchgmxQAAAMAyxiz7VSy7zW7lGHeeI3vmP5PIMCP8
G8xYCGYghMTQvEYqbQ6dg0qAdn83AIuoUq4ko0mL0tI8FohtjUXvjrA3TIUw
RsQBAADA8lSr1rLJrNPg1ExpOKleMaagSE/h/8Mw0zjVHd2isigECk74oVus
ait9tlzCQGhYnahYrpQq9KbwO/x6kX7OcLiZEXFUF+iEOnpDJSNJzAgAAACA
ZYWd7ZuOpdkz/7PDP31MYd6hd1CGaT6NWa1U48G4TWOjr+JMCmYHC8UCsVKh
1JZvCmAJ0JuikCuE3CGL0sJcNZu7RphoQERvH3qDRHyRQraAsUAAAACwTFD4
z6fzFPKZkQz9c85hsmfyP76xeSqWcugczPnPfu4oCJPMRMmHYg+GQMAqRoc3
lc/0LpDwJWdcKVsr1PrsPmaNDHoj4K0AAAAAbUWZhAI8hXzluJITXdhpjLlM
7uM7mVQr1Uwi4za51RNq7tIAwzKj1Mj2BV2y7whg6VXL1WwyG3KHTHKTfJS7
WDbbINeutceCMfTIBQAAgHahEELhPxFOOPQOSiyzw794UEzlgMvkanEaLzt3
wG12M+sFzC0ipMNSnUhHJUA+k8f4B1jF6jVm+nw0EHXoHJT2OZNo6H0hH5Gb
FeaAM5BNZdEjFwAAAJYYhX9KIKlYyqa2cZb3FfWLVOMqp8H58cN+muWzeb/D
LxfIuU2B+oUUh3w2H6Ujykg4+QmrG7t8Br2JmDdC06A4hUDhNrkzyUytVsN7
AQAAAJZMucR07zHJTPIROSeiaKY0HrOnkCvMdwEjyjOFbCHsDRskBk5NQUGI
SgCHfqaJEM58wqpGb5xirhj1R61qK3Nlbe7UeHYpDYvSEvaEK+VKvV5v9/4C
AADAKtdoNJhRCv4oJRDp8Jymhcwo5Sm11+LNJDMLOzPJLJBaKFGwYfqij8i4
Y4rGlE69Mx6KV0oVnPmEVYx9lyUiCbfZrRPpmtcIoLrbIDX4bL5ULIU2uQAA
ALB4GnVmzD8lcLPCzF2xaIA5Re+xenKZ+Q37acZOKzDJTQqBgjsdYEhqVTFL
AzAlAKYDwKrGVAGlcsAZMEgMUr6UcyGA/ksVt11nj4fjzMoaeDsAAADAIigV
SrFATC9uWq6IbVFo8xXzRWaF37PDTC4oV3PpnEPvUI4rOZmHnlon1EV8kVIe
TYFglWMq7tKpWfayYRmnBBD2MxPk9RK93+Gntx4uigEAAMA5RNGCAkbYGzbK
jJzwLxmUUCD32X2U2M/VSUh6unq9no6nPRaPelLNmQ5A/zVIDUFnMJ/NY/wz
rHpUAqRiKa/Va5Qam7uD0vuRqm+32U1lQqlYwjsCAAAAzh4linKpHPFGTDJT
c2dyzZTG7/DnM/nFeOpcJue2uOkpOCUAbTqRLuAMMBONa/ObaAyw4rAXAiK+
iEVloRJAPCDmvB3YScFRf3QBU+8BAAAAOJg5ub4w5W1uZ86TQr1Iz67PtUhn
HZnSo1im+oKenTvjYFCsmlB5LJ75NhoFWInYprvZVJaOeTryOW8HdjqAckzp
NrsziUy7dxYAAABWsHw2Twm/ecw/xW+DhBmEU8gWFnXIAcWefIbZB6OUO/SI
7QtKgScdT2PYA6wFtWqNCt6AM2BWmJsvBFAVwHTK1Tmi/ug5mYwDAAAAawq7
ICkFb8r53GE/fIlWqA25Q4VcYWl2hsJMxBdhGqEMc6ceqyaY5cawKCqsHfTG
jIfiNo2teXYM2x2UimV6e7JvCswLBgAAgBZR5Kbwr53WcppwMsN+xPqwN0wh
ZMmiBTv44YytR0X9InbwczKaxFUAWAuYCfK1Or0jAs4AvRk57whh/8wyYSNy
u9ZObwpMkAEAAIBW5NI5v8NP4Z875GZAbJKbQp4QM7pgacM2uyhSLBijVKMY
nbM0AH1MJYBVbY34I1gUFdaOQq5Ax7xNY1OOKZvHAikFSqqXQ+5QPpPHVQAA
AAD4KPVavZgrUvjXi7jnFZne+yKm9z6F/3btHsX7dCxNJYBqQsWZjywbkVFt
wrZAwchnWCPoHZGKpZwGp1aolQ5zlwmTDEnojey3+7PJbKWE0hgAAADOgLK9
1+pVT6qF/UJO/jdIDPFQnPJGe88lUrYvZAsei0c5puSkHaoI6MagK9jGCgVg
ibErBUf8EYPU0Lw2H72R5aNys8KcCCfobu3eWQAAAFhessksG/45kwopV1uU
FgoY5WK57acQKe0wXVBSOcr5OpFuTuDpZ3ZVO80sh5RL59AIHdYIeleWCqVk
NOkyujRTGm6z3JnpAPRm8dq8mUQGY4EAAACA1Gq1fCZP4Z+Z8Dv7pPrMyUOj
zBgLxCj8t3s3P0SBp5gvBpwB2jfZsGz21Qraf9WEiu0LWilX2r2nAEuE3hQU
7+ldTFGfAn/zMmFUGrhMrlQsxazZgTFyAAAAaxtlaQoGzesKiQeZCb8UKpZt
d82oP2qQGpqjDlUEDr2DSoAPcLIT1pJKqZKMJM1KZoEA7puCncUjZmbxUAnQ
7j0FAACAtkkn0mz4nz3sh11R1K61J8IJpot4fZnGaLYXukVlUQgUnKhDt9jU
NnbOQrt3E2CJ1Ot1KgGyqazf7teL9Zxp8vS+phJAM62h6jgVTeGtAQAAsNbU
arVsMus2uSn8zx72IxoQKceUVpWVwv/yTwi0h+xySLTPzSUAfRexYAxnO2Gt
YRbOdgdNchMzU56zike/UDGmoLcM2y+Lqe6XaX0PAAAA5xL90ac//Q6dgxub
Z8b8UzbIZVbSFNpULOXQO5hLGHM7F1HyYfuC1mt1zHyENYXev+l42q6zUyHc
vJAfbTqRLuAMlEtlvDsAAABWv8YH6ViaAjOzctCsEQJMq5BRucvkothA4WEF
RYJqpZpOpN1mt2qcO4tBOiw1So1szmn3bgIsHXbh7Fw6F/aGmZnyIzLOW4Pq
ZfWk2qq2xoNxXCMDAABYrdj+mRT+nQYnZ2AAFQIUBlxGJvxXq8t0wu/HoKiT
TWWpBOB2MZopAfRifdAdpCzEdD5ZMWUNwNlq1BuU7aOBqF1rV0+oOSUA/Qag
usCsMFOBnEvlarUVc8kPAAAAWtL4gG2eb1VbFaNzJswybTPHVVQUFPPFFd0b
MJ/N+x1+hUDx/7P33sFRXVm87t/vVd1Xt959t+p6cs7B9jjnHLCN09ie8TjN
jBMmGRBIgAAhcs45C5NB3a1WanVQB0mdc84555zlt44OlkVLKAISaH+1ihLd
p0+f7j5779/ae+21KmKBQOeAd+M0ObOpLIic22hpA4G4ISSiCfCOsdSgHfwK
BxkMWgdWOKMv6g+1DgQCgUAg7hhA90b8EYPMIO4UV8z8S9lS0Mb49PhtPfpj
BYJTmSHLoWILHBy5RWWZyhlNEYibBAj7TDIT8oSMMuPgfFnQOuBBg9Tgd/pz
mdyUTfmFQCAQCARilMBoXsgXQt6QSWHCxP+A2T8BVaDsUbpMrmQseVvP/PcD
nyKfzftdfszTYQzydFhScAHCvjAcc1t7OgjEWMGzg0YDUYfeoeQqKxxk6BZE
DJFGoHEYHLFQDO2XQSAQCATi9gVULgzlsWBMJ9FV7AHkU/gg/mG4x8TwnTXj
VywWI/6IXqqvTH7SzhV0CIwyI1YaIFe4wz41AjEasqmsx+JR89TgAgyOBYIH
wUfG0/+i7KAIBAKBQNyOwCCO1ckVaED8Dxzr+R18RbfCY/Pksnfgcj+e/CSd
SGNpjtiVOU6xQqg8FXwtKO0JYhqCLwREfBHQ+RXRgP1lwjRCjdvihgYCB0/2
9SIQCAQCgRgtMHDnc3m/06+X6Csm+vCUOD67L51M38FhMPANxMNxu8Eu75ZX
1EIVUAXgE3ltXvAR7uBvAIG4HtA5xENxt9mtFWrBC6hYBRDRRSquyqa1hX1Y
dlDURhAIBAKBmPqA9M2msyFvqHInbDsmfdUCtcfqmfrlfW8IyVjSYXCAC4Al
BbpW5IAT5LF44ItCmQ8R0xBsmSxf9Dv9BmllWoD+hQCDzBBwBVAbQSAQCARi
6pPL5PwOv7xLLqBdkwmTT+Gr+CoY8YuF4jSZ0wNXCL4Nt9Wt4qkq055QsKoH
4B2kE+nJvkwEYhK4WhMkEodWgG2WqdgO0H61MghqIwgEAoFATGXKpXIunXNb
3BqBBgt6GSD+sfweQo3f5c+ms5N9mbcUcAHSybTX5tUKtRWrAHgVVLveHg/H
J/syEYjJAS+f57F69BL9YC9A0IG1EYvaEvRgW2bujERhCAQCgUDcMcDQnE6k
fXafiqviU66JeBfShVqRFp4q5KZF2M9gsqms3+lX89UiuqhiIUDGwcqfpeKp
6bMsgkAMBE8UFvaF8UrBg4PlRAwR3oGAp4AqaCAQCAQCMXXIpDIeqwdL9VMR
ykvhwdgdcAdu9wpfEwE+eCFfwPKCSvQVM5zwX3GnWCfRxUIxFOeMmJ5AA7ka
LGdxK7nKCv2PdyOCDoFFZYFmMtkXi0AgEAgEAivvm06kHQaHokdRIW4xZSvW
4Wv3k32Zk0xv+eokJ2gYCVMycIkE/hYzxAaZwe/ywzEo7SFiegJ3fiaZCbgC
JoVJwpJUJM4Ck7KkBqnBZ/fBYSgWCIFAIBCIyaJULCVjSZfJpehWVAzWoGn1
En3QHZy2YT+DKeQLsVDMrDLLuyrzggrpQvCVQPyAtkELAYhpC7jA0WDUprWp
eKrB8XLQTOBxl9kVD8dRHT0EAoFAICaFVDzlNDkHh+xy27kGiSHsDU/bmJ/r
gcc5OAwOrDpY+zVfGngEEqbEa/NmU9NrlzQCMRAsHKhUBl9YK9IOLhOM7Qum
CfQSfcQXKebRdgAEAoFAIG4d+My/TWeTcWSDw36MMmPYF85n85N9mVMOXNuk
41hSIBVXVVEiAc95aNfZ4buFb3iyLxaBmCR6sUzCEX/EqrVCixhcIEDMEKv5
apfJBS1lsq8VgUAgEIhpQbFQTEQSdr0dhuaKqTkJU2KUG2HgRmE/wwBeQDad
xfKCirQiRmWQg5xzNS/oNCmUhkAMCdbPRBNOo1Mj0IDgr0gsBk6BskcJLSUW
iqHsoAgEAoFA3FRAuyajSbvOfs3c9XfzciaFKRKITPY13jZgQQ7CIYIcBB0C
q9oKLgAKoEJMc4r5YsQf0Ul04k5xRcgcviNAzVcH3UFwqFFjQSAQCATiZlAq
leKhOEhTKVNaoVolnRKz0hwNRNGs9ejJZ7GkQAaZAdM213pSEqYEnCl4FuU8
R0xnesu9hVwhFcO2Gg0upQ0tRUgTyrvkNq0tFkRJdBEIBAKBuMGAsMfFv4wj
G5yaD8Q/jL9I/I+VfC4f8UdA6sN3OEQwlcwY8oZQAlUEIhVPeWwerUiLZdAd
lB1UxpZBFwSNJZNC2UERCAQCgbgxlMvlWChmUVuE9GvDfvp2rcLjKFhlImDf
rcoioAoqVlUEHQIQPEFPsFQsoa8XMc0p5rGdR6DzQe1XbAfAGgtVoOKpPFYP
uAClEmovCAQCgUBMiHKpHPFHYNgVd4oHh/3YtLZ4KI7CVCYCfHvgQGF5QStW
Adq5QppQK9SCqsESniNJg5jG9JZ7oaWAvPc7/eAXV25BasdcABlHZpRj+cdy
WbRqhkAgEAjEOMEq8gSiQwaowFBrVVsTkQRKxD1xQNgkY0m73q7sUWLhDQO2
OuKbHL1WbyqWQhHOCEQunQu6g9ApyTlDZwfVS/ReuzcVT6EaYQgEAoFAjJVS
sQTi3yg3VtTixLbd0YU2jS0ZTaIR9kbR29ubSWbcFresS4ZVVRvgAvApfBlb
5jQ504k0im1AIMrlMpaFWGeXcWQCWmXgHJiiR+EwOrKpLHjWqI9CIBAIBGKU
wKAZ8oaMMqOQJqwM+2FKQIsmoglUpurGUi6VM6lM0BPUCDUVWy0wF4CDbXLE
FlxQtBVimtOLzU5AY4E+yiAzQI9Uof/5HXwpS6oT6/xOfzaNamojEAgEAjEy
eGpKEP8VAys4AopuBV6jFqnQm0G5XM5lcwF3wCg3YhsuBoQ3gAsAkgbLC+pF
5ZURCKyxFHKFSCACPZKSq6ysEda3TKkRaJxGZzwcR2GKCAQCgUAMAwyUIP71
Yn1F2A+uPx0GRzqRhpF3si/zzqUXK7UQ8UfABcCyHQ5SNXhe0EK+gH4FBAJI
JVJui1vRrQDBX7EjAFuvZEksaguWoDiHNRkUPodAIBAIxGACroBOrKtIRwmj
qpQt9Vg9SPzfAkCilIol+KpBt8DXPjjVIVb21BVEpQEQiG/7FgLyWSxTgVll
lrIqqxPiZcI0Qg10X9BkUIEABAKBQCAGkstiiTX0En1FRVp+Bx8Ep9vixvaf
opj/WwUIlXgkbtfbFd2KilUATM8INF6bF36Ryb5MBGLyAZcZq1EYjkM3BU1D
xBBVeM0iukjFVVnVViw7KHKcEQgEAoHoI5/LhzwhtUA9cOcpr50noAqUXCWM
qtjUGZr5v+UkY0mHwSHvkmNJga6VNJhTZnVn01k0pYlA4EA/5nf48UmMwbFA
0IiMcmPAHbi6EIBCgRAIBAIxvfE5fKAnsRGz/ZrhUtGlCLgCuXQOxc1OCuBz
gcIHnQ9eWIWYgR8L/AK73p5JZib7MhGIKQEWO1cqxcNxu84uZogHVwrmd/CV
PUrwqaHVoAkNBAKBQExPYLjMZrI+u08r1FbknMSKz4q04BdkU2iGeTLB8oIm
M16bF36OCj2D1zwFFwAED3LQEAicQr6QjCWhWzNIh8gOKqAJwHE2q8xBdxDr
3JAXgEAgEIjpBCb+01m/06/iqkDtV+yYw8V/IVdABXSmAiBU4JdS89Qiuqhi
hyNWi1lrBcEDsmd4LwCexVOgIGcBcWcDd3ixWAx5Q2alWcqWYmW1B3oB7Vhl
bZ1IB251KpZC2YwRCAQCMU3AxsdCEcub16Oo0JMg/lU8VdgfBj2JQmSnCPgO
x2ggqhfrB4sZcadYJ9bFQrHhN2hjmVJyedBFaM4TMR3oLfemk2msrDZHVrEK
gE90iBliq9qaiCQm+0oRCAQCgbjp4CElLpNLzVNXbCyFAdEgNWBZMrI5NPM/
pYCfAyt45IuAYgHBPzAWCP6GH04v1fud/nw2P6S8x5Z7Ulmn0RlwBVLx1K2/
fgTi1oNVCk5moF2YFCYpq3IhAMtszJIaZUaf3ZdJZUaZ3wyaWCqWQlGRCAQC
gbhdwCJASmWQfx6LR9GlGCj+YSgU0UUwFAbdwVKphEJEpibFQjEWillUloqf
7+qWDTEWtQWCZ7CSwWO9FN0Kg8wALgBa2UFMH8BxjgajNp1NxVNVVDbEs4Oq
eWqnyQktK5/LD9P1Yctw4IP7Ix6rB/64lR8BgUAgEIhx01vuzWfzDqNDwpJU
hP3AIKgRauKhOJr2n+KUy2XQHg6DY3BUA/ymEqbEa/dmUpVJgfwOP4gf/ACb
1ob8O8R0o1wqQyvQCDSDY4FwM0gNEV9kmOg4eAr8CKvaqhVqBzcxBAKBQCCm
IKViKRlLgvbDSkpduw4OmtCsNCeiiRH3kCImHXwbbyaZ8dl9FXu38QyHeF7Q
ZDSJhyjAbxpwY2Wd8SPhAPgbVXNDTDeg4eQyubAvbNVawXeu3EfTF/2oEWpc
Zhf0k4PDe+CRbCqLbyiWsqTQ+rLp7KR8EAQCgUAgRgOWFruIpcXGJo3Z1wx8
WOh4p9isMkf8kcm+TMTYAPmB5QUVagcXPMVcAJ09HomDzodftqKsM1bWwRlA
hVAR0xBwhxORhNPkhIaDlQm7dhkUK3rSrQD3ORKIXC0T9h3Q3HwOH7QsvDAi
tliA+kwEAoFATFl6v8Vj/q0aq5AuvGa860sdY5QZUQaM2xTw7AKugFakHVzt
FH5r+MXB4zMpTJW7vOFHlxuTseRkXz4CMRn0dYlhXxg0/OCEurgXoBFogp4g
aH48HhIaWtgfVvOvJkzAkiTThW6LG0VLIhAIBOIWM8pE7sVCMR6JY+kv2NLK
1PFsmVVtRRmwb2vy2XzIGwInrmIVAEtv2CmWMCViRuUkJ77oA/oHJQJFTE/w
nbzYQoDRqexRDqx73l8DRd4lt+lssVAMDo6H4xa1BR7sb0rwB7gP0UC0VEJx
dAgEAoG4deRz+XQijQftD3kAnjQ+EojAyAU6cOAUMShAEP827dXR7RZfOeLG
Ai4AiHk8w+H19jYONpfZhQKYEdOZq8nQrB6dWCdhSQbvCMArBQfcAfgX/q54
VsbBulBofagLRSAQCMQtA5S/2+q2qq2g4QfvVrsa8x+Km5VmbFxrv2Z2C4Qi
vDAZRREgdwi95V64DUClCKiCwfEMQ2c7kWGFHib7whGISaaYx3LqmpSmITcF
Q4MaXDiA+13OZEW3AnpRtJUegUAgELeMoDuoE+nEnWKLyhINRCvmoAq5QiwY
04v1Yoa4YnUbX9dGGWDuKHr7Ar36tnhjaz2jcAHkHLnL5Jrs60YgJhm8GHo2
lfXZfdhWmoq2046tllZ0oQO30jiMDlRQD4FAIBC3AGxuv1RyGp2STgkMTDK2
zKK2JCKJYv5qGD8WE+4JGWSGipjw/uSQcDCK/b7zyOfyYX8Yy+9KGWK6cvDE
pklhqkhygkBMWzKpTMAVMMqN4BoLOgQjtiC8R1X2KOFVaBcAAoFAIG42IN2z
6SyMU/3DkIQpsWqsmAtQKIJhqS1khsqhqi/m32FwoMQvdyr4RgAQJKPR/2Aq
ngr8BVTJFIHAwYuk2HX2q0VSrjPtX2FWrRV8B7QLAIFAIBA3lUK+EPQEBxay
5FGwfHQ2rQ0eBwWoFWorykKBwYjmNDozyQya770j6S33wk+vEWoG//TXM2wb
CEiXJKpkikBgYMX1SuVcJhd0BVU9lcX1rmfQFfsdfrQEgEAgEIibCgxPNp1N
xpENjugG5a8T6UT0a8N+KHwlV+kyuVKxFBL/dyQg/qOBqFlprizxMFIIEHiF
2P5xFAyGQHwHKPmIP4JFAVFHFQUkZmAFNTKp0U6t4AGc2VQ2Ho6HvCHwHbw2
r9vidhldTqMTOmqP1eOz+wKuAHj0yWgSSzFU7v0WLS8gEAjENAbGjlQ8pRGM
dpoXhjBsp6fZhTap3amAlsgkMyD+pcwx5P/s9w19Dh8IjOHfAp8XLeQL4HuC
boG3SyfS6Xgabiow+BseAf0DzxZyhVKxhGIhELcv2XQWFPjAbP8jmowjC3lC
w7cjvBHBMVhV7mDMbvWoVWaBQM3hyBid4g6aoK2d29rGbafwqHQhkynp6VGI
xVqDzuZxBhLRBLQvaICYq47aFgKBQEw/YAgI+8LizsqsPtczJVcJYxmMaGiO
904lGUtaNVYpq7K+22gMXmJRWeKh+DDnx3ULqP2gO2jX201yk1akVfFU8i65
jC0DU/YowSE1SA1wGT6bD85WzBeRC4C4TfE7/XA/j6k1iRgiaBeJ8HCF1MEv
BuXvNrvVIm03Q9RE5Z1q69rdzF5PZq5sYtQQ6VUE2iICbTGRtpREX93UuZnM
3N/CPtveQ6HxhSypUW6CBnh1LQCBQCAQ04xUPOU0Okcz+c+j8NR8tdviRjH/
dzAg/uEnHv16UKW1YxtDwEMcfGYsL2K+mIgkfHafWWOVSHQMroLIFJ2l8Y5T
eg62cfY2s3aTWXvIrAOtnKPt3Q1U7mWGkNIl44k0OqXZZXZH/BGQK+jeQ9wu
FAvYDQ9KviJz2mjW0cAB99q8Q+6mB8UOp3VZ3EqpoYMjbaD07CB1riMxVhDp
Swi0BQTq3EbqV40dX/bZrMYO+HteI3UhgVpDoK0i0jeSGHvJzIs0PpurNKgs
flcA7dlBIBCI6UbYF9ZL9EPWo6kckjr4dr0dZfu5k+n9NhaMucwuk8IELgAo
eRlbJu4UY6ELlNHOXoJ0waKXr3USQQilEumgN6TVWDndckJr9wkya2dT5xoi
YxmRvpBAm9NInfWdYpnd2PE1gVpNoNUR6VtJnYfIzAvNHBpTLJPq3Q5fPJJA
NVIRU59yGSsHbNPaoBGNx5Vu4xplRvB5S6Xv499A+RfyhUQ0qddamRzpWTJ7
O6lzGYHWr/ZHY9DQ5jZ2QOM60MRsbOvh81UOqwcaLAq0QyAQiOmD1+aVsEZV
4ElAFbhMrnQiPdmXjLiJgGgBvQFyPZfOxUNxn91nUVvUfDV4AaMPYJAwJSal
KZP6flIRq4iqMvcwxBfbureTmVUE6rxG6py+mcmv+gTJYImCz1vO7tMqXzdS
15EYJ1s4dApPJdL6nX4UfoaY4uSyOb/DP6Yd9BUGfrdBasimsv2uNDTMkDek
FmpIVP6OJuYCrBFRxyT++w1fFKgh0I80sxksiUVlScdRDUcEAoG48+kt9+Yy
OavGOprJf25faLeiWwEuAJaYAqmvOx34iYt5rIxpMpaMBqNBd9Btcdu0NhAk
Sq5SzBQPc9vAU1KW1KazRQNROAOoIKlUT2QId5FZq4n0xWOcrsTdgQUEai2R
vonUeaaD28VTOkzOZDSJ5ApiygKtBnxnKVs6pp2/FV0uuNIGmSHgCqTiKWhK
HotHINSc6+BuIjOhHQ12nMfarMB9WEag7W1hkzuFWrkR33SMVgEQCATiDga0
UyQQ0Yl1YxqSVFyVx+YZfW46xJ0BSIJCvgAiJOwLe6wecBv1Ur2ap1Z0KUCi
DFY48F9QPiaFyWl2c3nK8x3cjaTOrwcE+YzPvmqk1hHpR1s5dJbYqLNjW4ML
xdtxA2M2n40ko96Ir9+iyVgmlykUC/C4M+gyuE0ap17t1OndRnfIk8wkS2Nx
ukvlUjqb9oS9Jo8FTgJm9ln90UAun8M8u1IxkU4EYsH+dw/GQ8lMCl518z7y
dCMWirlMLnCZoRVAN6sRaKDzxGLqODLwjvGwOvCUR3QNeBQevNxhcLgtHm63
4kxbdz2RPr+ROpF2VGFLCNRtTZ1NFJ5CagAXAGtTt7kLgN3hmeSgOzyZLxZS
2TQ0BGgOOpcBbxpWvx2ehaY3jk8NrSmTz3rCPj3WYHXRVAx/PHNtA/dF/NDA
c4Xcjf6gCAQCMWZAzjlNThiPxjolJWVK/U5/LoO6sulHL+YI4IBISMaSAVfA
prGBsBlyvzDcLSwK90gzawWRPkHlP3DSchGBur2ps43KN0gMiXCimC9O9vcy
ZkDh87RCQg8ZNxK3RaAX2/1O0Azw+GnG+TUXtiw9vXpJw6rVFzZdYF/ROHTg
Moxen4D4t3hsl7tImxt3w0nAdjYdaBF2eMO+bD4XTydUVg1Vwui/gE45GyRm
Oof2gd4wegdQKpZy6Vwikgh5Q16r166zG+VGDV8jY8tGtdG+HdtWI6AKjjez
V964pjTQwKFYT2IQKFydSJdOpG/36mMg/tU2LU3a2X+HM2QsjV0XioeNbnOL
gALNYeXZ9XjT2NdyBO7/cCJaKI25J8kX8o6A60p3U/35zdUNdXyjGH8cHuRq
Bf3v3sRrFerF0Ppu9AdFIBCIMQMCXi/RjzUxBR7doeKpvDZvLpu7HadeETcE
3AWAuygdT8dCsYAzYFaa4XYauFO4uaXrEBkT//Nu6HTl7MaOKgJ1J5nVRBfo
JYZYMHbbBQIpreoDlOOv7PgAtzd2//sY/ZvjjDMLz6z8x/4vXtj6j0fXzXxo
zYwH62c8uva1l7a9v+jMqktcUiydGHGKHg4IJyIEYcvskzWv7vjwifVvwEnA
ntr41lu7/7Pg9AqGimNwmTokjHkNy/svYOmFtSxFV+y72UvEjQXPeQvtJQ9e
HPhmiXQymoyH49FANOwNQ9vxWDwOg8OisujEOhlHNrhSGLW1u6GZXU9i3NiZ
/wEra1iI3XYys4khMKktcHmT/Z1NiGAsCOL/629W9N/h1efqW4SUDaSdnx1f
9NrOj57a8NYja1/Fm8bTm97+14GvtjbtlVjkheIQCZcGAz8oKH+bz94sonzZ
UD1j+7+gncKpSJJ2/ACFRbW3/Wj/u7+9578nGGd1TsPN/NAIBOLO5OokUiaX
iqcSkQRoHmzs8IVh+MDMF4b/woPwFAwucNjwyRzg2XgkLu+Wjz6vy8DJKCFd
CGIPVN/tPk2EuFGAtoHbz6K2yLuwOqfdbdz2lu4jZNZyAn3OTZArYIsJtB1k
ZlsHz6iz3XZyRWiQrLy48f8suvv3y58AZf7RkXlnu66sadz2x+VPgj2y9jWQ
7mCPrHvtt0sf+0HVvX+re2H2iWqxSRYdSaJD42epe0Dn/2HZE7+qefjR9TPB
uQC7v/7lX9c8AidffWVru5jGVnYvu7R+xo4P7l753E+X3P/uvs9bBRRwHG7N
x0f0M7CMF3gEQU/QaXIa5UZFj6J/aYDR2nOumb2aSP+acFPEf78tIdB2NrPo
TLHN4gY/5faNAvJGfIQeMgjvn1c/eO+qF17b9VE9YVubmPrGzo+hCfxlxTPP
b3kP2hc42n9d+ezPqh/8Zc3Dz254+yjjG0fAVe4dIdAulU1ZfDayrGMn5fAX
x6t+tfQRaMi4neE14sdoHfrjnWffO/Dl4+tf/+2yx3+59OFNpN1yi+rmf3QE
AnHn0L+CDAOE3xWwaGwasU7erRCzpAK6iEvhg8EfYrZU3qPUinVWrS3gDqYT
V/O5DdmHZ1IZj9WDlf0ao/LntfP4HXzQeEaZ0Wf3geq79V8IYmqCJye06+wy
jozV2nOEzFxBpN1UubKoL26ZxhI7jM7bS6v06/8Zm/+5lbRHbdO6gp69tOO/
qHnohY3vrjy/gdjTDLbqwkb470+XPABHPrzutX2tRw0u0/BnDiZC8PLH1s78
yeL77lv1Qt2lTXQpE2z+qWV3r3j2B1X3PL/xnS2kPYFo0OgyX+wifLRn1p9q
n0L6f0oB7gD0riqeCi/LeKWZs43UOcbWQZnV2D6b0IYb/A2PjOaFVQTa4SZW
N08JF3D75nno1//3rHr+swPzyYI2s8di9Jhn7vnkvroXP9z71XHqaWhfJ2ln
Pt43GxwEXL1/cayKIqaPGAVk9dkamBfuq3/prkX33FXVZ4P0fzydcAZccoty
zaUt0OKQ/kcgEGMFryDjtrj1MiOfq2xnS87T+UcpPXtaOVubWRvIzLUkBhj8
sbWFBQ8eo/RcoPMpbImApzTITSDyk7HkYJUe8oZgcBll5h9uXyY6RbfCIDM4
DI6AKxALxVLxVC6D4n8QA+j9tlwqwy0HN+pZMqfuRof9DLbZfS7AkVYOh6cM
OAOgmib7Kxgt/fr/7Z3/PsE4k8gks/ks1yDc3LSHqmTp3EZ826DaoTvFufin
Vc/AkffWvbD0m3qJWT78md1R77v7P/9lzcN/qH1qYcOKDllnMB4Cu8Ilf3Zk
4Y+X3PfrpY/OO1ObL+RT2TRL3T3rSNVfVz6L9P+UAoQ39K7Q0+qkBlYbd08T
lu1nbK4xibiDcqCJs5TD+4rWM38H5eBCEmk0L5zTSF1KoJ+ncNVSA1bn/fbM
89Cv/x9Y/fKCE8tFJmk6m4ZB6wTzbAP7otSqcARdcIw94OQZxF+cWoKr93d2
f9rQeT5fHKEbMbrNR6gN965+8Y/Ln3pizUyw3y17vEL/F0vFTD4bTcb2th15
desHSP8jEIjRg+2vjCY9Dr9aZWZ0yy609xxqYm4lda4m0pcSaAuvLfL4FZYm
HavwCE/VX62axLpI4XZ2yzVqi9fpBy8Aj5GGkQVOa1FbsBDT9uH2+YroIjlH
ruarDVKDVWP12rxhXxhk/x2QHQJxM8Dn/y06WytTjGf7GY3eqG66srHt2FH6
1mP0LbgdoW/b0n5kcVPjbELbaM4AjsY3HVyVUBsLxydRroC6ALlOklK+4V25
LGoBDR9PJ/CnCsWiK+K5LGqGp8iyDq3TwJCxcP3/7u5Pz3Eu44cFYkGlVQ2y
vP+c+WKBZ5bcu+ZFOPIvK5+dc2wJ3yAa/jJA/7+zD9P/f1n17IbGnTKLEn+8
S82rPlP/kyX3/2H5k4vP1+MPgi6ad7zm7lXPIf0/BYkFYxqlidDaXU9kjCll
7lxCy5rWU61diw3Sd/3Kl6yyN08wNkNDG+XL4b12NzEZbCk4IFMnzwOMXM6g
m6PjQSMCY+t5vogfn6sv95Zz+RzPLMaf6jYIxEYpoRvT/w/Wz6huqNM49d/2
aXKDywgnGXjOdC6zgrgFV++vbfvwEOVErjCC/rf57Y1c8tzTy2surN1I3PXf
A/PAy6jQ/zilcukoreH17R8h/Y9AIEYDHhGaiCZNagunU3yhb/F3MWFsdV6+
6gvm3EHqvNTM6WZJzBprMp7CdxBgWalZ0iE1P4+ChfcIaUJJp0QnwpLOhb3h
23cWCHErwTMCCXuUR5pYs0eR6nNWI2UOoXVPx95O7ryQ6oWo6rmY+tmo+tmA
8qUu/qwdlAOLSMS+uIWRb/UNRAatneuyeSdxCcDoMR+inHxk3WsgA/608plD
1JNG99VYnXgq0SZn/HHl0/DUExvfPE47c5FDGKz/B5PJZ7sMgnvqMf0PKn3h
yeVCk2T4ywjEQzVn6x+qf+WPK56uObOmS8PL5rNgrWLq7OPVP6t+4LVtH8C1
4Qcj/T+V8Tv83VzlbjJzyagn//E2Vdt8/jhjs0H6DjSloPLFsep/sFV9PrVW
ok9EEpP9NVylUCzQZMyvTlTjSvu/Rxewld3JTAp/CnyBBefq8KfmNSw/x7rS
2N1Uof8HA/ocnPTljRvxF76x4+NjtNO5keb/Q/GwyqYRG2WesNcZcq+9tPWp
DW8i/Y9AICZIb7m3mC/6nX65REek8Xc0YzsoFxKos8ci/r+8upLbAS+El+9q
ZjfRBQqJ3qqxmlVmKVs6OPIHq9nElGpFWpvWBuMOvo8YlH8hXwDxjyb8ESMC
N4xNbycyBBtJjNGkKKwiEUD8s3iz7fI3ournQPnH+iyies4hf50v+HQvdc9o
RAu8F9zkJ5rZEqk+4p80BQuqgKnqfm7re9iu3ton1lzeKjbJ8KeMbvOBjhO/
XY4FCczY+QFXJ+wQ00ej/y1e63HGmT/1OQ6PbXj9BP2MxWcd/jKw/b+q7i9O
LP7xkvvuqXth8dnVl7tJYF8cr7qv7sW/1j6zhbxXZdfiByP9P0XpxaamLVob
icKtJtBGv4N+AbFpJ+VAe3eVTvIeiH9oSuPT//MbqVvJzG66MOAJTZEgT9DS
JrelnrgdV9rv7v3sUhcxkozCUzBWdam5nxyZhz+1sXlPt5o3Gv2fyqZ4OuFn
xxfhL5zbsIyp7CqOFP9fwIoIpOBNc4U80v8IBOKGUCqWUvGU1+blCdXnqVzQ
UVU3osjjYgJtM6nzIpXHZIolTMnAnD9YnA9DpBFqLGqL2+IOeUKJaOI2iqNG
TBHAQ4wEIpJuxYFWTvXopitXNJ8jsJfrJe+FVc+HVC/IRB918Wb18L8A8Q//
dcpnNrJXrG09NSrZQ6CuITE6mGKnyTVZvmqukDP7bB8cmvPrpY/+oubh9/d+
SRZT8Ke6tbyas/W/XPrIb5Y++t9jC1whD8iV4fU/aAy739HAvvCvg1/B2f6w
/MlPDs8Tm2WxVHz4ywDJEYyFTrDOzdj2r5/XPPT4+tc/ODAb7L76l/6y8tkv
ji6iK9mJzNV0SUj/T03KpXImlZFKdCfJrDl9ffhoWsFS8qV91N2Mnnkm6d+h
TQUx/f/8+PT/rL4lAHJLl9XsmiLDAbTreDpxjHX2z7VP/3jxfU+sf6Pu0iZP
BMuo748FT9LPztz50U8W3/+X2mdOd10yuEx4/P8w+h/udp5BWHtxw5Mb3/zp
kgfur3tpP/WEMzhy/p+BIP2PQCAmDvRv6XjaaXbzmJKTrdj2yYnI/gr7qrFj
NZEOowmztad7QGVJcadYJ9aFvKGpE+eJuB0B19Vj99Fae+pHXZ+ovqWBzfvK
LnsD1L5L8doZ5tpN7Ud3deyXij4G0eJXvsziztlJ2T9KuTK3seNcM0crN07i
/hTQ1asubnp0zWs/rPrbn5c/tY92vFgqgpy4zGt6d9enP61+4Il1b6wn7MgW
cv37fwfrf7j4TD5rDzovdBH+sf+LH1bd+6ulj7y585P97cdGU58L3q5vY2/P
8vPr/7TiaRAev6t94rfLH//JkvsfXf/6vrajKru2vw4p0v9Tk0K+AH1yJ1ex
q6lz9GGfOygHO3vm+ZQzfMqXwYm2SN+GRjQ+/Q9WQ6CdILPkSlM8PILLeSuh
yBhvbvsY/Ohf1Tz8xs5P9F4zaGxbwLH07JpH1772u2WP/33HfzpVnP79v4P1
P1a4BAv7iXdr+Wsbt/9xxVMg/h+onzHnWHW3jj/W60H6H4FATBDolKDPd5vd
3RzZ4RbOSiJ97o3OnQInXEWkH25i0Vq7cfEvY8scBkcqlsKCfG7bVG+IqQC4
rlqd7Xwze/moc37263+QKzrJP3ZQDixpurKh7TiP/5lXMQN0i0jwnwPUnaM8
2+zGjoNNzB6BOh6KT1ZaWtDtF7uI/9o/665F9/x48X11hK3eiD+ZSW1o2fOb
ZY/+oOqez44uahVRC6Xi9fQ/9AMgzkGH1F3a/NyWd3+z/LHf1z756aEFF7qJ
9oBzxOJf32IhDel2MW1ew/J76164e8WzHx2Ys+bytuXn1j298e2fVT94X/1L
W5v3KaxXdQjS/1OTXCYHPTORKVpHHFUoXb/+Z/TMd8pndnLnnmPWU7sXmqR/
H7f+X0Sg7iB1cviqgCsw2d/H98isSrif4d4Gv/ixDa9zdLxwIiq2Kp7Z/Pef
VT/w0NpXdzcf0rmMw+h/cMn9sWAD8/x/jnx9d93zP1p83wub31vXuENslo9Y
XGMwSP8jEIgJAgoculkuX3Wqtav2piVOnN9IXdm3CkBp6xF3ih1GRyKaQHt7
ERMn7AsLJLoDTWPYq1jXcobSvdAifTugfMkse/sQbUd9a8N+6m6p8GO/8mWf
Ysbo5/+/7Fvh2kJitHGk3snbBVwoFiQmedW51Vf3IX5TK9CLDW7zovNXdybW
E7bpXUbwtYfU//B4IpOkK1grLm54cv2boGee2PBm1dm6ZlGHze8A3TLiqkYy
k1TY1AvOrHxozSt/WPEUXjVYbJLxdMItzftm7vzoR4v/9vK29/dSj+WLhXJv
Gen/qUkmmTHJTWdovOWjXk0DqyWf39ux9yxzDTgCm9qOEdi1esl749b/MFjU
ExkdHKnb7B75im8VrpD7CpcMyh/LiFv/4oUeosKqbpXR/1r3PDzy3Nb3OhWc
YCw0pP7v/bYXGpHWZTjRefb9/V/Cbf/rZY++t+/zvZRjIpMMHOdxTIIh/T80
fSWLytlUKREpRXzFsAesFPWVU7HeQu7b66zPYnlPcplyKo5ZNjXMkQjEHUOp
WIqF43Kh5kxHTx2RPqY8P2O12X2BQN+0cIQcWSQURQW8EDcEUN2MbvkGImPB
qEuULiVfOt25Xi76CFP7ypdbupac6VzbzKk2S9+G/xqk755nrq5vOT3Ks83q
SwR6kS6wqCyZ1MhxMjcD0A+BWHBb28GfLXngB1X3fHRo7kUOgSphfHp8EQjv
3yx77CjrTCKdhLFxSP0fTydkVuXChhWPrnn15zUP3b92xorLG/k6UTafHeUF
uEKeKzzyw+uxHEQPr5/JUHHwDZKA0qre3LQHfAp46oMjc+Fx8FaQ/p+apBNp
rVB7lNK9aIxp//ttOflCI2vFRPT/nEZqNZHWxBDadfbJ/j6+J5lNQRt5ZeeH
P158359XPbODfKCJ13aM8c2fVj798+oH/3lwFnjKuUJuSP1fKpc9Ye8p5vnX
tn7wu2WP/3Hl02/s+c+FLoLNP/4PiPT/kPSWCqD8szphgnkhcmV7+Nza8Nk1
UcLOJLc577H0FoYKNgb1n4rlrOqUoB0so+HlvdbekXIxIRC3O/FwXKe2NHbw
1jd1jj7Vw/hsVl9eoI2kTkIHz6CxTp30bojbGqfB2coUj2npajahbSGJdJm1
Uiv5R0T1nFvxqlM+E/4NqV4A3ULmLK1rOTOH0Dr6G7uaQDvZwdWL9SCfJuVL
6O2LLrjIJT219g1QI2/s/GQrYc+B1uNv7/nv72uf/Hj/bBDk+BzjkPof1Hjt
uXXY1P2yJ17c/N4FLtHotaRzmfKoJ8HMHstx+pkH1syAMz+5+S2dx9QfMuQI
OI91ngG3AqtztP9zncOQyCSR/p+apOIpFVe1v5Uzd9Te9A3X/181dswnUK9Q
eVaNdbK/j++B5uOL+uecrLl7xbPQppacrttFPlh3cfNvlz/+3KZ3tjTtiWcS
4F8Pqf8z+cxp5oX39335q6WP/LX26ZoLawUmSSgRzhcL474epP+HJGfgRi7V
Bw/+x7f5VU/dE54VD7trH/KsftK//a3I5bVpGa03n+29drUF5H8h6Ep0nvTv
+DtYtHFjRsMvj2LHE2K6AeOU0qYeaP5ooFQqRVMxo9vcoxW0ijuaRe3tUnqX
hguPRJOjiuvL5DI6p6HizBWmsesMLqParh34ILzFiEUDhwTbi1QoOi1uBkuy
tYlZNexsz1xCSw350lH6VpBMJM6yIe0Cc/Wejr1fjZQ1fTGBtoPMYrGkbpsX
1fNCTByb1kak8RcRaKNPVAv6v4pEaOIsNUvfjn2X/BM3i+xtas8C0DBjUixf
E6iH2rrUPDXIp0n8Krh6YdXplX9a8fRD9a98uHfWV0cWP7n+zfvXvLytaZ/a
ocOPqdD/0AAT6eSZ7itPrHv959UPPbf5nXWN27k6oc1nxwsBg0EXB/1eKptO
ZVO+iB8egf/iYTz9b23x2k51nntg7YzB8/8yi3IDcddP++b/3zv4pdVrT2fT
SP9PTZKxpIwj293MGvda8MT1/6y+xeIL7T1mhXmyv49rAL/1KO00ONe/qHno
9W0f/vfg/A/2zoK//314PlnQhu9tH6z/4XFbwDH71NK/rnoW9P+nRxac5Vw2
uEzukKe/iQX7CtvnCvlIIoI/ksykhk8HivT/kCSoB53zf+mcc5dr4S/cS/8M
5lrwM8es/+X47P9219wTaqgueC3l7DWzNL2lYt5tCp+rcXz2f4EFdr+fElHL
32UqQyD6kdtU28j7BhpdyXYEXR0K5gHqyWVn1/7n4LyP98/+/PCCJd+sPkg9
ydL0QLsujJTX1xv1H6KeqjhzhR3qOHGefWVv25GBDzYwz0fT40mSUC6VoauX
ywxnyOxFI6X6XEBq2tB2gsf/zKN4pUIv9ZtN/kZ7d9WIs6az+qqDnW/mKBWm
VCyFNv8iJohFZblE4c4hjFz2q98WkYjbKIe6eV/C/RxSvQBegFbyT53kH17F
K27Fq3LRRzs79sMxo1csIFf2tLAVXQpoU5P4Vdj9jrPsyw+ufeWX1Q/fu/L5
J9e8/sflTz656a02MQ10O35Mhf6HBmj12dY17cRVxOu7Pt7VeugM5/IFLrHf
SMK2Lg3P4DaDE3GJ1wSPcLQ8cAcGbgr2hH1kYfuzm9/BEiGuenYtYTu4ABa/
Tec2nug8++GBOT9efN9vlz0+5/SySALF/0xdktGkhCnZQWaOT/zfEP2P27mW
LqPMONnfxzWAkhfoRfNP1/6o6m/Qsh6um/Hw6lfgxl5+aYParsXl+mD9Dzd8
t5b//LZ/QPv67fLHl5ytP0JvGNi+wDpknVKzwhP2MtXd8N+LXKLJZ80NGazy
HUj/D0m8bavjq//tXvZQ8OjXsfajYIEDX7qq/+b4/H84vvh/vPVPxGmnC9eG
XSH9jxgl5/jE3yx/bKDNO738KO304xvf/F3tE+Dd/7z6oZ9XP/iLmofgb3jk
g0Nz2MruUDw8/GkVTs0Tm96qOHOFvbTln4tO1T6y9rWBD87c84k97BrHBynk
Ci6Ti8KRbiN1jpjw5wbq/y/7tndtJ3VSu2RusxvtAkBMEJPcdL61a0zSoq7l
G1rP1+a+/b9W2RvfdK7b3H50B+WgQPBfuMN9yhlc/ud7qbvHdM6dZKaUKU1E
JzOqLZlJCkySJze/dVfVPT+s+hsokx9U3fvSjn8ZvJZc4eoqYYX+B9HC1fIX
frMSVxE/rX4AJMrvVzz5hxVP9duTG96s/qbuLOvSXsrRP696Fh6Zf25lhf4H
rQIOwpdHq+5e+dwPq+799bLH3tv7+dIz9f8+MO+xdTOhS7xr0d3v7P60gXkB
PI7e3l6k/6cmSP8PA9zwgWhwLRlzlqFl/Wjx38Dgxt5FPZrIJPG17MH6H7zy
c+zLj294A38VLgwGti+wf+2ftaNpP13G/PfRr/FHmmU0pP/HQUbWHm6oSnLO
ZXW8vNsMllGyolfWOGf/f6Dt3TV/Dp2uy9vUA1+C9D9ilJzquYQ3t6c2vbXo
zKp6wrbDtFO7Ww//aeXTT254679HFsxrWP75sUWvbP8AWjoc9pdVz350eC7f
LBl+Lc/gNf/78LzXtn1YYS9seve+uhfxd5yx/V97W45sIu+pvbTh02MLoQ+B
B5/Z+q4t5Bzrp8ASfacyaqG2ob27mkAbcakXVP3iJsJOyoGj9K0nGRtxO8tc
w+iZZ5C+G1Y9DyYRftLQuWE2oW3Ejn12X4bnM5QerUSfy+RQCBBiIoBIAKkw
el3xNZEMd7Jc9KGnb7ZfKvx4O+XgAhIJVEp79yKL7K2Q6gWN5J/HGZvHJFdA
Mkk6JZOr/6GTsQYcnx1d+JcVz+CdBkh36KNCiXD/Qttg/c9R9cxvWI4fP6T9
ZeWzc44tOUw5uY6w44eL//bo2tegFyqUrgneg/PH0nGKjFF7ccNzm975WfUD
f1rx9CNrXv3rimdB/P955TOfHl14mn1R6zTgxyP9PzXBFoU58t0t7EmP/7nY
3mNWTq34HzxHbgPn4mNrZ/50CRbP9ps+P7dNRi+WrvrCg/W/1Wdr6DyPJw66
nsFYD2KeyG1+Y/e/f7/8Cfhvl54/fNJdpP+HpOB3ZPXCgRE+vYV8RkFxzfs/
oO1dVb8N7J+TM0kGvgTpf8Qo6df//z4yH7x1ncPA14kamOc/OjJvHXFHs4DC
Vna3iWk7Wg4+tentXy97FI6EEfOSgJwY9nbyx4LfsC4copyosNqz697Y/jGc
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
eEC9UsfrjHe3QRSgVHRBBDHaxZVcHzrNTi6RcxldsH1VeOg1ezHSRHvTR1Yj
tf8vaKFnULUzOQRybcHIxGcgPgkL6QI+4vw2P8R+mvYblg2WDQs+8ULOEEZj
pVDh3U9CCCFXG1FuKBB3aB3jN8TxjYlvQ1HRnWsBrhMwn36vD/mXtfKhoigL
ojgnNCmfzA96gzOpdk7/J2fJfndp0b232S7nyzFfTNbJ0xb2ilSfJb243bnr
CMmhfCqPZ836AAghhJCLQKk4mo6mXUaXqtmN0tE17o/XK/VZ7ya5OAb9QTqc
hucL+R9N+1k1uSV3KVc6w9nRbqebiqRU/p8IJM7kxcl1YzAY1Mt1RJQBW8C2
bcNYOqKqp+jhZfGmwqlKoQLz73VZ9IAQQsj1olVvZWIZVY0XZXPsOqLeaK1U
Y9W7K4+oi9hoZWNZpQvS6EwpBobP6ssn88dJLTs+CCUgYPR/8iiImsn1FiJT
jKWgIyjrZIyiidP+ooz/qoQHBOyBRDBRypbEIqk+V/gSQgi5pnQ73Vwi5za5
VWsBsFk3rWF3uF6uMwS4wijVEbPxrH3XPjprKuRfY/JInkKqIAbAmaZFT/D/
dfo/eTh7oqyPSFTrtDr1Sh2jyGv2mtfN07QfQ1rp3oswNhPNNKoNfpoRQggh
StZ3MV30W/2qVXKiNcCqFJSD5Xx51rtJzgWlF2oylJR1sujwOzIAcOkh/5VC
5Wxn/hXo/+R0YLiKzhTJfEgOKVV9YPjTUv1h/k69M+6LYxjjWf1uH0/nCl9C
CCFEodvqFjPFgC1gXjOrJtAsG5agI1jKskHwVWNvKNqhpiNpONLo3R+RLLEm
BewB0T/uHOT/hUn+b1430//JNIT2tzvQeAzXoBx0GVyiicniFO3XmBAa+Kw+
jKhiutioNvjZRQghhEyk3+1XC1W/1T+eQyutS/gyPaepYDITcB3bzXYmmrFv
H077WdzP+bf4IP9iXeT5XO1Oq5MKjfl/kP5PDnGQ6lMr1bLxbNARtG3bpi3s
1S/pMXStm1av2Qvzr+Qr4z0QCSGEEDKKkgqC79moJ2pYOXRLXZR/XzG6je58
Ms8b6FcAJelL6QGhjvVWJY/Zc97rvun/5Dj0uj1Rz9MbU1amH5Hqg8223/q8
kC40600Mb35SEUIIIccE35vVUjXmj01bDZqOptvNNr5bZ72n5JQMh8NmrQnZ
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
UV37h14qdPE7T+aZSqMiBax/883HfvOTf6Jsf/ONt3/x7t8tSCvv/fHHfu0T
r/yPH/69X/jgy37uyd/C9isf+8M//uJfvfW779P7pVbn4aVCas0aHvn49596
1Zde86sf/yPlRf7Dh3731z7xqr985i3f3Pg+Qo9tWfvhm589ePc/++prf7h9
M5yJnuExdlqdbDy7pXU8c3/r7Wed9jMxleKp26s/vL9ttXhT4RQ2v81v37Gf
KO3n0AriVVMukVOSiMgVRqkC6ncEf7Koffzmyhumzvz/5EcbTxoNfxWzvRxW
P+7/b7996+mVzzikP8/Yfydu+wOj4S//XvOJe9uPR2yvKMovDVpe+fzOY3jM
+Cu/7ebyl+5tmjYs5Xxl/menm+2mPxl8z48/dvDp8eqvveGTN79wW3fvU3e/
8huf/M+//JE/+MWnHnx2veSjL//9z736dc++c8GqgZAf/+gypcyaY/N9P/7Y
K7/417/0kd//+Q/+9hcXvx7NxpQUqcFw2O52bujvvv2778c74sMN7/ULH/zt
//tjr3jVl/76/f/4cXvUFcnGNPaNP/nK3xzs55uefeLHO7cGQy7hJ4Q8hEE5
W/rxJ7Of/bPMx16a/fwrc5//48zHfyvx+P8ef/3/GH/DP0m+75cbu/84qBVV
z+pX8g1pIfWe/zP2mv8h+djPVO5+uRubECaQ60yxVtp07v76J//zP3n7//Uv
n/iPf/xlfGf97Tc13/vx1q3Hvvfk7372v/2Xr7321c+8EV9ev/bxV/7Mu1/y
Pz/2C//He3/1a8vPBtPhh764HHV//vmnf+4DL/1fHv+Ff/PeX/nDL/zFq778
GnxL/m/v+o//+on/hBDgvml5w7H91eVn/+xrr3vJR/7gZ5745Z976refXnrW
lwyc1QEOB8NyoeIwur6zqP3ALc1xBP6NN++99+4PPrv41WdWPv11zaewfXX5
859aeHqiMk3c3npTVAS6v2q0aR2y9jTT/qot4onUK7wFcMUZ9AftRttkcH79
zsZ4WarX3lh88607H7r/7e+sfdRl/rOM43cg/0X5N8vybxz2/8UP3vvOTzbf
l7D9Xl5+qdv8p7c23/3EnR9/celLesNr0vbfSdp/T2f4f/GYN926O/YWSx+5
vbq4oE3GMvOfAlRv1Z0R9399+g347ML2ss/++eM/eOobK9/54eaND/3kUy/7
9J/hU+u/PfPGP/+717/0k3/6b9/3//zzd/zcv37iJR+6+RlX1NN/2B3Mbr+X
qxZWndtf0zz7pm+/5xc/+LL/9fF/r7zRR577XDgdUfy/3KiYg7a3fOe9v/Dk
b/2zd/zsr33ilX/8pb9+xRf+4mfe8xI8/lc++opvrH7X6DPveo1v/t77/uiL
f4mQ5J899nMv/8yrv77y7f6A/k8IeQiDaqFy/+nyc1+pbd1o+y1tn7m+cyv3
5dchBIDbYyv94P2dgE31LPo/eSij/v+zT/3WHWnRnwy6Y74F08p31370vfUf
7br1tpBj3b796Vtf+tWP/xEe9k/f8e9e/813LVlWj37lvb29H+3e+pMvvOZf
PPbz/+Lxn//9z736tu7esnn18/f+7iVP/d6/fOd/+KUP/967vvtBKWCNZmJ4
l3d+58n/9OE/OHP/77a78Uh65f7uR2+tHqfU5+tvLrz7zo++vfZRq+nVkCsl
cTpu+wOd/jWfXHjmDTfvH8f/Xysqqy/D4lYPlwM69eYyuLLx7FmdEzKfYKwW
UoXlbctnbq9NGpnPv+fOD29uvidqe3ne8VsZx8tg8mn77xbkl476P8KEzy99
ZVX7Jvwcm8n4l89oPv2O2zc/fP9bNzbfG7G+Iuf4bYQPX1v57LsOrxdWtvfd
0vzDvS23+xLEm6P+/z+9/d89vfodX8IfSodXbZs/2PjJ3y9/d92+ZQ3aDV7p
q/f//uWf+++Kvf/Xr7zuxzu32t2HrDCqNKo6n+lVX/irf/XES/7pO372nz/2
8/ivyv/3XtjzJgOfuPGFl3z05ZD/n3n3Sz5550sLpuVb/397dx7V5LXvDfz/
+773XXe9d9133Q63p8M5Pe1pzz2O1dpq9VqHqm1trdVWq61Wq+LEJPMkKiii
oojgAAoKCgIZmRJCIExJCCEhgRBIAgmZCBkgc0jw3clTOVSRQcXx91l7ddnk
SfLAetj7u5/soZG0NGk9esmfwxZsSfMjsEv1g8YORSeqAA9dj30rdD7kfwDA
JA27nC6VxKWWDRm1HusgKujfqAugSVyB5X/99VC7iH3PqyD/gwmNzv8fHV3d
JONZHTbUsCr7VQqdUmXQmCwm9L/9A3pRb+cmrKkNmvlT2p7CBsI4b+t2uwcs
A3G45PcjFqHjv0n5Jb3iqtbYpx/UM8VNcflJ8+JXvRUy/7PEb2jCWsOgUa7r
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
0c7MIPQmqE3fdGEPgVmqG9CjI6fr/j+9+TSRPpnFP0dKCOH2sZKspLJLCaWZ
UaSbu4vK9+NI5yipnb71/7u435XVBUZPev1/7P5/fmmdpBXu/4MJ2My2HlHP
bRorHkeb8LryxxOOl12uqPNHHVJ6w75rtMRI4q3RB6CEn1KeRmSEcdjbsFLH
3JVHjx+/9+rdtJpYzea06zX6p/irQOm6f0CfUn7pz6ELXguahSquZQnr3zz0
0S+XDpLZFdjo/THzv3PImVdbmMPIb5Lx2nvFqO5qlbcTmsu3XjmApfeVSRtP
k9ONFlOtiInqLlSaurg6U/84J/Og/I+eYnZx1qds/yBy8bthny5P/P46o6BJ
0lLT3rA1fd/fI5f8OWzBljS/Um4l9j6Q/wEAUzJk7LM0kVXRs5XhczQnf9Bd
DOi7sE+TuFax7z/lv/2rfPe/9wZ8YK7JdQ/cW12Pzv/ynf8i3/VvCr9/V+z9
j9HFysp/Kj8UeAJcQy6toe9AbjRqs14Nmoma0VeDZqF/57MINocNO2bM/N+m
Ei86/u3s2OVfJ/90KCcm4kb8towD70YsfD14ju+tZiWTL1TxakjsslWnN6Pm
bEHCV0xJ8/35ny8Tni+9vPLExh0X/Q9lx+y5FPxx/Jo3Ds1FJ/Pp4S9PEs8b
LQPYxsTTMv/XaObX8s+Sa/YWTWr+L1au0o4LOZtU/DUd3A1E3/o/KO3frI5T
81f3ta7gNf2UTUsIJdye5Lvt8Y3/L6I0ytpkj/4TgReb0+7sV/VTarmnJrEE
EOqZ+hWXoc7pARzxAI6ELtTdRWX3HIO6APuLyQdxRKygI/cVk/fcd9joEoWr
zCUz2tu7zaYpjJCfDp5hTyGTtPTYure8aw7Mei149iuBM4JvHuZJW7GqZsz8
b3ZYNl/a+9/R/7Pi+IYDWWGo7tqfFTYrbjmqdrD0HnIrniXmaAzag3kxqO5C
5UzZxS7leN3zcfK/QtebV12wLGnDK4Ez0UegD91w5tdvTv38XvhCVMvNiFuW
U5PfrZVj7wP5HwAwJSjYW1sqVbGLFPvf7PV/Rxny997gDxQH35Tv/F/K0Bl9
qb8MVFx09oqG79vQ/A/5/wHF0pD7VH4o8ASgBtThdKDWbUH8mtd8yf8fMZ9v
v+jP6mp2e35vesbM/2KNZN3ZbX+PXPJ++ML58asXHFkzI+Zz1MKiR75N2ZZA
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
AAAAAAAAAAAA8Oz6/8ab8xc=
    "], {{0, 552}, {1024, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1024, 552},
  PlotRange->{{0, 1024}, {0, 552}}]], "Input",ExpressionUUID->"8e7511cf-45fe-\
4462-9815-52e8a12013f1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"4", "\[DirectedEdge]", "8"}], ",", 
     RowBox[{"6", "\[DirectedEdge]", "7"}], ",", 
     RowBox[{"8", "\[DirectedEdge]", "9"}], ",", 
     RowBox[{"7", "\[DirectedEdge]", "10"}], ",", 
     RowBox[{"6", "\[DirectedEdge]", "1"}], ",", 
     RowBox[{"1", "\[DirectedEdge]", "9"}], ",", 
     RowBox[{"8", "\[DirectedEdge]", "10"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"layers", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "8", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "10"}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"ad6d202f-7753-42aa-81c5-1b7a6e441ef2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"test", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<layers with dummies\>\"", "\[Rule]", "layers"}], ",", 
    RowBox[{"\"\<graph with dummies\>\"", "\[Rule]", "edges"}]}], 
   "|>"}]}]], "Input",
 CellChangeTimes->{{3.8139417048045125`*^9, 3.813941705214994*^9}, {
  3.8139417665544415`*^9, 3.8139417935912323`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"d16b929c-67ae-48e3-9a9d-7908fd22d032"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"layers with dummies\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"4", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", ",", "8", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "10"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"graph with dummies\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "10"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.8139417882549777`*^9, 3.8139417966790705`*^9}, 
   3.8139418917040653`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"b43ef9c3-d90f-480f-a30e-b5925436ca2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InversionAlgorithm", "[", "test", "]"}]], "Input",
 CellChangeTimes->{{3.8139418012119646`*^9, 3.8139418031994524`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"524f5c4d-0ff3-4e61-9738-80f3b830bc6f"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.8139418034984417`*^9, 3.8139418922943497`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"16d65f9c-f137-4133-af86-ac62b7b9cb9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Time Test", "Subsection",
 CellChangeTimes->{{3.813942193398013*^9, 
  3.8139421954058943`*^9}},ExpressionUUID->"486a0ce9-e061-4548-8e12-\
f1ae6b073b82"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"getDummiesResult", "=", 
   RowBox[{"AddDummyVertices", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Composition", "[", 
       RowBox[{"GetLayering", ",", "GetDAG"}], "]"}], "[", 
      RowBox[{"GetGraph", "[", "20", "]"}], "]"}], ",", 
     RowBox[{"ApproachOption", "\[Rule]", "\"\<Cut\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "=", 
   RowBox[{"getDummiesResult", "[", "\"\<layers with dummies\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"layers", "=", 
   RowBox[{"MapIndexed", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"v", "[", 
       RowBox[{
        RowBox[{"#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", "#1"}], "]"}], "&"}], ",", "l", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rules", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{"Rule", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Flatten", "@", "l"}], ",", 
       RowBox[{"Flatten", "@", "layers"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"getDummiesResult", "[", "\"\<graph with dummies\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arcsWithLongConnections", "=", 
   RowBox[{
    RowBox[{"EdgeList", "@", "edges"}], "/.", "rules"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arcs", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"arcsWithLongConnections", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"v", "[", 
        RowBox[{"e_", ",", "a_"}], "]"}], "\[DirectedEdge]", 
       RowBox[{"v", "[", 
        RowBox[{"b_", ",", "c_"}], "]"}]}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"e", ",", "a"}], "]"}], ",", 
        RowBox[{"v", "[", 
         RowBox[{"b", ",", "c"}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.813942020413877*^9, 3.8139420331264143`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"47dbf91a-cd39-40ae-9266-bc75eca72418"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"InversionAlgorithm", "[", "getDummiesResult", "]"}], "//", 
   "AbsoluteTiming"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"First", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getNumberOfCrossings", "[", 
    RowBox[{"arcs", ",", "layers"}], "]"}], "//", "AbsoluteTiming"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"First", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.81394202734645*^9, 3.8139421363248754`*^9}, {
  3.8139421672429457`*^9, 3.8139421830036745`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"32a99345-bc95-4e03-972f-8ade3f7be5a3"],

Cell[BoxData["0.0563505`"], "Output",
 CellChangeTimes->{{3.813942177375784*^9, 3.8139421832703204`*^9}},
 CellLabel->"Out[50]=",ExpressionUUID->"019f9c12-7704-4976-a0ef-ef63f96b94a7"],

Cell[BoxData["4.1399417`"], "Output",
 CellChangeTimes->{{3.813942177375784*^9, 3.813942187396953*^9}},
 CellLabel->"Out[52]=",ExpressionUUID->"9d2c64d5-521e-4fa9-adc4-859c0864027d"]
}, Open  ]],

Cell["\:041a\:0430\:0436\:0435\:0442\:0441\:044f, \:0447\:0442\:043e \:043c\
\:044b \:0432\:044b\:0438\:0433\:0440\:044b\:0432\:0430\:0435\:043c \:0432 \
\:0441\:043a\:043e\:0440\:043e\:0441\:0442\:0438 \:043a\:043e\:043b\:043e\
\:0441\:0441\:0430\:043b\:044c\:043d\:043e.", "Text",
 CellChangeTimes->{{3.8139421977217784`*^9, 
  3.813942220960723*^9}},ExpressionUUID->"7ecbf856-65c5-4f06-a832-\
fd04b1b65fb2"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Part II", "Chapter",
 CellChangeTimes->{{3.813933558599201*^9, 
  3.813933559950556*^9}},ExpressionUUID->"daab2123-4d27-4ac5-a5cb-\
46ecd175572b"],

Cell["\<\
2. \:0414\:043e\:0431\:0430\:0432\:0438\:0442\:044c \:0432 \:043f\:0430\:043a\
\:0435\:0442 \:0444\:0443\:043d\:043a\:0446\:0438\:044e GetVertexOrder, \
\:0440\:0430\:0431\:043e\:0442\:0430\:044e\:0449\:0443\:044e \:043e\:0442 \
\:043e\:0434\:043d\:043e\:0433\:043e \:0430\:0440\:0433\:0443\:043c\:0435\
\:043d\:0442\:0430: \:0430\:0441\:0441\:043e\:0446\:0438\:0430\:0446\:0438\
\:044f \:0441 \:0440\:0435\:0437\:0443\:043b\:044c\:0442\:0430\:0442\:043e\
\:043c \:0440\:0430\:0431\:043e\:0442\:044b \:0444\:0443\:043d\:043a\:0446\
\:0438\:0438 AddDummyVertices. 
\:0424\:0443\:043d\:043a\:0446\:0438\:044f GetVertexOrder \:0438\:0449\:0435\
\:0442 \:043f\:043e\:0440\:044f\:0434\:043e\:043a \:0432\:0435\:0440\:0448\
\:0438\:043d \:043d\:0430 \:0441\:043b\:043e\:044f\:0445 \:0441 \:0446\:0435\
\:043b\:044c\:044e \:043c\:0438\:043d\:0438\:043c\:0438\:0437\:0438\:0440\
\:043e\:0432\:0430\:0442\:044c \:043a\:043e\:043b\:0438\:0447\:0435\:0441\
\:0442\:0432\:043e \:043f\:0435\:0440\:0435\:0441\:0435\:0447\:0435\:043d\
\:0438\:0439 \:0440\:0435\:0431\:0435\:0440 \:043c\:043d\:043e\:0433\:043e\
\:0441\:043b\:043e\:0439\:043d\:043e\:0433\:043e \:0433\:0440\:0430\:0444\
\:0430 \:043f\:043e \:0434\:0432\:0443\:043c \:0430\:043b\:0433\:043e\:0440\
\:0438\:0442\:043c\:0430\:043c: 
2) \:043c\:0435\:0442\:043e\:0434 \:0431\:0430\:0440\:0438\:0446\:0435\:043d\
\:0442\:0440\:043e\:0432 \:0441 \:0437\:0430\:0434\:0430\:043d\:043d\:044b\
\:043c \:0447\:0438\:0441\:043b\:043e\:043c \:0438\:0442\:0435\:0440\:0430\
\:0446\:0438\:0439, \:043f\:043e \:043d\:0435\:0447\:0435\:0442\:043d\:044b\
\:043c - \:0438\:0442\:0435\:0440\:0430\:0446\:0438\:044f\:043c \:043e\:0431\
\:0445\:043e\:0434 \:0433\:0440\:0430\:0444\:0430 \:0432\:044b\:043f\:043e\
\:043b\:043d\:044f\:0435\:0442\:0441\:044f \:0441\:0432\:0435\:0440\:0445\
\:0443 \:0432\:043d\:0438\:0437 (\:043d\:0438\:0436\:043d\:0438\:0439 \:0441\
\:043b\:043e\:0439 \:0441\:043e\:0440\:0442\:0438\:0440\:0443\:0435\:0442\
\:0441\:044f), \:043f\:043e \:0447\:0435\:0442\:043d\:044b\:043c - \:0441\
\:043d\:0438\:0437\:0443 \:0432\:0432\:0435\:0440\:0445 (\:0432\:0435\:0440\
\:0445\:043d\:0438\:0439 \:0441\:043b\:043e\:0439 \:0441\:043e\:0440\:0442\
\:0438\:0440\:0443\:0435\:0442\:0441\:044f); \:0432\:043e\:0437\:0432\:0440\
\:0430\:0449\:0430\:0435\:0442\:0441\:044f \:043b\:0443\:0447\:0448\:0438\
\:0439 \:0440\:0435\:0437\:0443\:043b\:044c\:0442\:0430\:0442 \:0441\:0440\
\:0435\:0434\:0438 \:0432\:0441\:0435\:0445 \:0438\:0442\:0435\:0440\:0430\
\:0446\:0438\:0439 [\:043d\:0430\:043f\:043e\:043c\:0438\:043d\:0430\:044e, \
\:0447\:0442\:043e \:0435\:0441\:043b\:0438  \:0432\:0435\:0440\:0448\:0438\
\:043d\:0430 \:0441\:043e\:0440\:0442\:0438\:0440\:0443\:0435\:043c\:043e\
\:0433\:043e \:0441\:043b\:043e\:044f \:043d\:0435 \:0438\:043c\:0435\:0435\
\:0442 \:0441\:043c\:0435\:0436\:043d\:044b\:0445 \:0432\:0435\:0440\:0448\
\:0438\:043d \:043d\:0430 \:0444\:0438\:043a\:0441\:0438\:0440\:043e\:0432\
\:0430\:043d\:043d\:043e\:043c \:0441\:043b\:043e\:0435, \:0442\:043e \:043e\
\:043d\:0430 \:0441\:043e\:0445\:0440\:0430\:043d\:044f\:0435\:0442 \:0441\
\:0432\:043e\:044e \:043f\:043e\:0437\:0438\:0446\:0438\:044e, \:0435\:0441\
\:043b\:0438 \:0432\:0435\:0440\:0448\:0438\:043d\:044b \:0438\:043c\:0435\
\:044e\:0442 \:043e\:0434\:0438\:043d\:0430\:043a\:043e\:0432\:043e\:0435 \
\:0437\:043d\:0430\:0447\:0435\:043d\:0438\:0435 \:0431\:0430\:0440\:0438\
\:0446\:0435\:043d\:0442\:0440\:0430, \:0442\:043e \:043e\:043d\:0438 \:0441\
\:043e\:0445\:0440\:0430\:043d\:044f\:044e\:0442 \:0441\:0432\:043e\:0439 \
\:043e\:0442\:043d\:043e\:0441\:0438\:0442\:0435\:043b\:044c\:043d\:044b\:0439\
 \:043f\:043e\:0440\:044f\:0434\:043e\:043a \:043f\:043e\:043b\:0443\:0447\
\:0435\:043d\:043d\:044b\:0439 \:043d\:0430 \:043f\:0440\:0435\:0434\:044b\
\:0434\:0443\:0449\:0435\:0439 \:0438\:0442\:0435\:0440\:0430\:0446\:0438\
\:0438; \:043e\:043f\:0438\:0441\:0430\:043d\:0438\:0435 \:0431\:043b\:0438\
\:0437\:043a\:043e\:0433\:043e \:043a \:043d\:0430\:0448\:0435\:043c\:0443 \
\:0430\:043b\:0433\:043e\:0440\:0438\:0442\:043c\:0443 \:043c\:0435\:0442\
\:043e\:0434\:0430 \:043c\:0435\:0434\:0438\:0430\:043d: A technique for \
drawing directed graphs - Emden Gansner.pdf, \:0440\:0430\:0437\:0434\:0435\
\:043b 3. Vertex Ordering Within Ranks, \:0441\:0442\:0440. 13-17]. (2 \:0431\
\:0430\:043b\:043b\:0430)\
\>", "Text",
 CellChangeTimes->{{3.813933569505763*^9, 
  3.813933576887916*^9}},ExpressionUUID->"78cd03f7-90b9-4ffb-9f55-\
355104237e4a"],

Cell[CellGroupData[{

Cell["\:0411\:0430\:0440\:0438\:0446\:0435\:043d\:0442\:0440\:044b", "Section",
 CellChangeTimes->{{3.813933582173357*^9, 
  3.813933589249342*^9}},ExpressionUUID->"0cf437f4-9a16-4024-9890-\
8589bfc3fbc4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getDummiesResult", "=", 
   RowBox[{"AddDummyVertices", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Composition", "[", 
       RowBox[{"GetLayering", ",", "GetDAG"}], "]"}], "[", 
      RowBox[{"GetGraph", "[", "10", "]"}], "]"}], ",", 
     RowBox[{"ApproachOption", "\[Rule]", "\"\<Cut\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8139273024169207`*^9, 3.8139273126192684`*^9}, {
  3.813929816684072*^9, 3.8139298171300516`*^9}, {3.8139300416438284`*^9, 
  3.81393004484772*^9}, {3.813932788806369*^9, 3.813932789004409*^9}},
 CellLabel->
  "In[330]:=",ExpressionUUID->"739ce1f1-be74-4f5f-a350-8dc0fea9a0f4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"l", "=", 
   RowBox[{"getDummiesResult", "[", "\"\<layers with dummies\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"layers", "=", 
   RowBox[{"MapIndexed", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"v", "[", 
       RowBox[{
        RowBox[{"#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", "#1"}], "]"}], "&"}], ",", "l", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rules", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{"Rule", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Flatten", "@", "l"}], ",", 
       RowBox[{"Flatten", "@", "layers"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"getDummiesResult", "[", "\"\<graph with dummies\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arcsWithLongConnections", "=", 
   RowBox[{
    RowBox[{"EdgeList", "@", "edges"}], "/.", "rules"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arcs", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"arcsWithLongConnections", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"v", "[", 
        RowBox[{"e_", ",", "a_"}], "]"}], "\[DirectedEdge]", 
       RowBox[{"v", "[", 
        RowBox[{"b_", ",", "c_"}], "]"}]}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"e", ",", "a"}], "]"}], ",", 
        RowBox[{"v", "[", 
         RowBox[{"b", ",", "c"}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8139275608193607`*^9, 3.8139275812740974`*^9}, {
  3.813929521784069*^9, 3.8139295330741663`*^9}, {3.8139327934237537`*^9, 
  3.813932795347885*^9}, {3.8139420092198615`*^9, 
  3.8139420094227543`*^9}},ExpressionUUID->"1fde7c61-2d4a-42c7-b7a7-\
aae91774422b"],

Cell[CellGroupData[{

Cell["\:041f\:0435\:0440\:0435\:0441\:0435\:0447\:0435\:043d\:0438\:0435", \
"Subsection",
 CellChangeTimes->{{3.8139335952182384`*^9, 
  3.813933596995305*^9}},ExpressionUUID->"61ef8f1a-3852-4f36-bf67-\
8c7a2a8ec205"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "isPairOfEdgesCrossing", "]"}], "\n", 
 RowBox[{
  RowBox[{"isPairOfEdgesCrossing", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"edge1_", ",", "edge2_"}], "}"}], ",", "ordering_"}], "]"}], ":=",
   "\n", "\t", 
  RowBox[{"If", "[", "\n", "\t\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"edge1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
       " ", "===", " ", 
      RowBox[{
      "edge2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], " ", 
     "||", " ", 
     RowBox[{
      RowBox[{"edge1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
       " ", "===", " ", 
      RowBox[{
      "edge2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
    ",", "\n", "\t\t\t", "0", ",", "\n", "\t\t\t", 
    RowBox[{"Boole", "[", "\n", "\t\t\t\t", 
     RowBox[{"Xor", "[", "\n", "\t\t\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"FirstPosition", "[", 
          RowBox[{"ordering", ",", 
           RowBox[{
           "edge1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          "]"}], "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ", 
        "<", " ", 
        RowBox[{
         RowBox[{"FirstPosition", "[", 
          RowBox[{"ordering", ",", 
           RowBox[{
           "edge2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          "]"}], "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
       ",", "\n", "\t\t\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"FirstPosition", "[", 
          RowBox[{"ordering", ",", 
           RowBox[{
           "edge1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "]"}], "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ", 
        "<", " ", 
        RowBox[{
         RowBox[{"FirstPosition", "[", 
          RowBox[{"ordering", ",", 
           RowBox[{
           "edge2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "]"}], "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
      "\n", "\t\t\t\t", "]"}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t\t", "\n", 
   "\t\t", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "getNumberOfCrossings", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getNumberOfCrossings", "[", 
   RowBox[{"arcs_", ",", "order_"}], "]"}], ":=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"isPairOfEdgesCrossing", "[", 
      RowBox[{"#", ",", "order"}], "]"}], "&"}], "/@", 
    RowBox[{"Subsets", "[", 
     RowBox[{"arcs", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8139335088106675`*^9, 3.813933509047162*^9}},
 CellLabel->
  "In[337]:=",ExpressionUUID->"c2440bc6-bd69-4e2d-b17b-407dd686f053"]
}, Closed]],

Cell[CellGroupData[{

Cell["\:0420\:0435\:0448\:0435\:043d\:0438\:0435 \:0438\:0437 \:0444\:0430\
\:0439\:043b\:0430 \:0432 \:043a\:043b\:0430\:0441\:0441\:0435", "Subsection",
 CellChangeTimes->{{3.813933610604773*^9, 
  3.813933622526257*^9}},ExpressionUUID->"2b068a0e-a7c8-4af8-9c37-\
f7dddf74e8a7"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "getBarycenterValueExample", "]"}], "\n", 
 RowBox[{
  RowBox[{"getBarycenterValueExample", "[", 
   RowBox[{"vertixID_", ",", "order_", ",", "adj_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{"list", " ", "=", " ", 
      RowBox[{"SelectFirst", "[", 
       RowBox[{"adj", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "==", "vertixID"}], "&"}], ",", 
        RowBox[{"{", "}"}]}], "]"}]}], "\n", "\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{"If", "[", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "list", "]"}], "\[Equal]", "0"}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"-", "1"}], ",", "\n", "\t\t\t", 
      RowBox[{"N", "@", 
       RowBox[{"Mean", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"order", ",", "#"}], "]"}], "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "&"}], "/@", 
         RowBox[{
         "list", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        "]"}]}]}], "\n", "\t\t", "]"}]}], "\n", "\t", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8139324729772615`*^9, 3.813932473446787*^9}, {
  3.8139325210943813`*^9, 3.8139325314048014`*^9}, {3.8139325716877165`*^9, 
  3.813932595587299*^9}, {3.813933365475936*^9, 3.8139334309205055`*^9}, {
  3.813933629626503*^9, 3.8139336340433655`*^9}},
 CellLabel->
  "In[341]:=",ExpressionUUID->"141b3431-027b-4cf6-96b1-fe362eb489b5"]
}, Closed]],

Cell[CellGroupData[{

Cell["\:0411\:0430\:0440\:0438\:0446\:0435\:043d\:0442\:0440 \:0434\:043b\
\:044f \:0434\:0432\:0443\:0445\:0441\:043b\:043e\:0439\:043d\:043e\:0433\
\:043e", "Subsection",
 CellChangeTimes->{{3.8139336380925756`*^9, 
  3.8139336504727287`*^9}},ExpressionUUID->"01d0aaca-e4b0-4349-9d24-\
c1c5feb1b17d"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "getBarycenterSortForTwoLayers", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getBarycenterSortForTwoLayers", "[", 
   RowBox[{
   "order_", ",", " ", "arcs_", ",", " ", "adjLists_", ",", " ", "first_", 
    ",", " ", "second_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "bc", ",", " ", "sortV", ",", " ", "m", ",", "step1", ",", "step2", ",", 
      "step3"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"bc", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", " ", 
          RowBox[{"getBarycenterValueExample", "[", 
           RowBox[{"#", ",", " ", 
            RowBox[{
            "order", "\[LeftDoubleBracket]", "second", 
             "\[RightDoubleBracket]"}], ",", " ", "adjLists"}], "]"}]}], 
         "}"}], "&"}], "/@", " ", 
       RowBox[{
       "order", "\[LeftDoubleBracket]", "first", 
        "\[RightDoubleBracket]"}]}]}], ";", "\n", 
     RowBox[{"step1", " ", "=", " ", 
      RowBox[{"GatherBy", "[", 
       RowBox[{
        RowBox[{"DeleteCases", "[", 
         RowBox[{"bc", ",", " ", 
          RowBox[{"{", 
           RowBox[{"_", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", " ", "Last"}], "]"}]}],
      ";", "\n", 
     RowBox[{"step2", " ", "=", " ", 
      RowBox[{"SortBy", "[", 
       RowBox[{"step1", ",", " ", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "&"}]}], 
       "]"}]}], ";", "\n", 
     RowBox[{"sortV", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"step2", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"m", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"bc", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"_", ",", " ", "a_"}], "}"}], "/;", " ", 
            RowBox[{"a", "\[NotEqual]", 
             RowBox[{"-", "1"}]}]}], " ", "->", " ", 
           RowBox[{"{", 
            RowBox[{"Missing", "[", "]"}], "}"}]}], "}"}]}], ")"}], 
       "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", "\n", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MissingQ", "[", 
          RowBox[{"m", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
           "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
           "m", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "=", 
           RowBox[{"First", "[", "sortV", "]"}]}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"sortV", "=", 
           RowBox[{"Rest", "[", "sortV", "]"}]}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "m", "]"}]}], "}"}]}], "]"}], ";", "\n", 
     RowBox[{"ReplacePart", "[", 
      RowBox[{"order", ",", " ", 
       RowBox[{"first", "\[Rule]", " ", "m"}]}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.8139354167280807`*^9, {3.813936590756459*^9, 3.813936850660172*^9}, {
   3.8139368943913097`*^9, 3.8139369119139905`*^9}, {3.813936980271533*^9, 
   3.8139370302629843`*^9}, {3.8139371177420115`*^9, 
   3.8139371185528097`*^9}, {3.8139372797397165`*^9, 3.813937281160403*^9}},
 CellLabel->
  "In[343]:=",ExpressionUUID->"05e9fadb-d0f6-423e-9c5b-4b57a605dc38"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["\:041f\:0440\:0438\:043c\:0435\:043d\:0435\:043d\:0438\
\:0435 \:043c\:0435\:0442\:043e\:0434\:0430 \:0431\:0430\:0440\:0438\:0446\
\:0435\:043d\:0442\:0440\:043e\:0432 \:0438 \:043c\:0435\:0434\:0438\:0430\
\:043d",
 FontWeight->"Bold",
 FontColor->RGBColor[0.48, 0.39, 0.57]]], "Subsubsection",
 CellFrame->{{0, 0}, {0, 0}},
 ShowCellBracket->True,
 ShowGroupOpener->True,
 CellBracketOptions->{"Color"->GrayLevel[1]},
 CellChangeTimes->{{3.686496556129356*^9, 3.6864965805147943`*^9}, {
   3.686496864932951*^9, 3.6864968838883104`*^9}, {3.68649785181434*^9, 
   3.68649785539003*^9}, 3.6864983105855575`*^9, {3.686498430915518*^9, 
   3.6864984317921095`*^9}, {3.6869336518410463`*^9, 3.686933679051639*^9}, {
   3.686935198313303*^9, 3.686935214757235*^9}, {3.686936477688845*^9, 
   3.6869364806690702`*^9}, {3.6875915619723206`*^9, 
   3.6875915727649126`*^9}, {3.689454628502606*^9, 3.6894546304399776`*^9}, {
   3.6894551612789154`*^9, 3.6894551664376965`*^9}, {3.7806740938928986`*^9, 
   3.780674132317737*^9}, {3.8139340244136744`*^9, 3.8139340248946114`*^9}},
 FontFamily->"Century Schoolbook",
 FontSize->28,
 FontColor->RGBColor[
  0.27, 0.19, 0.44],ExpressionUUID->"341e4c29-aef8-49f6-b897-9ce7afe0c1d1"],

Cell[TextData[{
 "\t\:041c\:0435\:0442\:043e\:0434\:044b \
\:043c\:0435\:0434\:0438\:0430\:043d, ",
 StyleBox["\:0431\:0430\:0440\:0438\:0446\:0435\:043d\:0442\:0440\:043e\:0432",
  IgnoreSpellCheck->True],
 " \:0438 \:0432\:0437\:0432\:0435\:0448\:0435\:043d\:043d\:044b\:0445 \:043c\
\:0435\:0434\:0438\:0430\:043d \:044f\:0432\:043b\:044f\:044e\:0442\:0441\
\:044f \:0438\:0442\:0435\:0440\:0430\:0446\:0438\:043e\:043d\:043d\:044b\
\:043c\:0438. \:041f\:0440\:0438 \:044d\:0442\:043e\:043c \:043d\:0430\:043f\
\:0440\:0430\:0432\:043b\:0435\:043d\:0438\:0435 \:043e\:0431\:0445\:043e\
\:0434\:0430 \:0433\:0440\:0430\:0444\:0430 \:0437\:0430\:0432\:0438\:0441\
\:0438\:0442 \:043e\:0442 \:0447\:0435\:0442\:043d\:043e\:0441\:0442\:0438 \
\:0438\:0442\:0435\:0440\:0430\:0446\:0438\:0438, \:0435\:0441\:043b\:0438 \
\:0438\:0442\:0435\:0440\:0430\:0446\:0438\:044f \:043d\:0435\:0447\:0435\
\:0442\:043d\:0430\:044f \:043e\:0431\:0445\:043e\:0434 \:043e\:0441\:0443\
\:0449\:0435\:0441\:0442\:0432\:043b\:044f\:0435\:0442\:0441\:044f \:043e\
\:0442 \:0433\:043e\:043b\:043e\:0432\:043d\:043e\:0439 \:0432\:0435\:0440\
\:0448\:0438\:043d\:044b \:043a \:043b\:0438\:0441\:0442\:044c\:044f\:043c, \
\:0435\:0441\:043b\:0438 \:0447\:0435\:0442\:043d\:0430\:044f \[LongDash] \
\:043e\:0442 \:043b\:0438\:0441\:0442\:044c\:0435\:0432 \:043a \:0433\:043e\
\:043b\:043e\:0432\:043d\:043e\:0439 \:0432\:0435\:0440\:0448\:0438\:043d\
\:0435. \:041f\:043e\:0441\:043b\:0435 \:043f\:0440\:043e\:0432\:0435\:0434\
\:0435\:043d\:0438\:044f \:043a\:0430\:0436\:0434\:043e\:0439 \:0438\:0442\
\:0435\:0440\:0430\:0446\:0438\:0438 \:043e\:043f\:0440\:0435\:0434\:0435\
\:043b\:044f\:0435\:0442\:0441\:044f \:0442\:0435\:043a\:0443\:0449\:0435\
\:0435 \:0447\:0438\:0441\:043b\:043e \:043f\:0435\:0440\:0435\:0441\:0435\
\:0447\:0435\:043d\:0438\:0439 \:0440\:0435\:0431\:0435\:0440 \:0433\:0440\
\:0430\:0444\:0430. \:0415\:0441\:043b\:0438 \:043a\:043e\:043b\:0438\:0447\
\:0435\:0441\:0442\:0432\:043e \:043f\:0435\:0440\:0435\:0441\:0435\:0447\
\:0435\:043d\:0438\:0439 \:0432 \:0440\:0435\:0437\:0443\:043b\:044c\:0442\
\:0430\:0442\:0435 \:0432\:044b\:043f\:043e\:043b\:043d\:0435\:043d\:0438\
\:044f \:0438\:0442\:0435\:0440\:0430\:0446\:0438\:0438 \:0441\:043e\:043a\
\:0440\:0430\:0449\:0430\:0435\:0442\:0441\:044f, \:0442\:043e \:043f\:043e\
\:043b\:0443\:0447\:0435\:043d\:043d\:044b\:0439 \:043f\:043e\:0440\:044f\
\:0434\:043e\:043a \:0432\:0435\:0440\:0448\:0438\:043d \:0437\:0430\:043f\
\:0438\:0441\:044b\:0432\:0430\:0435\:0442\:0441\:044f \:043a\:0430\:043a ",
 StyleBox["\[LeftGuillemet]\:0442\:0435\:043a\:0443\:0449\:0438\:0439",
  IgnoreSpellCheck->True],
 " ",
 StyleBox["\:043b\:0443\:0447\:0448\:0438\:0439\[RightGuillemet]",
  IgnoreSpellCheck->True],
 ". \:0421\:043b\:0435\:0434\:043e\:0432\:0430\:0442\:0435\:043b\:044c\:043d\
\:043e, \:0432\:043e \:0432\:0440\:0435\:043c\:044f \:0440\:0430\:0441\:0447\
\:0435\:0442\:0430 \:043d\:0435\:043e\:0431\:0445\:043e\:0434\:0438\:043c\
\:043e \:0438\:0441\:043f\:043e\:043b\:044c\:0437\:043e\:0432\:0430\:0442\
\:044c \:0444\:0443\:043d\:043a\:0446\:0438\:044e \:043f\:043e\:0434\:0441\
\:0447\:0435\:0442\:0430 \:043a\:043e\:043b\:0438\:0447\:0435\:0441\:0442\
\:0432\:0430 \:043f\:0435\:0440\:0435\:0441\:0435\:0447\:0435\:043d\:0438\
\:0439 \:043d\:0430 \:0441\:043b\:043e\:0435. \:041f\:0440\:0438 \:043f\:043e\
\:0434\:0441\:0447\:0435\:0442\:0435 \:043f\:0435\:0440\:0435\:0441\:0435\
\:0447\:0435\:043d\:0438\:0439 \:0438\:0441\:0441\:043b\:0435\:0434\:0443\
\:044e\:0442\:0441\:044f \:0432\:0441\:0435 \:043f\:0430\:0440\:044b \:0440\
\:0435\:0431\:0435\:0440 \:043d\:0430 \:0434\:0430\:043d\:043d\:043e\:043c \
\:0443\:0440\:043e\:0432\:043d\:0435. "
}], "Text",
 ShowCellBracket->True,
 ShowGroupOpener->True,
 CellBracketOptions->{"Color"->GrayLevel[1]},
 CellChangeTimes->{{3.6864984608234043`*^9, 3.6864984991254764`*^9}, 
   3.687515459280292*^9, 3.6875155666273856`*^9, {3.6875156472166986`*^9, 
   3.687515671018668*^9}, {3.6875158221280165`*^9, 3.6875158258791857`*^9}, {
   3.687515862783156*^9, 3.687515865198354*^9}, {3.6875160345181627`*^9, 
   3.6875160512513313`*^9}, {3.687516113450786*^9, 3.687516123952756*^9}, {
   3.687516182555854*^9, 3.687516195968334*^9}, {3.6875162865707083`*^9, 
   3.687516359669688*^9}, {3.687516391905352*^9, 3.6875164347481203`*^9}, {
   3.6875165778332615`*^9, 3.687516590028863*^9}, {3.687516660601905*^9, 
   3.687516712162305*^9}, {3.687516757682416*^9, 3.6875168557454443`*^9}, {
   3.6875168932667727`*^9, 3.6875168965927877`*^9}, {3.687516939207587*^9, 
   3.687516944631971*^9}, 3.687517001606165*^9, {3.6875170588492036`*^9, 
   3.6875171698011255`*^9}, {3.6875172029630685`*^9, 3.687517403793154*^9}, {
   3.6875174656497087`*^9, 3.687517609850667*^9}, {3.6875176824047637`*^9, 
   3.687517684014223*^9}, {3.68751773096682*^9, 3.687517737285144*^9}, {
   3.687517794807881*^9, 3.687517817055234*^9}, {3.687517871907611*^9, 
   3.687518021571865*^9}, {3.6875180537003255`*^9, 3.6875180688585005`*^9}, {
   3.6875181337466216`*^9, 3.6875181867268105`*^9}, {3.687518357706749*^9, 
   3.68751839003024*^9}, {3.6875184633528433`*^9, 3.687518474867594*^9}, {
   3.687518505051896*^9, 3.6875185471769905`*^9}, {3.6875186228953943`*^9, 
   3.687518670936413*^9}, {3.687518733369959*^9, 3.6875187774827642`*^9}, {
   3.6875188149984813`*^9, 3.6875188710498266`*^9}, {3.6875233413284163`*^9, 
   3.687523361234172*^9}, 3.687523518993887*^9, {3.687523837691682*^9, 
   3.6875238398400307`*^9}, {3.6875239579906554`*^9, 3.687523980265192*^9}, {
   3.687524232633113*^9, 3.687524256055971*^9}, {3.687525173360608*^9, 
   3.6875252856399813`*^9}, {3.687525320477137*^9, 3.6875254500760803`*^9}, {
   3.687525483733161*^9, 3.687525706985507*^9}, {3.6875257485617886`*^9, 
   3.687525767935707*^9}, {3.687525873704694*^9, 3.687525964754634*^9}, 
   3.6875260462176695`*^9, {3.6875263904896727`*^9, 3.6875264072794924`*^9}, {
   3.687526462720359*^9, 3.6875264727556353`*^9}, {3.6875265418096895`*^9, 
   3.6875265468059645`*^9}, {3.6875274742370424`*^9, 
   3.6875274884802313`*^9}, {3.68752760456144*^9, 3.6875279974232025`*^9}, {
   3.6875280520256248`*^9, 3.6875280983718777`*^9}, {3.687528147834947*^9, 
   3.687528188685358*^9}, {3.68752851022935*^9, 3.6875288355446835`*^9}, {
   3.687530197343014*^9, 3.6875302368876553`*^9}, {3.687530301955083*^9, 
   3.6875303587140646`*^9}, {3.687530552303932*^9, 3.6875307463296194`*^9}, {
   3.687530836139085*^9, 3.687530883172041*^9}, {3.6875309132425537`*^9, 
   3.687531241264849*^9}, {3.6875313103895197`*^9, 3.687531362369598*^9}, {
   3.6875313964047103`*^9, 3.687531397967296*^9}, {3.687531784734197*^9, 
   3.687531865717052*^9}, {3.6875319609524837`*^9, 3.6875319701963263`*^9}, {
   3.6875323304997835`*^9, 3.687532343772472*^9}, {3.687532398276781*^9, 
   3.6875326377312574`*^9}, {3.687532741765334*^9, 3.68753290990928*^9}, {
   3.6875340548372145`*^9, 3.687534262129217*^9}, {3.687534308371039*^9, 
   3.687534308972139*^9}, {3.6875343806875443`*^9, 3.6875343924962044`*^9}, 
   3.6875344295301466`*^9, {3.6875344756241813`*^9, 3.6875344964622483`*^9}, {
   3.6875349850976543`*^9, 3.687535017629533*^9}, {3.6875350985628223`*^9, 
   3.687535172397927*^9}, {3.6875352342175326`*^9, 3.687535235969162*^9}, {
   3.6875352795654793`*^9, 3.6875353375278835`*^9}, {3.687535396961086*^9, 
   3.687535442481139*^9}, {3.68753551659321*^9, 3.687535517358885*^9}, {
   3.6875355500544515`*^9, 3.687535721919933*^9}, {3.687535765710606*^9, 
   3.687535770328472*^9}, {3.6875359827071447`*^9, 3.6875359933185096`*^9}, {
   3.6875363987058735`*^9, 3.687536436394267*^9}, {3.6875364901018095`*^9, 
   3.687536500484993*^9}, {3.6875366588245783`*^9, 3.687536674589912*^9}, {
   3.687536786339799*^9, 3.6875367946849213`*^9}, {3.6875368484755077`*^9, 
   3.6875368919049063`*^9}, {3.687537083064423*^9, 3.6875370834953547`*^9}, {
   3.6875371597667885`*^9, 3.687537162820863*^9}, {3.687537216967203*^9, 
   3.6875372935803547`*^9}, {3.687537332464343*^9, 3.6875373754058204`*^9}, {
   3.687537416688527*^9, 3.687537502777544*^9}, {3.687537542408981*^9, 
   3.6875375569910126`*^9}, 3.687537615004772*^9, {3.687537714163139*^9, 
   3.6875377409069796`*^9}, {3.6875378435920477`*^9, 3.687537930478589*^9}, 
   3.687538398320893*^9, {3.6875386780228724`*^9, 3.6875387689147687`*^9}, {
   3.6875389218330464`*^9, 3.6875390324598656`*^9}, {3.687539090050686*^9, 
   3.687539357393506*^9}, {3.6875394029069276`*^9, 3.6875395251757913`*^9}, {
   3.6875396696316376`*^9, 3.6875397333715734`*^9}, {3.6875397715802135`*^9, 
   3.6875398310052643`*^9}, {3.6875398689553127`*^9, 3.687539902691372*^9}, {
   3.6875400309714346`*^9, 3.687540122489518*^9}, {3.687540272160123*^9, 
   3.687540361539838*^9}, {3.687540615521973*^9, 3.6875406237457895`*^9}, {
   3.6875406835291405`*^9, 3.6875407270664854`*^9}, {3.6875407757634554`*^9, 
   3.6875410760350904`*^9}, {3.687541147238942*^9, 3.6875412337928977`*^9}, {
   3.6875413309361115`*^9, 3.6875413314633617`*^9}, {3.6875413884096093`*^9, 
   3.6875414003727617`*^9}, {3.6894553252579527`*^9, 
   3.6894554153774853`*^9}, {3.689455506215289*^9, 3.6894555077778788`*^9}, {
   3.6896200989591885`*^9, 3.689620117805155*^9}, 3.689621037487772*^9, {
   3.68962299770513*^9, 3.6896230834353714`*^9}, {3.6900608803195095`*^9, 
   3.690060881191983*^9}, {3.690062201056202*^9, 3.690062203987604*^9}},
 FontFamily->"Century Schoolbook",
 FontSize->18,ExpressionUUID->"9289e759-dcfe-4941-a0f3-c775b3ee9bef"],

Cell[TextData[{
 StyleBox["Input",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 StyleBox[": \:043e\:0440\:0438\:0435\:043d\:0442\:0438\:0440\:043e\:0432\
\:0430\:043d\:043d\:044b\:0439 \:0433\:0440\:0430\:0444 ",
  FontWeight->"Plain",
  FontSlant->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"G", "=", 
    RowBox[{"(", 
     RowBox[{"V", ",", "E"}], ")"}]}], TraditionalForm]],
  FontWeight->"Plain",ExpressionUUID->"adcf519e-5539-4271-87f8-ee36d01dcb42"],
 ", \:0438 \:043c\:043d\:043e\:0436\:0435\:0441\:0442\:0432\:043e \
\:043d\:0430\:0447\:0430\:043b\:044c\:043d\:044b\:0445 \:043f\:0435\:0440\
\:0435\:0441\:0442\:0430\:043d\:043e\:0432\:043e\:043a \:0432\:0435\:0440\
\:0448\:0438\:043d \:043d\:0430 \:0441\:043b\:043e\:044f\:0445 ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\:041f", "0"], TraditionalForm]],ExpressionUUID->
  "e1aab750-6bf7-4eb4-a9d4-b9c0de599f18"],
 "\n",
 StyleBox["Output",
  FontWeight->"Bold"],
 ": \:043d\:0430\:0431\:043e\:0440 \:043f\:0435\:0440\:0435\:0441\:0442\:0430\
\:043d\:043e\:0432\:043e\:043a ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\:041f", "return"], TraditionalForm]],ExpressionUUID->
  "5afbf519-6e12-4d47-9f3f-387332658db7"],
 ";\n1  ",
 StyleBox["procedure",
  FontWeight->"Bold"],
 " ordering()\n2 \t\:041f = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\:041f", "0"], TraditionalForm]],ExpressionUUID->
  "4c0c736d-0792-4fb3-b774-dd147c95dc88"],
 ";\n3 \t",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\:041f", "return"], TraditionalForm]],ExpressionUUID->
  "81493c77-21e1-4163-b310-bc26d6d4f2d6"],
 " = \:041f;\n4 \t",
 StyleBox["for",
  FontWeight->"Bold"],
 " i = 0 ",
 StyleBox["to",
  FontWeight->"Bold"],
 " Max_iterations ",
 StyleBox["do",
  FontWeight->"Bold"],
 "\n5 \t\t\:041f = heuristic(\:041f,i);\n6\t\t",
 StyleBox["if",
  FontWeight->"Bold"],
 " crossing(\:041f) < crossing(",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\:041f", "return"], TraditionalForm]],ExpressionUUID->
  "b1224fc3-3151-4e78-af08-91659afa0bb0"],
 ") ",
 StyleBox["then",
  FontWeight->"Bold"],
 "\n7\t\t\t",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\:041f", "return"], TraditionalForm]],ExpressionUUID->
  "86ff0b8c-edad-4815-8dab-4bc99edf1c84"],
 " = \:041f;\n8\t",
 StyleBox["end",
  FontWeight->"Bold"],
 "\n9\t",
 StyleBox["return",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\:041f", "return"], TraditionalForm]],ExpressionUUID->
  "d3dd0035-9ecf-4011-a36f-bc3480e39d25"],
 ";\n10  ",
 StyleBox["end",
  FontWeight->"Bold"]
}], "Text",
 CellFrame->{{0, 0}, {1, 1}},
 ShowCellBracket->True,
 ShowGroupOpener->True,
 CellBracketOptions->{"Color"->GrayLevel[1]},
 CellChangeTimes->{{3.6864984608234043`*^9, 3.6864984991254764`*^9}, {
  3.6864991042834277`*^9, 3.6864991083925495`*^9}, {3.686499193502403*^9, 
  3.6864991953026915`*^9}, {3.687610149424404*^9, 3.6876101570638485`*^9}, {
  3.6876104074355993`*^9, 3.6876104357889476`*^9}, {3.687610473643091*^9, 
  3.687610478964445*^9}, {3.687611439808259*^9, 3.687611532578885*^9}, {
  3.687611569538491*^9, 3.687611662788518*^9}, {3.687611701326663*^9, 
  3.687611736357874*^9}, {3.6876118056989155`*^9, 3.6876118159943576`*^9}, {
  3.6876121826130643`*^9, 3.6876122034087625`*^9}, {3.6894547282850046`*^9, 
  3.6894550138910923`*^9}, {3.6894550483331833`*^9, 3.68945507244493*^9}, {
  3.689455127333271*^9, 3.6894551276330023`*^9}, {3.6896215622629395`*^9, 
  3.6896215686574664`*^9}, {3.6896216005014496`*^9, 3.6896216008206263`*^9}, {
  3.689621656460938*^9, 3.6896217918376646`*^9}, {3.6896229782242537`*^9, 
  3.689622978520464*^9}},
 FontFamily->"Century Schoolbook",
 FontSize->18,ExpressionUUID->"9354ed79-61ec-4576-ba3f-978d9d7cdbf4"],

Cell[TextData[{
 "\t\:0421\:043b\:0435\:0434\:043e\:0432\:0430\:0442\:0435\:043b\:044c\:043d\
\:043e, \:0432\:043e \:0432\:0440\:0435\:043c\:044f \:0440\:0430\:0441\:0447\
\:0435\:0442\:0430 \:043d\:0435\:043e\:0431\:0445\:043e\:0434\:0438\:043c\
\:043e \:0438\:0441\:043f\:043e\:043b\:044c\:0437\:043e\:0432\:0430\:0442\
\:044c \:0444\:0443\:043d\:043a\:0446\:0438\:044e ",
 StyleBox["crossing",
  FontSlant->"Italic"],
 ", \:043a\:043e\:0442\:043e\:0440\:0430\:044f \:0432 \
\:043a\:0430\:0447\:0435\:0441\:0442\:0432\:0435 \:0438\:0441\:0445\:043e\
\:0434\:043d\:044b\:0445 \:0434\:0430\:043d\:043d\:044b\:0445 \:0438\:0441\
\:043f\:043e\:043b\:044c\:0437\:0443\:0435\:0442 \:043f\:043e\:0440\:044f\
\:0434\:043e\:043a \:0432\:0435\:0440\:0448\:0438\:043d, \:0430 \:043d\:0430 \
\:0432\:044b\:0445\:043e\:0434\:0435 \:0434\:0430\:0435\:0442 \:0447\:0438\
\:0441\:043b\:043e \:043f\:0435\:0440\:0435\:0441\:0435\:0447\:0435\:043d\
\:0438\:0439 \:0440\:0435\:0431\:0435\:0440 \:0433\:0440\:0430\:0444\:0430."
}], "Text",
 ShowCellBracket->True,
 ShowGroupOpener->True,
 CellBracketOptions->{"Color"->GrayLevel[1]},
 CellChangeTimes->{{3.6864984608234043`*^9, 3.6864984991254764`*^9}, 
   3.687515459280292*^9, 3.6875155666273856`*^9, {3.6875156472166986`*^9, 
   3.687515671018668*^9}, {3.6875158221280165`*^9, 3.6875158258791857`*^9}, {
   3.687515862783156*^9, 3.687515865198354*^9}, {3.6875160345181627`*^9, 
   3.6875160512513313`*^9}, {3.687516113450786*^9, 3.687516123952756*^9}, {
   3.687516182555854*^9, 3.687516195968334*^9}, {3.6875162865707083`*^9, 
   3.687516359669688*^9}, {3.687516391905352*^9, 3.6875164347481203`*^9}, {
   3.6875165778332615`*^9, 3.687516590028863*^9}, {3.687516660601905*^9, 
   3.687516712162305*^9}, {3.687516757682416*^9, 3.6875168557454443`*^9}, {
   3.6875168932667727`*^9, 3.6875168965927877`*^9}, {3.687516939207587*^9, 
   3.687516944631971*^9}, 3.687517001606165*^9, {3.6875170588492036`*^9, 
   3.6875171698011255`*^9}, {3.6875172029630685`*^9, 3.687517403793154*^9}, {
   3.6875174656497087`*^9, 3.687517609850667*^9}, {3.6875176824047637`*^9, 
   3.687517684014223*^9}, {3.68751773096682*^9, 3.687517737285144*^9}, {
   3.687517794807881*^9, 3.687517817055234*^9}, {3.687517871907611*^9, 
   3.687518021571865*^9}, {3.6875180537003255`*^9, 3.6875180688585005`*^9}, {
   3.6875181337466216`*^9, 3.6875181867268105`*^9}, {3.687518357706749*^9, 
   3.68751839003024*^9}, {3.6875184633528433`*^9, 3.687518474867594*^9}, {
   3.687518505051896*^9, 3.6875185471769905`*^9}, {3.6875186228953943`*^9, 
   3.687518670936413*^9}, {3.687518733369959*^9, 3.6875187774827642`*^9}, {
   3.6875188149984813`*^9, 3.6875188710498266`*^9}, {3.6875233413284163`*^9, 
   3.687523361234172*^9}, 3.687523518993887*^9, {3.687523837691682*^9, 
   3.6875238398400307`*^9}, {3.6875239579906554`*^9, 3.687523980265192*^9}, {
   3.687524232633113*^9, 3.687524256055971*^9}, {3.687525173360608*^9, 
   3.6875252856399813`*^9}, {3.687525320477137*^9, 3.6875254500760803`*^9}, {
   3.687525483733161*^9, 3.687525706985507*^9}, {3.6875257485617886`*^9, 
   3.687525767935707*^9}, {3.687525873704694*^9, 3.687525964754634*^9}, 
   3.6875260462176695`*^9, {3.6875263904896727`*^9, 3.6875264072794924`*^9}, {
   3.687526462720359*^9, 3.6875264727556353`*^9}, {3.6875265418096895`*^9, 
   3.6875265468059645`*^9}, {3.6875274742370424`*^9, 
   3.6875274884802313`*^9}, {3.68752760456144*^9, 3.6875279974232025`*^9}, {
   3.6875280520256248`*^9, 3.6875280983718777`*^9}, {3.687528147834947*^9, 
   3.687528188685358*^9}, {3.68752851022935*^9, 3.6875288355446835`*^9}, {
   3.687530197343014*^9, 3.6875302368876553`*^9}, {3.687530301955083*^9, 
   3.6875303587140646`*^9}, {3.687530552303932*^9, 3.6875307463296194`*^9}, {
   3.687530836139085*^9, 3.687530883172041*^9}, {3.6875309132425537`*^9, 
   3.687531241264849*^9}, {3.6875313103895197`*^9, 3.687531362369598*^9}, {
   3.6875313964047103`*^9, 3.687531397967296*^9}, {3.687531784734197*^9, 
   3.687531865717052*^9}, {3.6875319609524837`*^9, 3.6875319701963263`*^9}, {
   3.6875323304997835`*^9, 3.687532343772472*^9}, {3.687532398276781*^9, 
   3.6875326377312574`*^9}, {3.687532741765334*^9, 3.68753290990928*^9}, {
   3.6875340548372145`*^9, 3.687534262129217*^9}, {3.687534308371039*^9, 
   3.687534308972139*^9}, {3.6875343806875443`*^9, 3.6875343924962044`*^9}, 
   3.6875344295301466`*^9, {3.6875344756241813`*^9, 3.6875344964622483`*^9}, {
   3.6875349850976543`*^9, 3.687535017629533*^9}, {3.6875350985628223`*^9, 
   3.687535172397927*^9}, {3.6875352342175326`*^9, 3.687535235969162*^9}, {
   3.6875352795654793`*^9, 3.6875353375278835`*^9}, {3.687535396961086*^9, 
   3.687535442481139*^9}, {3.68753551659321*^9, 3.687535517358885*^9}, {
   3.6875355500544515`*^9, 3.687535721919933*^9}, {3.687535765710606*^9, 
   3.687535770328472*^9}, {3.6875359827071447`*^9, 3.6875359933185096`*^9}, {
   3.6875363987058735`*^9, 3.687536436394267*^9}, {3.6875364901018095`*^9, 
   3.687536500484993*^9}, {3.6875366588245783`*^9, 3.687536674589912*^9}, {
   3.687536786339799*^9, 3.6875367946849213`*^9}, {3.6875368484755077`*^9, 
   3.6875368919049063`*^9}, {3.687537083064423*^9, 3.6875370834953547`*^9}, {
   3.6875371597667885`*^9, 3.687537162820863*^9}, {3.687537216967203*^9, 
   3.6875372935803547`*^9}, {3.687537332464343*^9, 3.6875373754058204`*^9}, {
   3.687537416688527*^9, 3.687537502777544*^9}, {3.687537542408981*^9, 
   3.6875375569910126`*^9}, 3.687537615004772*^9, {3.687537714163139*^9, 
   3.6875377409069796`*^9}, {3.6875378435920477`*^9, 3.687537930478589*^9}, 
   3.687538398320893*^9, {3.6875386780228724`*^9, 3.6875387689147687`*^9}, {
   3.6875389218330464`*^9, 3.6875390324598656`*^9}, {3.687539090050686*^9, 
   3.687539357393506*^9}, {3.6875394029069276`*^9, 3.6875395251757913`*^9}, {
   3.6875396696316376`*^9, 3.6875397333715734`*^9}, {3.6875397715802135`*^9, 
   3.6875398310052643`*^9}, {3.6875398689553127`*^9, 3.687539902691372*^9}, {
   3.6875400309714346`*^9, 3.687540122489518*^9}, {3.687540272160123*^9, 
   3.687540361539838*^9}, {3.687540615521973*^9, 3.6875406237457895`*^9}, {
   3.6875406835291405`*^9, 3.6875407270664854`*^9}, {3.6875407757634554`*^9, 
   3.6875410760350904`*^9}, {3.687541147238942*^9, 3.6875412337928977`*^9}, {
   3.6875413309361115`*^9, 3.6875413314633617`*^9}, {3.6875413884096093`*^9, 
   3.6875414003727617`*^9}, {3.6894553252579527`*^9, 
   3.6894554153774853`*^9}, {3.689455506215289*^9, 3.6894555077778788`*^9}, {
   3.6896200989591885`*^9, 3.689620117805155*^9}, 3.689621037487772*^9, {
   3.689621100116911*^9, 3.6896211329387326`*^9}, {3.689621164246498*^9, 
   3.689621221116481*^9}, {3.6896212753511915`*^9, 3.6896213618461037`*^9}, {
   3.689621414698518*^9, 3.689621485244939*^9}, {3.6896218702740927`*^9, 
   3.6896218780100727`*^9}, 3.689622851588561*^9},
 FontFamily->"Century Schoolbook",
 FontSize->18,ExpressionUUID->"fa46b9aa-9e53-45f0-86d4-cd446e138667"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\:041f\:0440\:043e\:0432\:0435\:0440\:043a\:0430 \:043d\:0430 \:0447\
\:0435\:0442\:043d\:043e\:0441\:0442\:044c \:0438 \:043d\:0435\:0447\:0435\
\:0442\:043d\:043e\:0441\:0442\:044c", "Subsection",
 CellChangeTimes->{{3.813933669425912*^9, 
  3.813933673975419*^9}},ExpressionUUID->"c8d41484-429a-474c-ae1f-\
8b0627651648"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "getVertexOrderBarycenter", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getVertexOrderBarycenter", "[", 
   RowBox[{"layers_", ",", " ", "arcs_", ",", " ", "amountOFiterations_"}], 
   "]"}], " ", ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"order", " ", "=", " ", "layers"}], ",", "adjLists", ",", 
      "adjListsReverse", " ", ",", "resultOrder", ",", "crossers", ",", 
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "layers", "]"}]}], ",", 
      RowBox[{"bestresults", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ",", "\n", 
      RowBox[{"step1", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", " ", 
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "}"}], 
         " ", "&"}], " ", "/@", " ", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"GatherBy", "[", 
           RowBox[{"arcs", ",", " ", "Last"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", "&"}]}], 
         "]"}]}]}], ",", "\n", 
      RowBox[{"step2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", " ", 
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "}"}], 
         " ", "&"}], " ", "/@", " ", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"GatherBy", "[", 
           RowBox[{
            RowBox[{"Reverse", " ", "/@", " ", "arcs"}], ",", " ", "Last"}], 
           "]"}], ",", " ", 
          RowBox[{
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", "&"}]}], 
         "]"}]}]}], ",", "\n", 
      RowBox[{"pairsOfEdges", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Subsets", "[", 
            RowBox[{"#", ",", " ", 
             RowBox[{"{", "2", "}"}]}], "]"}], " ", "&"}], " ", "/@", " ", 
          RowBox[{"GatherBy", "[", 
           RowBox[{"arcs", ",", " ", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], " ", "&"}]}], 
           "]"}]}], ",", " ", "1"}], "]"}]}]}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"adjLists", " ", "=", " ", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"GatherBy", "[", 
          RowBox[{"step1", " ", ",", 
           RowBox[{
            RowBox[{"#", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", " ", "1"}], "\[RightDoubleBracket]"}], "&"}]}],
           "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1", ",", "1", ",", "1"}], 
         "\[RightDoubleBracket]"}], " ", "\[Rule]", " ", 
        RowBox[{"GatherBy", "[", 
         RowBox[{"step1", " ", ",", 
          RowBox[{
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", " ", "1"}], "\[RightDoubleBracket]"}], " ", 
           "&"}]}], "]"}]}], "]"}]}], ";", "\n", 
     RowBox[{"adjListsReverse", " ", "=", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"GatherBy", "[", 
          RowBox[{"step2", ",", 
           RowBox[{
            RowBox[{"#", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", " ", "1"}], "\[RightDoubleBracket]"}], "&"}]}],
           "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1", ",", "1", ",", "1"}], 
         "\[RightDoubleBracket]"}], " ", "\[Rule]", " ", 
        RowBox[{"GatherBy", "[", 
         RowBox[{"step2", " ", ",", 
          RowBox[{
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", " ", "1"}], "\[RightDoubleBracket]"}], " ", 
           "&"}]}], "]"}]}], "]"}]}], ";", "\n", 
     RowBox[{"crossers", "=", 
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"isPairOfEdgesCrossing", "[", 
          RowBox[{"#", ",", " ", "order"}], "]"}], " ", "&"}], " ", "/@", " ",
         "pairsOfEdges"}], "]"}]}], ";", "\n", 
     RowBox[{"Do", "[", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"iter", ",", " ", "2"}], "]"}], " ", "!=", " ", "0"}], 
          ",", "\[IndentingNewLine]", "\t\t", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"order", "\[LeftDoubleBracket]", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", 
                RowBox[{"i", "+", "1"}]}], "}"}], "\[RightDoubleBracket]"}], 
             " ", "=", " ", 
             RowBox[{"getBarycenterSortForTwoLayers", "[", 
              RowBox[{
               RowBox[{"order", "\[LeftDoubleBracket]", 
                RowBox[{"{", 
                 RowBox[{"i", ",", " ", 
                  RowBox[{"i", "+", "1"}]}], "}"}], "\[RightDoubleBracket]"}],
                ",", " ", "\n", "\t\t\t\t", 
               RowBox[{"Select", "[", 
                RowBox[{"arcs", ",", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", " ", "1"}], "\[RightDoubleBracket]"}], 
                   " ", "==", " ", "i"}], " ", "&"}]}], "]"}], ",", " ", 
               RowBox[{
                RowBox[{"i", "+", "1"}], " ", "/.", " ", "adjLists"}], ",", 
               " ", "2", ",", " ", "1"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", 
              RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"order", "\[LeftDoubleBracket]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"i", "-", "1"}], ",", " ", "i"}], "}"}], 
              "\[RightDoubleBracket]"}], " ", "=", " ", 
             RowBox[{"getBarycenterSortForTwoLayers", "[", 
              RowBox[{
               RowBox[{"order", "\[LeftDoubleBracket]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"i", "-", "1"}], ",", " ", "i"}], "}"}], 
                "\[RightDoubleBracket]"}], ",", " ", "\n", "\t\t\t\t", 
               RowBox[{"Select", "[", 
                RowBox[{"arcs", ",", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", " ", "1"}], "\[RightDoubleBracket]"}], 
                   " ", "==", " ", 
                   RowBox[{"i", "-", "1"}]}], " ", "&"}]}], "]"}], ",", " ", 
               RowBox[{
                RowBox[{"i", "-", "1"}], "/.", "adjListsReverse"}], ",", " ", 
               "1", ",", " ", "2"}], "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", " ", "n", ",", " ", "2", ",", " ", 
              RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"bestresults", ",", " ", 
          RowBox[{"{", 
           RowBox[{"order", ",", " ", "crossers"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"iter", ",", "amountOFiterations"}], "}"}]}], "\n", "]"}], 
     ";", "\n", 
     RowBox[{"resultOrder", "=", 
      RowBox[{
       RowBox[{"MinimalBy", "[", 
        RowBox[{"bestresults", ",", "Last"}], "]"}], "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}]}]}], "\n", 
   "]"}]}]}], "Input",
 CellChangeTimes->{
  3.8139309898715057`*^9, {3.813931051793003*^9, 3.8139310626905975`*^9}, {
   3.8139311134395685`*^9, 3.813931145911994*^9}, {3.813931358548848*^9, 
   3.81393136406219*^9}, 3.8139314357451305`*^9, {3.813931762775587*^9, 
   3.8139318584742594`*^9}, {3.8139319965517397`*^9, 3.813932031102044*^9}, {
   3.813932121186861*^9, 3.8139321783679705`*^9}, {3.813932223205855*^9, 
   3.813932309026828*^9}, {3.8139323449362555`*^9, 3.8139323973510427`*^9}, {
   3.813932489821692*^9, 3.813932507259492*^9}, {3.813932542671034*^9, 
   3.8139325555243893`*^9}, {3.813932944458849*^9, 3.8139331099555407`*^9}, {
   3.8139332695219812`*^9, 3.8139333064351845`*^9}, {3.813933403324937*^9, 
   3.813933408164027*^9}, {3.813933854873145*^9, 3.813933859201516*^9}, {
   3.81393424241547*^9, 3.813934310739299*^9}, {3.813934380802209*^9, 
   3.8139343843248587`*^9}, {3.8139344163263326`*^9, 
   3.8139344347771587`*^9}, {3.813934494874175*^9, 3.813934499627307*^9}, {
   3.8139364189681144`*^9, 3.8139364586971197`*^9}, {3.8139369321910534`*^9, 
   3.813936953308691*^9}, {3.813937314009099*^9, 3.8139373270788193`*^9}, {
   3.81393749278473*^9, 3.8139375236145887`*^9}, 3.8139375952554464`*^9, 
   3.8139376812443595`*^9, {3.8139377620735674`*^9, 3.813937871032251*^9}, {
   3.813937912764717*^9, 3.8139380025962305`*^9}, {3.813938051061859*^9, 
   3.8139381067798347`*^9}, {3.813938145007843*^9, 3.813938196735321*^9}, {
   3.813938246894826*^9, 3.8139382519415483`*^9}, {3.813938306661876*^9, 
   3.8139385677010565`*^9}, {3.813938600967845*^9, 3.813938607153984*^9}, 
   3.813938711611508*^9},
 CellLabel->
  "In[345]:=",ExpressionUUID->"f858146b-af8e-4ebf-a028-171a81811e39"]
}, Closed]],

Cell[CellGroupData[{

Cell["Test", "Subsection",
 CellChangeTimes->{{3.8139376897253494`*^9, 
  3.8139376906720476`*^9}},ExpressionUUID->"981f2fcd-2685-4395-8c4b-\
795f0ae8f4f5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"results", "=", 
  RowBox[{"getVertexOrderBarycenter", "[", 
   RowBox[{"layers", ",", "arcs", ",", "20"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.813932558974637*^9, 3.813932559234392*^9}, {
   3.813932841819441*^9, 3.813932866950311*^9}, {3.8139329115409174`*^9, 
   3.8139329214924574`*^9}, 3.8139375107220325`*^9},
 CellLabel->
  "In[347]:=",ExpressionUUID->"a4a8dd43-7124-4e1f-be58-752c3202f90f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"v", "[", 
     RowBox[{"1", ",", "8"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"v", "[", 
      RowBox[{"2", ",", "3"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"2", ",", "7"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"2", ",", "13"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"2", ",", "16"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"2", ",", "20"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"2", ",", "28"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"2", ",", "31"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"v", "[", 
      RowBox[{"3", ",", "14"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"3", ",", "9"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"3", ",", "1"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"3", ",", "17"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"3", ",", "21"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"v", "[", 
      RowBox[{"4", ",", "15"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"4", ",", "25"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"4", ",", "10"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"4", ",", "11"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"4", ",", "18"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"4", ",", "22"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"v", "[", 
      RowBox[{"5", ",", "2"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"5", ",", "26"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"5", ",", "29"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"5", ",", "12"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"5", ",", "19"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"5", ",", "23"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"v", "[", 
      RowBox[{"6", ",", "5"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"6", ",", "27"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"6", ",", "30"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"6", ",", "4"}], "]"}], ",", 
     RowBox[{"v", "[", 
      RowBox[{"6", ",", "24"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", "[", 
     RowBox[{"7", ",", "6"}], "]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.813931667377319*^9, {3.813931811895109*^9, 3.813931831019746*^9}, {
   3.813931920469591*^9, 3.8139319358885136`*^9}, 3.8139320236536007`*^9, 
   3.8139321872227306`*^9, 3.813932313484708*^9, {3.813932393581699*^9, 
   3.8139323996211295`*^9}, 3.8139325119296484`*^9, {3.8139328044935503`*^9, 
   3.8139328674208746`*^9}, {3.8139329132670856`*^9, 3.813932921969271*^9}, {
   3.8139329983008165`*^9, 3.8139330213735223`*^9}, 3.813933114538686*^9, {
   3.8139334130191016`*^9, 3.813933434313775*^9}, 3.813933515327105*^9, 
   3.813934314420389*^9, 3.8139343865204444`*^9, 3.8139344471323557`*^9, 
   3.8139345490654926`*^9, 3.8139352004567814`*^9, 3.8139364534900246`*^9, {
   3.813936796416646*^9, 3.8139368118492537`*^9}, 3.8139369163913603`*^9, 
   3.813936955536733*^9, {3.813937006376197*^9, 3.813937035149917*^9}, 
   3.8139371221707487`*^9, 3.813937169762164*^9, 3.8139373343670673`*^9, 
   3.8139375114239163`*^9, 3.8139375973860025`*^9, 3.8139376830355797`*^9, {
   3.8139377890414476`*^9, 3.8139378056219273`*^9}, {3.8139379858730497`*^9, 
   3.8139380048310194`*^9}, {3.8139383507744446`*^9, 3.8139383616739535`*^9}, 
   3.8139384017694216`*^9, {3.8139384616107783`*^9, 3.8139384758457613`*^9}, {
   3.8139386088239093`*^9, 3.8139386259654045`*^9}, 3.813938714081891*^9, 
   3.8139390994598055`*^9, {3.813939201502631*^9, 3.813939218790742*^9}, {
   3.813939258792861*^9, 3.813939272529792*^9}},
 CellLabel->
  "Out[347]=",ExpressionUUID->"fe88746e-8611-49aa-b064-22e4ee67bee1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"results", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "All", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8139328804280605`*^9, 3.813932893786497*^9}},
 CellLabel->
  "In[348]:=",ExpressionUUID->"eb2c7e13-255e-4c7c-9ec6-8d9c19c39ce1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "8", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "7", ",", "13", ",", "16", ",", "20", ",", "28", ",", "31"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "9", ",", "1", ",", "17", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "25", ",", "10", ",", "11", ",", "18", ",", "22"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "26", ",", "29", ",", "12", ",", "19", ",", "23"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "27", ",", "30", ",", "4", ",", "24"}], "}"}], ",", 
   RowBox[{"{", "6", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8139328867754564`*^9, 3.813932922836475*^9}, 
   3.8139330232407227`*^9, 3.813933115447895*^9, {3.813933414094082*^9, 
   3.8139334350881615`*^9}, 3.813933520913329*^9, 3.8139343162274933`*^9, 
   3.813934551434553*^9, 3.8139352017525425`*^9, 3.81393645439425*^9, 
   3.813936813141349*^9, 3.813936917385683*^9, 3.8139369565429835`*^9, {
   3.8139370070309176`*^9, 3.813937036157304*^9}, 3.813937123571455*^9, 
   3.813937170716562*^9, 3.8139373354980497`*^9, 3.813937512921096*^9, 
   3.8139375986561346`*^9, 3.81393768363552*^9, 3.813937806668936*^9, {
   3.8139379868908944`*^9, 3.8139380060252724`*^9}, 3.813938363182903*^9, 
   3.813938402521982*^9, {3.813938462521822*^9, 3.813938476580661*^9}, 
   3.8139386096566305`*^9, 3.8139387152352467`*^9, 3.813939100517888*^9, 
   3.8139392199864674`*^9, {3.813939259026727*^9, 3.813939272654459*^9}},
 CellLabel->
  "Out[348]=",ExpressionUUID->"11a3a358-d6eb-4b48-8d14-2bcdb0593f21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getDummiesResult", "[", "\"\<layers with dummies\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8139328995834093`*^9, 3.813932904140926*^9}},
 CellLabel->
  "In[349]:=",ExpressionUUID->"38fc5aea-94d2-4f99-b98b-5d620b58d813"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "8", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "7", ",", "13", ",", "16", ",", "20", ",", "28", ",", "31"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "1", ",", "14", ",", "17", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "11", ",", "15", ",", "18", ",", "22", ",", "25"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "12", ",", "19", ",", "23", ",", "26", ",", "29"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "24", ",", "27", ",", "30"}], "}"}], ",", 
   RowBox[{"{", "6", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.813932904600339*^9, 3.8139330268288636`*^9, 3.8139334376882787`*^9, 
   3.813933523186969*^9, 3.813934318440054*^9, 3.813934552027832*^9, 
   3.813935202328149*^9, 3.813936454860592*^9, 3.813936814147005*^9, 
   3.8139369179795895`*^9, 3.8139369570042872`*^9, {3.813937007640655*^9, 
   3.8139370374008994`*^9}, 3.8139371241247683`*^9, 3.8139371721819105`*^9, 
   3.813937336982038*^9, 3.813937513420245*^9, 3.813937599131739*^9, 
   3.8139376842127433`*^9, {3.8139379877118044`*^9, 3.813938006589133*^9}, 
   3.813938363763509*^9, 3.8139384031991205`*^9, {3.8139384631377482`*^9, 
   3.8139384772206755`*^9}, 3.8139386101194916`*^9, 3.81393871569302*^9, 
   3.813939101672387*^9, 3.8139392209790487`*^9, {3.8139392592735853`*^9, 
   3.8139392728956413`*^9}},
 CellLabel->
  "Out[349]=",ExpressionUUID->"ef883807-9063-4cec-ab77-d16912103990"]
}, Open  ]],

Cell["\<\
\:041a\:043e\:043b\:0438\:0447\:0435\:0441\:0442\:0432\:043e \:043f\:0435\
\:0440\:0435\:0441\:0435\:0447\:0435\:043d\:0438\:0439 \:0438\:0441\:0445\
\:043e\:0434\:043d\:043e\:0433\:043e \:0440\:0430\:0441\:043f\:0440\:0435\
\:0434\:0435\:043b\:0435\:043d\:0438\:044f \:043f\:043e \:0441\:043b\:043e\
\:044f\:043c \:0438 \:043f\:043e\:043b\:0443\:0447\:0435\:043d\:043d\:043e\
\:0433\:043e \:043c\:0435\:0442\:043e\:0434\:043e\:043c \:0411\:0430\:0440\
\:0438\:0446\:0435\:043d\:0442\:0440\:043e\:0432\
\>", "Text",
 CellChangeTimes->{{3.8139376953778563`*^9, 
  3.813937708548253*^9}},ExpressionUUID->"b7f7b04f-b890-4142-9971-\
ed63dff0bd4b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"getNumberOfCrossings", "[", 
  RowBox[{"arcs", ",", "layers"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"getNumberOfCrossings", "[", 
  RowBox[{"arcs", ",", "results"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8139334668024445`*^9, 3.813933501372837*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"d8ddf345-f20f-4d60-8f90-ce32bd6909b1"],

Cell[BoxData["365"], "Output",
 CellChangeTimes->{{3.8139334689790506`*^9, 3.8139335015646915`*^9}, 
   3.8139335449007196`*^9, 3.8139343189735913`*^9, 3.8139345525578403`*^9, 
   3.8139352028525596`*^9, 3.813936455323395*^9, 3.813936815162901*^9, 
   3.8139369185025144`*^9, 3.81393695856019*^9, {3.81393700884272*^9, 
   3.813937038466386*^9}, 3.8139371728137665`*^9, 3.8139373376704082`*^9, 
   3.813937513882244*^9, 3.813937599858638*^9, 3.813937685176095*^9, {
   3.8139379893397756`*^9, 3.813938007604674*^9}, 3.8139383646059465`*^9, 
   3.813938404261324*^9, {3.8139384642206774`*^9, 3.813938477863367*^9}, 
   3.8139386111932397`*^9, 3.813938719344657*^9, 3.813939102611251*^9, 
   3.813939221777418*^9, {3.8139392597183304`*^9, 3.813939273025587*^9}},
 CellLabel->
  "Out[350]=",ExpressionUUID->"8f41dff3-66a2-49cd-b726-ec8c9a553292"],

Cell[BoxData["288"], "Output",
 CellChangeTimes->{{3.8139334689790506`*^9, 3.8139335015646915`*^9}, 
   3.8139335449007196`*^9, 3.8139343189735913`*^9, 3.8139345525578403`*^9, 
   3.8139352028525596`*^9, 3.813936455323395*^9, 3.813936815162901*^9, 
   3.8139369185025144`*^9, 3.81393695856019*^9, {3.81393700884272*^9, 
   3.813937038466386*^9}, 3.8139371728137665`*^9, 3.8139373376704082`*^9, 
   3.813937513882244*^9, 3.813937599858638*^9, 3.813937685176095*^9, {
   3.8139379893397756`*^9, 3.813938007604674*^9}, 3.8139383646059465`*^9, 
   3.813938404261324*^9, {3.8139384642206774`*^9, 3.813938477863367*^9}, 
   3.8139386111932397`*^9, 3.813938719344657*^9, 3.813939102611251*^9, 
   3.813939221777418*^9, {3.8139392597183304`*^9, 3.8139392730325623`*^9}},
 CellLabel->
  "Out[351]=",ExpressionUUID->"650b15e9-9ee6-4165-894a-82024cb064a7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Test From Package", "Subsection",
 CellChangeTimes->{{3.8139391115172834`*^9, 
  3.813939115142721*^9}},ExpressionUUID->"57119a05-3f94-4e46-a13e-\
06f78e006ec0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetVertexOrder", "[", "getDummiesResult", "]"}]], "Input",
 CellChangeTimes->{{3.81393912018049*^9, 3.8139391239048324`*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"f8d2aec1-899a-415b-8876-32a1b4a4e4e4"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"acyclic graph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "6"}]}], "}"}]}], ",", 
   RowBox[{"\<\"feedback set\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "1"}]}], "}"}]}], ",", 
   RowBox[{"\<\"graph with dummies\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"13", "\[DirectedEdge]", "14"}], ",", 
      RowBox[{"14", "\[DirectedEdge]", "15"}], ",", 
      RowBox[{"15", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "16"}], ",", 
      RowBox[{"16", "\[DirectedEdge]", "17"}], ",", 
      RowBox[{"17", "\[DirectedEdge]", "18"}], ",", 
      RowBox[{"18", "\[DirectedEdge]", "19"}], ",", 
      RowBox[{"19", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "20"}], ",", 
      RowBox[{"20", "\[DirectedEdge]", "21"}], ",", 
      RowBox[{"21", "\[DirectedEdge]", "22"}], ",", 
      RowBox[{"22", "\[DirectedEdge]", "23"}], ",", 
      RowBox[{"23", "\[DirectedEdge]", "24"}], ",", 
      RowBox[{"24", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "25"}], ",", 
      RowBox[{"25", "\[DirectedEdge]", "26"}], ",", 
      RowBox[{"26", "\[DirectedEdge]", "27"}], ",", 
      RowBox[{"27", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "28"}], ",", 
      RowBox[{"28", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "29"}], ",", 
      RowBox[{"29", "\[DirectedEdge]", "30"}], ",", 
      RowBox[{"30", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "31"}], ",", 
      RowBox[{"31", "\[DirectedEdge]", "9"}]}], "}"}]}], ",", 
   RowBox[{"\<\"layers with dummies\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "8", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "3", ",", "7", ",", "13", ",", "16", ",", "20", ",", "28", ",", "31"}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"14", ",", "9", ",", "1", ",", "17", ",", "21"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"15", ",", "25", ",", "10", ",", "11", ",", "18", ",", "22"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "26", ",", "29", ",", "12", ",", "19", ",", "23"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "27", ",", "30", ",", "4", ",", "24"}], "}"}], ",", 
      RowBox[{"{", "6", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"first dummy\"\>", "\[Rule]", "11"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.8139391246005077`*^9, 3.813939157048869*^9, 3.8139392231170225`*^9, {
   3.813939260091117*^9, 3.813939273173502*^9}},
 CellLabel->
  "Out[352]=",ExpressionUUID->"8ab49c58-3103-4b74-bba7-73db128f649d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"getNumberOfCrossings", "[", 
  RowBox[{"arcs", ",", "layers"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"getNumberOfCrossings", "[", 
  RowBox[{"arcs", ",", 
   RowBox[{"MapIndexed", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"v", "[", 
       RowBox[{
        RowBox[{"#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", "#1"}], "]"}], "&"}], ",", 
     RowBox[{
      RowBox[{"GetVertexOrder", "[", "getDummiesResult", "]"}], "[", 
      "\"\<layers with dummies\>\"", "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8139393021592336`*^9, 3.8139393162799025`*^9}, 
   3.813939351186933*^9},
 CellLabel->
  "In[361]:=",ExpressionUUID->"072cc9bd-a27c-467d-8d10-12c0b832600d"],

Cell[BoxData["365"], "Output",
 CellChangeTimes->{{3.813939285068133*^9, 3.813939316617817*^9}, 
   3.8139393556015205`*^9},
 CellLabel->
  "Out[361]=",ExpressionUUID->"b7540137-b92c-4f72-8c07-3d1966349cbb"],

Cell[BoxData["288"], "Output",
 CellChangeTimes->{{3.813939285068133*^9, 3.813939316617817*^9}, 
   3.8139393556874723`*^9},
 CellLabel->
  "Out[362]=",ExpressionUUID->"f8849513-21b9-4a47-9502-e59e1c5b3994"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetVertexOrder", "[", 
  RowBox[{"getDummiesResult", ",", 
   RowBox[{"ApproachOption", "->", "\"\<barycenter\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8139393840684223`*^9, 3.8139393916278133`*^9}},
 CellLabel->
  "In[363]:=",ExpressionUUID->"0f8d45be-6c23-4fa4-bf8b-90fde454cac1"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"acyclic graph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "6"}]}], "}"}]}], ",", 
   RowBox[{"\<\"feedback set\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "1"}]}], "}"}]}], ",", 
   RowBox[{"\<\"graph with dummies\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"13", "\[DirectedEdge]", "14"}], ",", 
      RowBox[{"14", "\[DirectedEdge]", "15"}], ",", 
      RowBox[{"15", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "16"}], ",", 
      RowBox[{"16", "\[DirectedEdge]", "17"}], ",", 
      RowBox[{"17", "\[DirectedEdge]", "18"}], ",", 
      RowBox[{"18", "\[DirectedEdge]", "19"}], ",", 
      RowBox[{"19", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "20"}], ",", 
      RowBox[{"20", "\[DirectedEdge]", "21"}], ",", 
      RowBox[{"21", "\[DirectedEdge]", "22"}], ",", 
      RowBox[{"22", "\[DirectedEdge]", "23"}], ",", 
      RowBox[{"23", "\[DirectedEdge]", "24"}], ",", 
      RowBox[{"24", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "25"}], ",", 
      RowBox[{"25", "\[DirectedEdge]", "26"}], ",", 
      RowBox[{"26", "\[DirectedEdge]", "27"}], ",", 
      RowBox[{"27", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "28"}], ",", 
      RowBox[{"28", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "29"}], ",", 
      RowBox[{"29", "\[DirectedEdge]", "30"}], ",", 
      RowBox[{"30", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "31"}], ",", 
      RowBox[{"31", "\[DirectedEdge]", "9"}]}], "}"}]}], ",", 
   RowBox[{"\<\"layers with dummies\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "8", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "3", ",", "7", ",", "13", ",", "16", ",", "20", ",", "28", ",", "31"}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"14", ",", "9", ",", "1", ",", "17", ",", "21"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"15", ",", "25", ",", "10", ",", "11", ",", "18", ",", "22"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "26", ",", "29", ",", "12", ",", "19", ",", "23"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "27", ",", "30", ",", "4", ",", "24"}], "}"}], ",", 
      RowBox[{"{", "6", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"first dummy\"\>", "\[Rule]", "11"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.813939391945242*^9},
 CellLabel->
  "Out[363]=",ExpressionUUID->"73bbe8d6-58f3-439c-8e03-a80a89cd30a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetVertexOrder", "[", 
  RowBox[{"getDummiesResult", ",", 
   RowBox[{"ApproachOption", "->", "\"\<barycenterD\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{3.813939396456504*^9},
 CellLabel->
  "In[364]:=",ExpressionUUID->"5676605e-4b2b-47e5-bc0c-ab8d7476c00a"],

Cell[BoxData[
 TemplateBox[{
  "GetVertexOrder","option",
   "\"Option \\!\\(\\*RowBox[{\\\"\\\\\\\"barycenterD\\\\\\\"\\\"}]\\) is not \
in list of options. Choose another one from the list: \
\\n\\!\\(\\*RowBox[{\\\"\\\\\\\"barycenter\\\\\\\"\\\"}]\\)\"",2,364,14,
   31935233052079453806,"Local","MethodSugiyama`GetVertexOrder"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.813939396807599*^9},
 CellLabel->
  "During evaluation of \
In[364]:=",ExpressionUUID->"b3dbb441-60fc-40e2-bc36-88911835425f"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.813939396821611*^9},
 CellLabel->
  "Out[364]=",ExpressionUUID->"4bff8c76-0d67-4596-bf61-e20a6e8dab84"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{960, 1007},
WindowMargins->{{Automatic, -968}, {Automatic, -8}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 329, 8, 156, "Title",ExpressionUUID->"620ffbd9-395b-43ca-853b-261de8d62e19"],
Cell[CellGroupData[{
Cell[934, 34, 205, 4, 67, "Chapter",ExpressionUUID->"1945d99f-15ea-4e8f-ab66-17fa877255c4"],
Cell[1142, 40, 201, 4, 28, "Input",ExpressionUUID->"1098de61-f6ee-4de1-bfd4-d28c89666bc0"],
Cell[1346, 46, 158, 2, 28, "Input",ExpressionUUID->"c6c3ee9e-0451-4a01-8bb1-fea1560a9b87"],
Cell[CellGroupData[{
Cell[1529, 52, 145, 2, 28, "Input",ExpressionUUID->"bcdf7f06-94cd-4206-a4ee-a951c5d1bd2b"],
Cell[1677, 56, 7885, 184, 129, "Output",ExpressionUUID->"7092b3f3-c53b-4290-a113-09d280ec2e41"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[9611, 246, 151, 3, 56, "Chapter",ExpressionUUID->"914be963-72f4-44bb-b051-20117dd0ca5b"],
Cell[9765, 251, 1596, 26, 122, "Text",ExpressionUUID->"174497f1-1ae2-4a45-be00-b62359a37bde"],
Cell[11364, 279, 2743, 69, 295, "Input",ExpressionUUID->"049450de-5ed1-47ba-8226-8860ec1eba03"],
Cell[14110, 350, 512, 12, 28, "Input",ExpressionUUID->"c6b74e4e-0396-4217-bc50-4c0ef0fe7029"],
Cell[CellGroupData[{
Cell[14647, 366, 152, 3, 67, "Section",ExpressionUUID->"3ae2a01b-bd79-4d4c-ae57-0ea0fd3b296d"],
Cell[CellGroupData[{
Cell[14824, 373, 346, 7, 28, "Input",ExpressionUUID->"a58d4738-dc6e-44f9-86ae-07d02b4cfee9"],
Cell[15173, 382, 2566, 52, 384, "Output",ExpressionUUID->"a2c50094-915a-4966-9973-5add67f5ce7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17776, 439, 478, 12, 48, "Input",ExpressionUUID->"94385e4a-6423-4897-9929-76f4cdf6d5b9"],
Cell[18257, 453, 492, 13, 32, "Output",ExpressionUUID->"faec2d37-6399-4fb2-844d-e147a70d226e"],
Cell[18752, 468, 714, 16, 32, "Output",ExpressionUUID->"51284960-cfb3-4742-8444-da362faf3624"]
}, Open  ]],
Cell[19481, 487, 2914, 78, 162, "Input",ExpressionUUID->"8583ab2a-8896-4177-9d5c-d77ce99c22a3"],
Cell[CellGroupData[{
Cell[22420, 569, 209, 4, 28, "Input",ExpressionUUID->"0ef1d7bb-6cf0-4160-8f16-a61f8f232797"],
Cell[22632, 575, 230, 4, 32, "Output",ExpressionUUID->"69158233-dc59-444d-8121-ebf0bca30fe0"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[22911, 585, 158, 3, 53, "Section",ExpressionUUID->"9b9a2dd2-68c2-4097-a117-7b8d3a22ac8c"],
Cell[23072, 590, 3661, 91, 257, "Input",ExpressionUUID->"956eca1f-8caf-4c71-9083-475791468dac"],
Cell[CellGroupData[{
Cell[26758, 685, 239, 4, 28, "Input",ExpressionUUID->"099d7ff3-e379-47c4-afe6-99e39d462fd5"],
Cell[27000, 691, 155, 3, 32, "Output",ExpressionUUID->"4cc8505a-5c41-48e6-b8c0-b359443cbba1"]
}, Open  ]],
Cell[27170, 697, 96403, 1585, 416, "Input",ExpressionUUID->"8e7511cf-45fe-4462-9815-52e8a12013f1"],
Cell[123576, 2284, 838, 23, 48, "Input",ExpressionUUID->"ad6d202f-7753-42aa-81c5-1b7a6e441ef2"],
Cell[CellGroupData[{
Cell[124439, 2311, 427, 9, 28, "Input",ExpressionUUID->"d16b929c-67ae-48e3-9a9d-7908fd22d032"],
Cell[124869, 2322, 1026, 25, 52, "Output",ExpressionUUID->"b43ef9c3-d90f-480f-a30e-b5925436ca2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125932, 2352, 223, 3, 28, "Input",ExpressionUUID->"524f5c4d-0ff3-4e61-9738-80f3b830bc6f"],
Cell[126158, 2357, 175, 2, 32, "Output",ExpressionUUID->"16d65f9c-f137-4133-af86-ac62b7b9cb9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126370, 2364, 159, 3, 53, "Subsection",ExpressionUUID->"486a0ce9-e061-4548-8e12-f1ae6b073b82"],
Cell[126532, 2369, 2098, 61, 143, "Input",ExpressionUUID->"47dbf91a-cd39-40ae-9266-bc75eca72418"],
Cell[CellGroupData[{
Cell[128655, 2434, 631, 14, 86, "Input",ExpressionUUID->"32a99345-bc95-4e03-972f-8ade3f7be5a3"],
Cell[129289, 2450, 184, 2, 32, "Output",ExpressionUUID->"019f9c12-7704-4976-a0ef-ef63f96b94a7"],
Cell[129476, 2454, 182, 2, 32, "Output",ExpressionUUID->"9d2c64d5-521e-4fa9-adc4-859c0864027d"]
}, Open  ]],
Cell[129673, 2459, 410, 6, 34, "Text",ExpressionUUID->"7ecbf856-65c5-4f06-a832-fd04b1b65fb2"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[130144, 2472, 152, 3, 56, "Chapter",ExpressionUUID->"daab2123-4d27-4ac5-a5cb-46ecd175572b"],
Cell[130299, 2477, 4516, 63, 232, "Text",ExpressionUUID->"78cd03f7-90b9-4ffb-9f55-355104237e4a"],
Cell[CellGroupData[{
Cell[134840, 2544, 205, 3, 67, "Section",ExpressionUUID->"0cf437f4-9a16-4024-9890-8589bfc3fbc4"],
Cell[135048, 2549, 665, 15, 28, "Input",ExpressionUUID->"739ce1f1-be74-4f5f-a350-8dc0fea9a0f4"],
Cell[135716, 2566, 1867, 54, 124, "Input",ExpressionUUID->"1fde7c61-2d4a-42c7-b7a7-aae91774422b"],
Cell[CellGroupData[{
Cell[137608, 2624, 218, 4, 53, "Subsection",ExpressionUUID->"61ef8f1a-3852-4f36-bf67-8c7a2a8ec205"],
Cell[137829, 2630, 2816, 71, 295, "Input",ExpressionUUID->"c2440bc6-bd69-4e2d-b17b-407dd686f053"]
}, Closed]],
Cell[CellGroupData[{
Cell[140682, 2706, 280, 4, 37, "Subsection",ExpressionUUID->"2b068a0e-a7c8-4af8-9c37-f7dddf74e8a7"],
Cell[140965, 2712, 1666, 38, 238, "Input",ExpressionUUID->"141b3431-027b-4cf6-96b1-fe362eb489b5"]
}, Closed]],
Cell[CellGroupData[{
Cell[142668, 2755, 302, 5, 37, "Subsection",ExpressionUUID->"01d0aaca-e4b0-4349-9d24-c1c5feb1b17d"],
Cell[142973, 2762, 3618, 93, 257, "Input",ExpressionUUID->"05e9fadb-d0f6-423e-9c5b-4b57a605dc38"],
Cell[CellGroupData[{
Cell[146616, 2859, 1244, 22, 54, "Subsubsection",ExpressionUUID->"341e4c29-aef8-49f6-b897-9ce7afe0c1d1"],
Cell[147863, 2883, 9487, 133, 212, "Text",ExpressionUUID->"9289e759-dcfe-4941-a0f3-c775b3ee9bef"],
Cell[157353, 3018, 3680, 102, 355, "Text",ExpressionUUID->"9354ed79-61ec-4576-ba3f-978d9d7cdbf4"],
Cell[161036, 3122, 6906, 97, 87, "Text",ExpressionUUID->"fa46b9aa-9e53-45f0-86d4-cd446e138667"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[167991, 3225, 330, 5, 37, "Subsection",ExpressionUUID->"c8d41484-429a-474c-ae1f-8b0627651648"],
Cell[168324, 3232, 9701, 219, 390, "Input",ExpressionUUID->"f858146b-af8e-4ebf-a028-171a81811e39"]
}, Closed]],
Cell[CellGroupData[{
Cell[178062, 3456, 156, 3, 37, "Subsection",ExpressionUUID->"981f2fcd-2685-4395-8c4b-795f0ae8f4f5"],
Cell[CellGroupData[{
Cell[178243, 3463, 426, 8, 28, "Input",ExpressionUUID->"a4a8dd43-7124-4e1f-be58-752c3202f90f"],
Cell[178672, 3473, 3934, 98, 71, "Output",ExpressionUUID->"fe88746e-8611-49aa-b064-22e4ee67bee1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182643, 3576, 272, 6, 28, "Input",ExpressionUUID->"eb2c7e13-255e-4c7c-9ec6-8d9c19c39ce1"],
Cell[182918, 3584, 1603, 32, 52, "Output",ExpressionUUID->"11a3a358-d6eb-4b48-8d14-2bcdb0593f21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184558, 3621, 249, 5, 28, "Input",ExpressionUUID->"38fc5aea-94d2-4f99-b98b-5d620b58d813"],
Cell[184810, 3628, 1515, 32, 52, "Output",ExpressionUUID->"ef883807-9063-4cec-ab77-d16912103990"]
}, Open  ]],
Cell[186340, 3663, 653, 11, 34, "Text",ExpressionUUID->"b7f7b04f-b890-4142-9971-ed63dff0bd4b"],
Cell[CellGroupData[{
Cell[187018, 3678, 363, 7, 48, "Input",ExpressionUUID->"d8ddf345-f20f-4d60-8f90-ce32bd6909b1"],
Cell[187384, 3687, 843, 12, 32, "Output",ExpressionUUID->"8f41dff3-66a2-49cd-b726-ec8c9a553292"],
Cell[188230, 3701, 845, 12, 32, "Output",ExpressionUUID->"650b15e9-9ee6-4165-894a-82024cb064a7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[189124, 3719, 167, 3, 37, "Subsection",ExpressionUUID->"57119a05-3f94-4e46-a13e-06f78e006ec0"],
Cell[CellGroupData[{
Cell[189316, 3726, 232, 4, 28, "Input",ExpressionUUID->"f8d2aec1-899a-415b-8876-32a1b4a4e4e4"],
Cell[189551, 3732, 4552, 98, 147, "Output",ExpressionUUID->"8ab49c58-3103-4b74-bba7-73db128f649d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194140, 3835, 773, 19, 67, "Input",ExpressionUUID->"072cc9bd-a27c-467d-8d10-12c0b832600d"],
Cell[194916, 3856, 207, 4, 32, "Output",ExpressionUUID->"b7540137-b92c-4f72-8c07-3d1966349cbb"],
Cell[195126, 3862, 207, 4, 32, "Output",ExpressionUUID->"f8849513-21b9-4a47-9502-e59e1c5b3994"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195370, 3871, 313, 6, 28, "Input",ExpressionUUID->"0f8d45be-6c23-4fa4-bf8b-90fde454cac1"],
Cell[195686, 3879, 4451, 96, 147, "Output",ExpressionUUID->"73bbe8d6-58f3-439c-8e03-a80a89cd30a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200174, 3980, 286, 6, 28, "Input",ExpressionUUID->"5676605e-4b2b-47e5-bc0c-ab8d7476c00a"],
Cell[200463, 3988, 522, 11, 39, "Message",ExpressionUUID->"b3dbb441-60fc-40e2-bc36-88911835425f"],
Cell[200988, 4001, 160, 3, 32, "Output",ExpressionUUID->"4bff8c76-0d67-4596-bf61-e20a6e8dab84"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

