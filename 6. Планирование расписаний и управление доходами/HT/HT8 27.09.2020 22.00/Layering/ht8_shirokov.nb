(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    335921,       6728]
NotebookOptionsPosition[    325260,       6534]
NotebookOutlinePosition[    325605,       6549]
CellTagsIndexPosition[    325562,       6546]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
\:0414\:043e\:043c\:0430\:0448\:043d\:044f\:044f \:0440\:0430\:0431\:043e\
\:0442\:0430 \:21168
\:0412\:044b\:043f\:043e\:043b\:043d\:0438\:043b \:0410\:043b\:0435\:043a\
\:0441\:0430\:043d\:0434\:0440 \:0428\:0438\:0440\:043e\:043a\:043e\:0432,  \
\:041f\:041c-1701\
\>", "Title",
 CellChangeTimes->{{3.8127051468836145`*^9, 
  3.8127051622836933`*^9}},ExpressionUUID->"513ba1f4-f772-434d-bcd7-\
4d887003a6fc"],

Cell[CellGroupData[{

Cell["Package", "Chapter",
 CellChangeTimes->{
  3.6992696669461823`*^9, 3.70454749050467*^9, {3.704547532369433*^9, 
   3.704547533321432*^9}, {3.706294323875647*^9, 3.706294324495994*^9}, 
   3.7800557942717485`*^9, {3.7806583272931705`*^9, 3.7806583407634153`*^9}, {
   3.8122308416306734`*^9, 3.8122308429620028`*^9}, {3.8127052266526546`*^9, 
   3.812705236112302*^9}},ExpressionUUID->"b9c3ae62-66bc-40f3-82cd-\
296b4e269121"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8122263974444127`*^9, 3.812226408868975*^9}},
 CellLabel->
  "In[1062]:=",ExpressionUUID->"a92dee2a-c262-48bb-b086-19f25bcacdcc"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MethodSugiyama`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8122264134490795`*^9, 3.8122264273580236`*^9}},
 CellLabel->
  "In[1063]:=",ExpressionUUID->"7259c43c-c5cb-41b6-915c-9b439295a581"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "\"\<MethodSugiyama`*\>\""}]], "Input",
 CellChangeTimes->{{3.8122264316298947`*^9, 3.8122264393346505`*^9}, 
   3.8122264959850855`*^9},
 CellLabel->
  "In[1064]:=",ExpressionUUID->"77f65e31-7b60-4150-aaac-33cebdc0fd22"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["MethodSugiyama`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], " ", 
              StyleBox["MethodSugiyama`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["AddDummyVertices", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-51b1e672-4d6b-432e-bc63-ddceb0431b52", {
                   "AddDummyVertices", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DFSearch", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-51b1e672-4d6b-432e-bc63-ddceb0431b52", {
                   "DFSearch", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetGraph", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-51b1e672-4d6b-432e-bc63-ddceb0431b52", {
                   "GetGraph", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GreedyCycleRemoval", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-51b1e672-4d6b-432e-bc63-ddceb0431b52", {
                   "GreedyCycleRemoval", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BFSearch", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-51b1e672-4d6b-432e-bc63-ddceb0431b52", {
                   "BFSearch", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["getAcyclicTriangle", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-51b1e672-4d6b-432e-bc63-ddceb0431b52", {
                   "getAcyclicTriangle", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetLayering", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-51b1e672-4d6b-432e-bc63-ddceb0431b52", {
                   "GetLayering", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SetCoveringFormulation", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-51b1e672-4d6b-432e-bc63-ddceb0431b52", {
                   "SetCoveringFormulation", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DDVertex", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-51b1e672-4d6b-432e-bc63-ddceb0431b52", {
                   "DDVertex", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetDAG", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-51b1e672-4d6b-432e-bc63-ddceb0431b52", {
                   "GetDAG", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["getOrderRandom", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-51b1e672-4d6b-432e-bc63-ddceb0431b52", {
                   "getOrderRandom", "MethodSugiyama`"}, False},
                 ButtonNote->"MethodSugiyama`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.2375]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{
  3.8126180342166843`*^9, 3.8126400955795593`*^9, 3.8126402753977785`*^9, 
   3.8126403262548027`*^9, {3.812640437866892*^9, 3.8126404731225348`*^9}, 
   3.812640613615167*^9, 3.812640724003719*^9, 3.8126521546485753`*^9, 
   3.812702979835165*^9, 3.812704804930199*^9, 3.8127050105625525`*^9, 
   3.812705066025564*^9, 3.812720192938506*^9, 3.812722461855242*^9, 
   3.812722562291073*^9, 3.812722845118226*^9, 3.8127230897479267`*^9, 
   3.812723303473401*^9, 3.812724069279418*^9, {3.812724147705509*^9, 
   3.812724168920038*^9}, 3.8127242043317747`*^9, 3.812724508266432*^9},
 CellLabel->
  "Out[1064]=",ExpressionUUID->"6833a719-53ae-48c6-8348-5d22ae14302d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Part I", "Chapter",
 CellChangeTimes->{{3.812705354358166*^9, 
  3.81270538282607*^9}},ExpressionUUID->"f169089e-0eea-473e-ad55-\
f091e87f48a4"],

Cell[CellGroupData[{

Cell["1.1 GetBaseDummyVertices", "Section",
 CellChangeTimes->{{3.812618070199627*^9, 3.8126180758976736`*^9}, {
  3.8127052309938536`*^9, 
  3.812705239560458*^9}},ExpressionUUID->"df0f20a2-daf0-4063-8707-\
21d3262df676"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "unionDAGandFSInAcycicGraph", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"unionDAGandFSInAcycicGraph", "[", "result_Association", "]"}], ":=", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"DeleteDuplicates", "@", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"result", "[", "\"\<acyclic graph\>\"", "]"}], ",", 
       RowBox[{"Reverse", "/@", 
        RowBox[{"result", "[", "\"\<feedback set\>\"", "]"}]}]}], "]"}]}], 
    ",", 
    RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}]}], "Input",
 CellLabel->
  "In[328]:=",ExpressionUUID->"508def74-2ec1-44a6-a2dd-7e8eaaf7eaba"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "GetBaseDummyVertices", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetBaseDummyVertices", "[", "GetLayeringRes_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dag", "=", 
       RowBox[{"unionDAGandFSInAcycicGraph", "[", "GetLayeringRes", "]"}]}], 
      ",", "newnames", ",", "rules", ",", "arcsWithLongConnections", ",", 
      "start", ",", "dummynum", ",", "longArcs", ",", "forAdd", ",", "parent",
       ",", " ", "child", ",", " ", "startLayer", ",", " ", "dummyVertices", 
      ",", "arcsWithoutLongConnections", ",", "layersWithDummyVertices", ",", 
      "arcsWithDummyVertices"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newnames", "=", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{
           RowBox[{
           "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
           "#1"}], "]"}], "&"}], ",", 
        RowBox[{"res", "[", "\"\<layers\>\"", "]"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", 
     RowBox[{"rules", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{"Rule", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Flatten", "@", 
           RowBox[{"res", "[", "\"\<layers\>\"", "]"}]}], ",", 
          RowBox[{"Flatten", "@", "newnames"}]}], "}"}]}], "]"}]}], ";", 
     RowBox[{"arcsWithLongConnections", "=", 
      RowBox[{
       RowBox[{"EdgeList", "@", "dag"}], "/.", "rules"}]}], ";", 
     RowBox[{"start", "=", 
      RowBox[{"dummynum", "=", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"VertexList", "@", "dag"}], "]"}], "+", "1"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"longArcs", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"arcsWithLongConnections", ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "-", 
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ">", "1"}], 
         "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"forAdd", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"parent", ",", "child"}], "}"}], "=", 
         RowBox[{"List", "@@", "longEdge"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"startLayer", "=", 
         RowBox[{
          RowBox[{
          "parent", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "+", "1"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"dummyVertices", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"v", "[", 
            RowBox[{"layer", ",", 
             RowBox[{"dummynum", "++"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"layer", ",", 
             RowBox[{"Range", "[", 
              RowBox[{"startLayer", ",", 
               RowBox[{
                RowBox[{
                "child", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "-", "1"}]}], "]"}]}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"forAdd", "=", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{"forAdd", ",", "\[IndentingNewLine]", 
           RowBox[{"DirectedEdge", "@@@", "\[IndentingNewLine]", 
            RowBox[{"Partition", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "parent", "}"}], "~", "Join", "~", 
               "dummyVertices", "~", "Join", "~", 
               RowBox[{"{", "child", "}"}]}], ",", "\[IndentingNewLine]", "2",
               ",", "1"}], "\[IndentingNewLine]", "]"}]}]}], 
          "\[IndentingNewLine]", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"longEdge", ",", "longArcs"}], "}"}]}], "\[IndentingNewLine]",
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"arcsWithoutLongConnections", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"DeleteCases", "[", 
         RowBox[{"arcsWithLongConnections", ",", 
          RowBox[{"Alternatives", "@@", "longArcs"}]}], "]"}], ",", 
        "forAdd"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"layersWithDummyVertices", "=", 
      RowBox[{
       RowBox[{"SortBy", "[", 
        RowBox[{
         RowBox[{"GatherBy", "[", 
          RowBox[{
           RowBox[{"VertexList", "@", "arcsWithoutLongConnections"}], ",", 
           "First"}], "]"}], ",", 
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "&"}]}], "]"}],
        "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "2"}], "\[RightDoubleBracket]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"arcsWithDummyVertices", "=", 
      RowBox[{"arcsWithoutLongConnections", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "2"}], "\[RightDoubleBracket]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<acyclic graph\>\"", "->", 
        RowBox[{"GetLayeringRes", "[", "\"\<acyclic graph\>\"", "]"}]}], ",", 
       " ", "\[IndentingNewLine]", 
       RowBox[{"\"\<feedback set\>\"", "->", 
        RowBox[{"GetLayeringRes", "[", "\"\<feedback set\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
       "\"\<graph with dummies\>\"", "\[Rule]", "arcsWithDummyVertices"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
       "\"\<layers with dummies\>\"", "\[Rule]", "layersWithDummyVertices"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<first dummy\>\"", "\[Rule]", "start"}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8126181179265614`*^9, 3.8126184374472675`*^9}, {
   3.812618473958186*^9, 3.812618474257775*^9}, {3.812627811851649*^9, 
   3.8126278119614086`*^9}, 3.8126283354013033`*^9, {3.8126300362835402`*^9, 
   3.8126300364084826`*^9}},
 CellLabel->
  "In[388]:=",ExpressionUUID->"eb0cab9c-6a9c-4433-8f2a-150ec957b0f6"]
}, Closed]],

Cell[CellGroupData[{

Cell["1.2 GetCutDummyVertices", "Section",
 CellChangeTimes->{{3.8126272374286003`*^9, 3.812627238125358*^9}, {
  3.812628370795134*^9, 3.8126283727162313`*^9}, {3.812705245078987*^9, 
  3.8127052455735674`*^9}},ExpressionUUID->"5d736691-e0c2-46aa-bf51-\
998e078bdd67"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "GetCutDummyVertices", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetCutDummyVertices", "[", "GetLayeringRes_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dag", "=", 
       RowBox[{"unionDAGandFSInAcycicGraph", "[", "GetLayeringRes", "]"}]}], 
      ",", "newnames", ",", "rules", ",", "arcsWithLongConnections", ",", 
      "start", ",", "dummynum", ",", "longArcs", ",", "forAdd", ",", "parent",
       ",", " ", "child", ",", " ", "startLayer", ",", " ", "dummyVertices", 
      ",", "arcsWithoutLongConnections", ",", "layersWithDummyVertices", ",", 
      "arcsWithDummyVertices", ",", "step0", ",", "step1", ",", "step2", ",", 
      "step3", ",", "step4", ",", "step5", ",", "adjchilden", ",", 
      "assAdjChildern"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newnames", "=", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{
           RowBox[{
           "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
           "#1"}], "]"}], "&"}], ",", 
        RowBox[{"GetLayeringRes", "[", "\"\<layers\>\"", "]"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", 
     RowBox[{"rules", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{"Rule", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Flatten", "@", 
           RowBox[{"GetLayeringRes", "[", "\"\<layers\>\"", "]"}]}], ",", 
          RowBox[{"Flatten", "@", "newnames"}]}], "}"}]}], "]"}]}], ";", 
     RowBox[{"arcsWithLongConnections", "=", 
      RowBox[{
       RowBox[{"EdgeList", "@", "dag"}], "/.", "rules"}]}], ";", 
     RowBox[{"start", "=", 
      RowBox[{"dummynum", "=", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"VertexList", "@", "dag"}], "]"}], "+", "1"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"longArcs", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"arcsWithLongConnections", ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "-", 
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ">", "1"}], 
         "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"step0", "=", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Tally", "[", 
          RowBox[{"longArcs", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ">", 
           "1"}], "&"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"step1", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"longArcs", ",", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"step0", ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"step2", "=", 
      RowBox[{"GatherBy", "[", 
       RowBox[{
        RowBox[{"Cases", "[", 
         RowBox[{"step1", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"i_", ",", "j_"}], "]"}], "\[DirectedEdge]", 
            RowBox[{"v", "[", 
             RowBox[{"k_", ",", "l_"}], "]"}]}], "->", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"k", ",", "l"}], "]"}], "\[DirectedEdge]", 
            RowBox[{"v", "[", 
             RowBox[{"i", ",", "j"}], "]"}]}]}]}], "]"}], ",", "First"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"step3", "=", 
      RowBox[{"step2", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "All", ",", "2"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"step4", "=", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "step3", "]"}], "]"}], "->", "step3"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"step5", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"step4", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], 
          "\[Equal]", 
          RowBox[{"#", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}]}], 
         "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"adjchilden", "=", 
      RowBox[{"step0", "[", 
       RowBox[{"[", 
        RowBox[{"step5", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
        "\:0432\:0441\:0435", " ", "\:0432\:044b\:0448\:0435", " ", 
         "\:0432\:0435\:0434\:0435\:0442\:0441\:044f", " ", 
         "\:0438\:043c\:0435\:043d\:043d\:043e", " ", "\:043a", " ", 
         "\:044d\:0442\:043e\:043c\:0443", " ", "\:0448\:0430\:0433\:0443"}], 
        " ", "-", " ", 
        RowBox[{
        "\:043d\:0430\:0439\:0442\:0438", " ", 
         "\:0441\:043c\:0435\:0436\:043d\:044b\:0435", " ", 
         "\:0432\:0435\:0440\:0448\:0438\:043d\:044b", " ", 
         "\:0434\:043b\:044f", " ", 
         "\:0432\:0435\:0440\:0448\:0438\:043d"}]}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
         "\:043b\:0435\:0436\:0430\:0449\:0438\:0445", " ", "\:043d\:0430", 
          " ", "\:043e\:0434\:043d\:043e\:043c", " ", 
          "\:0443\:0440\:043e\:0432\:043d\:0435", " ", "\:0438", " ", 
          "\:043f\:0440\:0438", " ", "\:044d\:0442\:043e\:043c", " ", 
          RowBox[{"level", "[", "child", "]"}]}], " ", "-", " ", 
         RowBox[{"level", "[", "parent", "]"}]}], ">", "1"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"assAdjChildern", "=", 
      RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"forAdd", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"parent", ",", "child"}], "}"}], "=", 
         RowBox[{"List", "@@", "longEdge"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"startLayer", "=", 
         RowBox[{
          RowBox[{
          "parent", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "+", "1"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"dummyVertices", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"adjchilden", ",", "child"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{"Keys", "[", "assAdjChildern", "]"}], ",", "child"}],
                 "]"}], ",", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"dummynum", "==", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"assAdjChildern", "[", "child", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "+", "layer", "-", 
                    RowBox[{
                    RowBox[{"assAdjChildern", "[", "child", "]"}], 
                    "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], ",", 
                  RowBox[{"dummynum", "++"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"v", "[", 
                 RowBox[{"layer", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"assAdjChildern", "[", "child", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                   "+", "layer", "-", 
                   RowBox[{
                    RowBox[{"assAdjChildern", "[", "child", "]"}], 
                    "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"assAdjChildern", "[", "child", "]"}], "=", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"dummynum", "++"}], ",", "layer"}], "}"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"v", "[", 
                 RowBox[{"layer", ",", 
                  RowBox[{
                   RowBox[{"assAdjChildern", "[", "child", "]"}], 
                   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                 "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"v", "[", 
              RowBox[{"layer", ",", 
               RowBox[{"dummynum", "++"}]}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"layer", ",", 
             RowBox[{"Range", "[", 
              RowBox[{"startLayer", ",", 
               RowBox[{
                RowBox[{
                "child", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "-", "1"}]}], "]"}]}], "}"}]}], 
          "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "\:0435\:0441\:043b\:0438", " ", "\:0435\:0441\:0442\:044c", " ", 
           "\:0432", " ", "\:043a\:043b\:044e\:0447\:0430\:0445"}], ",", " ", 
          RowBox[{
          "\:0442\:043e", " ", 
           "\:043d\:0430\:0437\:043d\:0430\:0447\:0430\:0435\:043c", " ", 
           "\:0442\:043e\:0442", " ", "\:0436\:0435", " ", 
           "\:043d\:043e\:043c\:0435\:0440", " ", "dummy", " ", 
           "\:0432\:0435\:0440\:0448\:0438\:043d\:044b"}], ",", " ", 
          RowBox[{
          "\:0447\:0442\:043e", " ", "\:0438", " ", "\:0443", " ", 
           "\:0432\:0435\:0440\:0448\:0438\:043d\:044b", " ", "\:043d\:0430", 
           " ", "\:0434\:0430\:043d\:043d\:043e\:043c", " ", 
           "\:0441\:043b\:043e\:0435"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"forAdd", "=", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{"forAdd", ",", "\[IndentingNewLine]", 
           RowBox[{"DirectedEdge", "@@@", "\[IndentingNewLine]", 
            RowBox[{"Partition", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "parent", "}"}], "~", "Join", "~", 
               "dummyVertices", "~", "Join", "~", 
               RowBox[{"{", "child", "}"}]}], ",", "\[IndentingNewLine]", "2",
               ",", "1"}], "\[IndentingNewLine]", "]"}]}]}], 
          "\[IndentingNewLine]", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"longEdge", ",", "longArcs"}], "}"}]}], "\[IndentingNewLine]",
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"arcsWithoutLongConnections", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"a", 
         RowBox[{"\[AliasDelimiter]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"rcsWithLongConnections", ",", 
                RowBox[{"Alternatives", "@@", "longArcs"}]}], "]"}], ",", 
              "forAdd"}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"layersWithDummyVertices", "=", 
             RowBox[{
              RowBox[{"SortBy", "[", 
               RowBox[{
                RowBox[{"GatherBy", "[", 
                 RowBox[{
                  RowBox[{"VertexList", "@", "arcsWithoutLongConnections"}], 
                  ",", "First"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"#", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "&"}]}],
                "]"}], "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "All", ",", "2"}], 
              "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"arcsWithDummyVertices", "=", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"DeleteDuplicates", "[", 
                RowBox[{"arcsWithoutLongConnections", "\[LeftDoubleBracket]", 
                 RowBox[{"All", ",", "All", ",", "2"}], 
                 "\[RightDoubleBracket]"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"<|", 
             RowBox[{
              RowBox[{"\"\<acyclic graph\>\"", "->", 
               RowBox[{
               "GetLayeringRes", "[", "\"\<acyclic graph\>\"", "]"}]}], ",", 
              " ", "\[IndentingNewLine]", 
              RowBox[{"\"\<feedback set\>\"", "->", 
               RowBox[{"GetLayeringRes", "[", "\"\<feedback set\>\"", "]"}]}],
               ",", "\[IndentingNewLine]", 
              RowBox[{
              "\"\<graph with dummies\>\"", "\[Rule]", 
               "arcsWithDummyVertices"}], ",", "\[IndentingNewLine]", 
              RowBox[{
              "\"\<layers with dummies\>\"", "\[Rule]", 
               "layersWithDummyVertices"}], ",", "\[IndentingNewLine]", 
              RowBox[{"\"\<first dummy\>\"", "\[Rule]", "start"}], ",", 
              RowBox[{"\"\<test\>\"", "\[Rule]", " ", 
               RowBox[{"{", 
                RowBox[{
                "forAdd", ",", "arcsWithLongConnections", ",", "longArcs"}], 
                "}"}]}]}], "|>"}]}], "\[IndentingNewLine]", 
           "]"}]}]}]}]}]}]}]}]}]}]}], "Input",
 CellChangeTimes->{{3.812627249914801*^9, 3.8126273154395013`*^9}, {
   3.812627413043556*^9, 3.812627487513255*^9}, {3.8126278011587944`*^9, 
   3.8126278056234646`*^9}, {3.8126279999078617`*^9, 
   3.8126280097773447`*^9}, {3.81262811510425*^9, 3.8126281363291874`*^9}, {
   3.8126281996023183`*^9, 3.812628237314858*^9}, {3.812628288109373*^9, 
   3.812628288611559*^9}, {3.8126294325038424`*^9, 3.812629438165479*^9}, {
   3.8126295904007406`*^9, 3.8126295976285543`*^9}, {3.8126299824479356`*^9, 
   3.8126300224459095`*^9}, {3.8126300608702297`*^9, 3.812630095966449*^9}, {
   3.8126301736427784`*^9, 3.8126301845402946`*^9}, 3.8126303382102757`*^9, {
   3.8126304639677167`*^9, 3.8126304700707245`*^9}, {3.8126315275684695`*^9, 
   3.812631544130893*^9}, {3.8126316286481733`*^9, 3.812631637374091*^9}, {
   3.8126318755741987`*^9, 3.8126318897917786`*^9}, {3.8126333608005667`*^9, 
   3.812633379343388*^9}, {3.812638836835417*^9, 3.8126388418320217`*^9}, {
   3.8126394209099455`*^9, 3.8126394240685883`*^9}, {3.8126408315499783`*^9, 
   3.812640887739157*^9}, 
   3.8126432750231357`*^9},ExpressionUUID->"7d33540e-2415-497e-967a-\
f01139e7f286"]
}, Closed]],

Cell[CellGroupData[{

Cell["1.3 Test DummyVertices Functions", "Section",
 CellChangeTimes->{{3.8126283573945847`*^9, 3.812628359326786*^9}, {
  3.812705249076579*^9, 
  3.812705260678285*^9}},ExpressionUUID->"d92d1032-6760-4a17-b007-\
6cdf663fdeda"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"graph", "=", 
   RowBox[{"GetGraph", "[", "10", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{
    RowBox[{"Composition", "[", 
     RowBox[{"GetLayering", ",", "GetDAG"}], "]"}], "[", "graph", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.81262788259356*^9, 3.8126278842685227`*^9}, 
   3.8126283049180913`*^9},
 CellLabel->
  "In[307]:=",ExpressionUUID->"21bea083-4e47-46e5-bf98-7d4d7fbcde50"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"baseResult", "=", 
  RowBox[{"GetBaseDummyVertices", "[", "res", "]"}]}]], "Input",
 CellChangeTimes->{
  3.8126284716534543`*^9, {3.812628576722742*^9, 3.812628578661005*^9}},
 CellLabel->
  "In[2379]:=",ExpressionUUID->"26f0355e-1be7-4607-80f8-8f1ab32943d7"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"acyclic graph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "9"}]}], "}"}]}], ",", 
   RowBox[{"\<\"feedback set\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "8"}]}], "}"}]}], ",", 
   RowBox[{"\<\"graph with dummies\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"13", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "14"}], ",", 
      RowBox[{"14", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "15"}], ",", 
      RowBox[{"15", "\[DirectedEdge]", "16"}], ",", 
      RowBox[{"16", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "17"}], ",", 
      RowBox[{"17", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "18"}], ",", 
      RowBox[{"18", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "19"}], ",", 
      RowBox[{"19", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "20"}], ",", 
      RowBox[{"20", "\[DirectedEdge]", "21"}], ",", 
      RowBox[{"21", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "22"}], ",", 
      RowBox[{"22", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "23"}], ",", 
      RowBox[{"23", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "24"}], ",", 
      RowBox[{"24", "\[DirectedEdge]", "5"}]}], "}"}]}], ",", 
   RowBox[{"\<\"layers with dummies\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "6", ",", "7", ",", "10", ",", "11", ",", "13", ",", "15", ",", "17", 
        ",", "18", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "9", ",", "4", ",", "12", ",", "14", ",", "16", ",", "19", ",", "21", 
        ",", "22", ",", "23", ",", "24"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "5"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"first dummy\"\>", "\[Rule]", "11"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.81262847343801*^9, 3.8126285822262154`*^9, 
  3.812628898524974*^9, 3.812630504967696*^9, 3.8126315564634256`*^9, 
  3.812633382979881*^9, 3.812638846112048*^9, 3.812639427178466*^9},
 CellLabel->
  "Out[2379]=",ExpressionUUID->"cf0b9166-80fc-45fc-8055-02dbb3f33c89"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cutResult", "=", 
  RowBox[{"GetCutDummyVertices", "[", "res", "]"}]}]], "Input",
 CellChangeTimes->{{3.8126285845591483`*^9, 3.8126285868373394`*^9}, 
   3.812630102238894*^9, 3.8126320371752815`*^9},
 CellLabel->
  "In[2380]:=",ExpressionUUID->"c60708ad-d732-4428-92c0-c4b68f21f27e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"acyclic graph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "9"}]}], "}"}]}], ",", 
   RowBox[{"\<\"feedback set\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "8"}]}], "}"}]}], ",", 
   RowBox[{"\<\"graph with dummies\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"13", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "14"}], ",", 
      RowBox[{"14", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "15"}], ",", 
      RowBox[{"15", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "16"}], ",", 
      RowBox[{"16", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "17"}], ",", 
      RowBox[{"17", "\[DirectedEdge]", "18"}], ",", 
      RowBox[{"18", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "19"}], ",", 
      RowBox[{"19", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "16"}]}], "}"}]}], ",", 
   RowBox[{"\<\"layers with dummies\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "6", ",", "7", ",", "10", ",", "11", ",", "13", ",", "15", ",", "17"}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "9", ",", "4", ",", "12", ",", "14", ",", "16", ",", "18", ",", "19"}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "5"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"first dummy\"\>", "\[Rule]", "11"}], ",", 
   RowBox[{"\<\"test\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "1"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "11"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "11"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "12"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "12"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "3"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "1"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "13"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "13"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "4"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "6"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "14"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "14"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "2"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "8"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "11"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "11"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "12"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "12"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "3"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "8"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "13"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "13"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "4"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "8"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "15"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "15"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "9"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "10"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "16"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "16"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "5"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "8"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "17"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "17"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "18"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "18"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "2"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "10"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "19"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "19"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "2"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "6"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "12"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "12"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "3"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "7"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "16"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "16"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "5"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "1"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "3"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "1"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "4"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "1"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "6"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "6"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "2"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "8"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "3"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "8"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "4"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "8"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "7"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "8"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "9"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "9"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "2"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "9"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "3"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "10"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "5"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "10"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "9"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "8"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "2"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "10"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "2"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "6"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "3"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "10"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "4"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "4"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "5"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "7"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "5"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "8"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "6"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "1"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "7"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "7"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "9"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "8"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "10"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "1"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "3"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "1"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "4"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "6"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "2"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "8"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "3"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "8"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "4"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "8"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"3", ",", "9"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "10"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "5"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"1", ",", "8"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "2"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "10"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "2"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "6"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "3"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{"2", ",", "7"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"v", "[", 
          RowBox[{"4", ",", "5"}], "]"}]}]}], "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.81263203749133*^9, {3.8126333682937455`*^9, 3.8126333841257*^9}, 
   3.8126388467941265`*^9, 3.8126394278960686`*^9},
 CellLabel->
  "Out[2380]=",ExpressionUUID->"3230967f-4446-4677-935d-dee82711a7ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell["1.3.1 Base Result", "Subsection",
 CellChangeTimes->{{3.8126285142318482`*^9, 3.812628515608881*^9}, {
  3.8127052679594774`*^9, 
  3.8127052698842564`*^9}},ExpressionUUID->"5e3c5898-60c6-4b27-8634-\
9d8aa16900ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dummResBaseAmount", " ", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", " ", 
      RowBox[{"baseResult", "[", "\"\<layers with dummies\>\"", "]"}], "]"}], 
     ",", 
     RowBox[{
      RowBox[{"#", ">=", 
       RowBox[{"baseResult", "[", "\"\<first dummy\>\"", "]"}]}], "&"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8126285192349715`*^9, 3.8126285684528084`*^9}, {
  3.8126286094657755`*^9, 3.8126286529019866`*^9}},
 CellLabel->
  "In[2382]:=",ExpressionUUID->"e40f04a8-b3ff-4fe4-bb2e-40ef030aa2ca"],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{{3.8126286476517906`*^9, 3.8126286535503397`*^9}, 
   3.812628900404977*^9, 3.8126302200583153`*^9, 3.812630512101685*^9, 
   3.812631563287547*^9, 3.8126316458205047`*^9, 3.8126318940294323`*^9, 
   3.8126334194437556`*^9, 3.8126388513529243`*^9, 3.81263943403024*^9},
 CellLabel->
  "Out[2382]=",ExpressionUUID->"be696768-0252-4ece-ac90-02f1bd1ead02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"baseResult", "[", "\"\<graph with dummies\>\"", "]"}], ",", 
   RowBox[{"DirectedEdges", "\[Rule]", "True"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8126278600029354`*^9, 3.8126278605318823`*^9}, {
  3.8126286008165445`*^9, 3.8126286015349455`*^9}},
 CellLabel->
  "In[2383]:=",ExpressionUUID->"daeb6386-8e5c-42f1-931a-7820f513960f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 6, 8, 7, 9, 2, 3, 10, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 
      24}, {{{1, 2}, {3, 4}, {5, 6}, {5, 7}, {8, 5}, {8, 9}, {9, 10}, {3, 
       2}, {1, 4}, {4, 5}, {3, 8}, {1, 11}, {11, 12}, {12, 7}, {1, 13}, {13, 
       9}, {2, 14}, {14, 6}, {3, 15}, {15, 16}, {16, 7}, {3, 17}, {17, 9}, {3,
        18}, {18, 5}, {8, 19}, {19, 10}, {3, 20}, {20, 21}, {21, 6}, {8, 
       22}, {22, 6}, {2, 23}, {23, 7}, {4, 24}, {24, 10}}, Null}, {
      VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.017192853646598137`], 
        ArrowBox[{{0., 3.}, {0., 2.}}, 0.061894273127753294`], 
        ArrowBox[{{0., 3.}, {-1., 2.}}, 0.061894273127753294`], 
        ArrowBox[{{0., 3.}, {2., 2.}}, 0.061894273127753294`], 
        ArrowBox[{{0., 3.}, {1., 2.}}, 0.061894273127753294`], 
        ArrowBox[{{0., 2.}, {0., 1.}}, 0.061894273127753294`], 
        ArrowBox[{{0., 2.}, {1., 1.}}, 0.061894273127753294`], 
        ArrowBox[{{-3., 3.}, {0., 2.}}, 0.061894273127753294`], 
        ArrowBox[{{-3., 3.}, {-1., 2.}}, 0.061894273127753294`], 
        ArrowBox[{{-3., 3.}, {-5., 2.}}, 0.061894273127753294`], 
        ArrowBox[{{-3., 3.}, {-2., 2.}}, 0.061894273127753294`], 
        ArrowBox[{{-3., 3.}, {-3., 2.}}, 0.061894273127753294`], 
        ArrowBox[{{-3., 3.}, {-4., 2.}}, 0.061894273127753294`], 
        ArrowBox[{{-3., 3.}, {-7., 2.}}, 0.061894273127753294`], 
        ArrowBox[{{-1., 2.}, {-4., 1.}}, 0.061894273127753294`], 
        ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.061894273127753294`], 
        ArrowBox[{{-4., 1.}, {-6., 0.}}, 0.061894273127753294`], 
        ArrowBox[{{-4., 1.}, {1., 0.}}, 0.061894273127753294`], 
        ArrowBox[{{-5., 2.}, {-4., 1.}}, 0.061894273127753294`], 
        ArrowBox[{{-5., 2.}, {-3., 1.}}, 0.061894273127753294`], 
        ArrowBox[{{-5., 2.}, {-5., 1.}}, 0.061894273127753294`], 
        ArrowBox[{{-5., 2.}, {-6., 1.}}, 0.061894273127753294`], 
        ArrowBox[{{-3., 1.}, {-3., 0.}}, 0.061894273127753294`], 
        ArrowBox[{{2., 2.}, {2., 1.}}, 0.061894273127753294`], 
        ArrowBox[{{2., 1.}, {1., 0.}}, 0.061894273127753294`], 
        ArrowBox[{{1., 2.}, {-3., 1.}}, 0.061894273127753294`], 
        ArrowBox[{{0., 1.}, {-6., 0.}}, 0.061894273127753294`], 
        ArrowBox[{{-2., 2.}, {-2., 1.}}, 0.061894273127753294`], 
        ArrowBox[{{-2., 1.}, {1., 0.}}, 0.061894273127753294`], 
        ArrowBox[{{-3., 2.}, {-3., 1.}}, 0.061894273127753294`], 
        ArrowBox[{{-4., 2.}, {-4., 1.}}, 0.061894273127753294`], 
        ArrowBox[{{-5., 1.}, {-3., 0.}}, 0.061894273127753294`], 
        ArrowBox[{{-7., 2.}, {-7., 1.}}, 0.061894273127753294`], 
        ArrowBox[{{-7., 1.}, {-6., 0.}}, 0.061894273127753294`], 
        ArrowBox[{{-6., 1.}, {-6., 0.}}, 0.061894273127753294`], 
        ArrowBox[{{1., 1.}, {1., 0.}}, 0.061894273127753294`], 
        ArrowBox[{{-1., 1.}, {-3., 0.}}, 0.061894273127753294`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 3.}, 0.061894273127753294], 
         InsetBox["1", 
          Offset[{2, 2}, {0.061894273127753294, 3.0618942731277534}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.061894273127753294], 
         InsetBox["6", 
          Offset[{2, 2}, {0.061894273127753294, 2.0618942731277534}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-3., 3.}, 0.061894273127753294], 
         InsetBox["8", 
          Offset[{2, 2}, {-2.9381057268722466, 3.0618942731277534}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 2.}, 0.061894273127753294], 
         InsetBox["7", 
          Offset[{2, 2}, {-0.9381057268722467, 2.0618942731277534}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-4., 1.}, 0.061894273127753294], 
         InsetBox["9", 
          Offset[{2, 2}, {-3.9381057268722466, 1.0618942731277532}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-6., 0.}, 0.061894273127753294], 
         InsetBox["2", 
          Offset[{2, 2}, {-5.938105726872247, 0.061894273127753294}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 0.}, 0.061894273127753294], 
         InsetBox["3", 
          Offset[{2, 2}, {1.0618942731277532, 0.061894273127753294}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-5., 2.}, 0.061894273127753294], 
         InsetBox["10", 
          Offset[{2, 2}, {-4.938105726872247, 2.0618942731277534}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-3., 1.}, 0.061894273127753294], 
         InsetBox["4", 
          Offset[{2, 2}, {-2.9381057268722466, 1.0618942731277532}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-3., 0.}, 0.061894273127753294], 
         InsetBox["5", 
          Offset[{2, 2}, {-2.9381057268722466, 0.061894273127753294}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.061894273127753294], 
         InsetBox["11", 
          Offset[{2, 2}, {2.0618942731277534, 2.0618942731277534}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.061894273127753294], 
         InsetBox["12", 
          Offset[{2, 2}, {2.0618942731277534, 1.0618942731277532}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.061894273127753294], 
         InsetBox["13", 
          Offset[{2, 2}, {1.0618942731277532, 2.0618942731277534}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.061894273127753294], 
         InsetBox["14", 
          Offset[{2, 2}, {0.061894273127753294, 1.0618942731277532}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2., 2.}, 0.061894273127753294], 
         InsetBox["15", 
          Offset[{2, 2}, {-1.9381057268722468, 2.0618942731277534}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2., 1.}, 0.061894273127753294], 
         InsetBox["16", 
          Offset[{2, 2}, {-1.9381057268722468, 1.0618942731277532}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-3., 2.}, 0.061894273127753294], 
         InsetBox["17", 
          Offset[{2, 2}, {-2.9381057268722466, 2.0618942731277534}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-4., 2.}, 0.061894273127753294], 
         InsetBox["18", 
          Offset[{2, 2}, {-3.9381057268722466, 2.0618942731277534}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-5., 1.}, 0.061894273127753294], 
         InsetBox["19", 
          Offset[{2, 2}, {-4.938105726872247, 1.0618942731277532}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-7., 2.}, 0.061894273127753294], 
         InsetBox["20", 
          Offset[{2, 2}, {-6.938105726872247, 2.0618942731277534}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-7., 1.}, 0.061894273127753294], 
         InsetBox["21", 
          Offset[{2, 2}, {-6.938105726872247, 1.0618942731277532}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-6., 1.}, 0.061894273127753294], 
         InsetBox["22", 
          Offset[{2, 2}, {-5.938105726872247, 1.0618942731277532}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.061894273127753294], 
         InsetBox["23", 
          Offset[{2, 2}, {1.0618942731277532, 1.0618942731277532}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 1.}, 0.061894273127753294], 
         InsetBox["24", 
          Offset[{2, 2}, {-0.9381057268722467, 1.0618942731277532}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{738., Automatic}]], "Output",
 CellChangeTimes->{
  3.812627767810341*^9, {3.8126278612133703`*^9, 3.8126278906329436`*^9}, 
   3.8126284961903505`*^9, 3.812628656826886*^9, 3.812628901156008*^9, 
   3.8126302226015263`*^9, 3.812630513067052*^9, 3.812631563931485*^9, 
   3.8126316463735685`*^9, 3.8126318945673714`*^9, 3.812633420294445*^9, 
   3.8126388525720034`*^9, 3.8126394344847126`*^9},
 CellLabel->
  "Out[2383]=",ExpressionUUID->"1b8797ad-8af3-4c3c-a943-9fc72f1a1aef"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["1.3.2 Cut Result", "Subsection",
 CellChangeTimes->{{3.8126284529825454`*^9, 3.8126284555168447`*^9}, {
  3.8127052723653016`*^9, 
  3.8127052734444313`*^9}},ExpressionUUID->"4f41949e-5dbb-46a7-a804-\
c075a66fc826"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dummResCutAmount", " ", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", " ", 
      RowBox[{"cutResult", "[", "\"\<layers with dummies\>\"", "]"}], "]"}], 
     ",", 
     RowBox[{
      RowBox[{"#", "\[GreaterEqual]", 
       RowBox[{"cutResult", "[", "\"\<first dummy\>\"", "]"}]}], "&"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8126286657890778`*^9, 3.812628673519477*^9}},
 CellLabel->
  "In[2384]:=",ExpressionUUID->"1c14dcfb-cc8b-49ca-a5f5-89546c2d4c87"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.8126286739262877`*^9, 3.812628902629162*^9, 
  3.812630236875738*^9, 3.812630514453376*^9, 3.8126315651360826`*^9, 
  3.812631647422823*^9, 3.8126318952718673`*^9, 3.812633421465996*^9, 
  3.8126388536838264`*^9, 3.812639435861992*^9},
 CellLabel->
  "Out[2384]=",ExpressionUUID->"10cefb14-e15b-4adf-b429-937452561e80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{"cutResult", "[", "\"\<layers with dummies\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8126293605004883`*^9, 3.812629369272459*^9}},
 CellLabel->
  "In[2385]:=",ExpressionUUID->"2b80bee7-cc2b-41b4-bbf8-c42b8276e80f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19"}], "}"}]], "Output",
 CellChangeTimes->{{3.812629356585179*^9, 3.8126293695443373`*^9}, 
   3.812630237998*^9, 3.812630515276551*^9, 3.812631566407954*^9, 
   3.8126316481040635`*^9, 3.8126318962081876`*^9, 3.8126334224065313`*^9, 
   3.8126388547709723`*^9, 3.8126394365060797`*^9},
 CellLabel->
  "Out[2385]=",ExpressionUUID->"99f5dc73-8648-46b9-b541-1223e6418fea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"cutResult", "[", "\"\<graph with dummies\>\"", "]"}], ",", 
   RowBox[{"DirectedEdges", "\[Rule]", "True"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.81262737873055*^9, 3.8126273789229345`*^9}, {
  3.8126276171250815`*^9, 3.8126276280088468`*^9}, {3.812628594016385*^9, 
  3.8126285949017296`*^9}},
 CellLabel->
  "In[2386]:=",ExpressionUUID->"9b55bd2b-c0f7-4343-8518-df9881c96d1b"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 6, 8, 7, 9, 2, 3, 10, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 
      19}, {{{1, 2}, {3, 4}, {5, 6}, {5, 7}, {8, 5}, {8, 9}, {9, 10}, {3, 
       2}, {1, 4}, {4, 5}, {3, 8}, {1, 11}, {11, 12}, {12, 7}, {1, 13}, {13, 
       9}, {2, 14}, {14, 6}, {3, 11}, {3, 13}, {3, 15}, {15, 5}, {8, 16}, {16,
        10}, {3, 17}, {17, 18}, {18, 6}, {8, 19}, {19, 6}, {2, 12}, {4, 16}}, 
       Null}, {VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0., 3.}, {0., 2.}}, 0.04847715736040609], 
        ArrowBox[{{0., 3.}, {1., 2.}}, 0.04847715736040609], 
        ArrowBox[{{0., 3.}, {-1., 2.}}, 0.04847715736040609], 
        ArrowBox[{{0., 3.}, {4., 2.}}, 0.04847715736040609], 
        ArrowBox[{{0., 2.}, {-1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{0., 2.}, {0., 1.}}, 0.04847715736040609], 
        ArrowBox[{{2., 3.}, {0., 2.}}, 0.04847715736040609], 
        ArrowBox[{{2., 3.}, {1., 2.}}, 0.04847715736040609], 
        ArrowBox[{{2., 3.}, {5., 2.}}, 0.04847715736040609], 
        ArrowBox[{{2., 3.}, {-1., 2.}}, 0.04847715736040609], 
        ArrowBox[{{2., 3.}, {4., 2.}}, 0.04847715736040609], 
        ArrowBox[{{2., 3.}, {2., 2.}}, 0.04847715736040609], 
        ArrowBox[{{2., 3.}, {3., 2.}}, 0.04847715736040609], 
        ArrowBox[{{1., 2.}, {1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{1., 2.}, {3., 1.}}, 0.04847715736040609], 
        ArrowBox[{{1., 1.}, {2., 0.}}, 0.04847715736040609], 
        ArrowBox[{{1., 1.}, {-1., 0.}}, 0.04847715736040609], 
        ArrowBox[{{5., 2.}, {1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{5., 2.}, {4., 1.}}, 0.04847715736040609], 
        ArrowBox[{{5., 2.}, {3., 1.}}, 0.04847715736040609], 
        ArrowBox[{{5., 2.}, {5., 1.}}, 0.04847715736040609], 
        ArrowBox[{{4., 1.}, {3., 0.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 1.}, {-1., 0.}}, 0.04847715736040609], 
        ArrowBox[{{4., 2.}, {4., 1.}}, 0.04847715736040609], 
        ArrowBox[{{0., 1.}, {2., 0.}}, 0.04847715736040609], 
        ArrowBox[{{2., 2.}, {1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{3., 1.}, {3., 0.}}, 0.04847715736040609], 
        ArrowBox[{{3., 2.}, {2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{2., 1.}, {2., 0.}}, 0.04847715736040609], 
        ArrowBox[{{5., 1.}, {2., 0.}}, 0.04847715736040609]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 3.}, 0.04847715736040609], 
         InsetBox["1", 
          Offset[{2, 2}, {0.04847715736040609, 3.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.04847715736040609], 
         InsetBox["6", 
          Offset[{2, 2}, {0.04847715736040609, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 3.}, 0.04847715736040609], 
         InsetBox["8", Offset[{2, 2}, {2.048477157360406, 3.048477157360406}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.04847715736040609], 
         InsetBox["7", 
          Offset[{2, 2}, {1.0484771573604061, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.04847715736040609], 
         InsetBox["9", 
          Offset[{2, 2}, {1.0484771573604061, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 0.}, 0.04847715736040609], 
         InsetBox["2", 
          Offset[{2, 2}, {2.048477157360406, 0.04847715736040609}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 0.}, 0.04847715736040609], 
         InsetBox["3", 
          Offset[{2, 2}, {-0.9515228426395939, 0.04847715736040609}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{5., 2.}, 0.04847715736040609], 
         InsetBox["10", 
          Offset[{2, 2}, {5.048477157360406, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 1.}, 0.04847715736040609], 
         InsetBox["4", 
          Offset[{2, 2}, {4.048477157360406, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 0.}, 0.04847715736040609], 
         InsetBox["5", 
          Offset[{2, 2}, {3.048477157360406, 0.04847715736040609}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 2.}, 0.04847715736040609], 
         InsetBox["11", 
          Offset[{2, 2}, {-0.9515228426395939, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 1.}, 0.04847715736040609], 
         InsetBox["12", 
          Offset[{2, 2}, {-0.9515228426395939, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 2.}, 0.04847715736040609], 
         InsetBox["13", 
          Offset[{2, 2}, {4.048477157360406, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.04847715736040609], 
         InsetBox["14", 
          Offset[{2, 2}, {0.04847715736040609, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.04847715736040609], 
         InsetBox["15", 
          Offset[{2, 2}, {2.048477157360406, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 1.}, 0.04847715736040609], 
         InsetBox["16", 
          Offset[{2, 2}, {3.048477157360406, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.04847715736040609], 
         InsetBox["17", 
          Offset[{2, 2}, {3.048477157360406, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.04847715736040609], 
         InsetBox["18", 
          Offset[{2, 2}, {2.048477157360406, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{5., 1.}, 0.04847715736040609], 
         InsetBox["19", 
          Offset[{2, 2}, {5.048477157360406, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{662., Automatic}]], "Output",
 CellChangeTimes->{
  3.8126276288545947`*^9, 3.8126277540471954`*^9, {3.812627848564093*^9, 
   3.812627887047784*^9}, 3.81262801450537*^9, 3.8126281386112556`*^9, 
   3.8126282465930624`*^9, 3.81262829856645*^9, 3.812628352882492*^9, 
   3.812628494941839*^9, 3.8126286760580187`*^9, 3.812628903277405*^9, 
   3.8126302394259744`*^9, 3.8126305162226763`*^9, 3.8126315702227945`*^9, 
   3.8126316496856894`*^9, 3.8126318975157495`*^9, 3.812633425313361*^9, 
   3.8126394393263516`*^9},
 CellLabel->
  "Out[2386]=",ExpressionUUID->"1514a176-e8fb-4c41-a52c-cdbc3a7aba27"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["1.3.3 Better visualisation", "Subsection",
 CellChangeTimes->{{3.8126289386141195`*^9, 3.8126289438520937`*^9}, {
  3.812705279118531*^9, 
  3.8127052806673746`*^9}},ExpressionUUID->"a09b43b5-3ade-439a-bde2-\
13b9b9b0c441"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "getNaiveCoords", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getNaiveCoords", "[", "layers_", "]"}], ":=", 
  RowBox[{"MapIndexed", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Reverse", "[", "#2", "]"}], 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "&"}], ",", "layers", ",", 
    RowBox[{"{", "2", "}"}]}], "]"}]}]}], "Input",
 CellLabel->
  "In[2156]:=",ExpressionUUID->"fe57bd22-ac02-48b0-b80d-fbaf534cb59e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"coords", "=", 
   RowBox[{"getNaiveCoords", "[", 
    RowBox[{"cutResult", "[", "\"\<layers with dummies\>\"", "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8126289626245317`*^9, 3.812628976476403*^9}},
 CellLabel->
  "In[2389]:=",ExpressionUUID->"c70a2f3e-1aae-4b72-9056-7ffca5e03813"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"cutResult", "[", "\"\<layers with dummies\>\"", "]"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"cutResult", "[", "\"\<graph with dummies\>\"", "]"}], ",", 
   RowBox[{"VertexShapeFunction", "\[Rule]", "\"\<Circle\>\""}], ",", 
   RowBox[{"VertexSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Scaled\>\"", ",", 
      FractionBox["1", 
       RowBox[{"Length", "[", 
        RowBox[{"Flatten", "@", 
         RowBox[{"cutResult", "[", "\"\<layers with dummies\>\"", "]"}]}], 
        "]"}]]}], "}"}]}], ",", 
   RowBox[{"EdgeStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.6, 0.24, 0.4428931686004542], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.4, 0.16, 0.2952621124003028],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.6, 0.24, 0.4428931686004542]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.6, 0.24, 0.4428931686004542]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.6, 0.24, 0.4428931686004542],
       Editable->False,
       Selectable->False], ",", "Thick"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"VertexStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.6, 0.24, 0.5632658430022722], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.4, 0.16, 0.37551056200151484`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       "RGBColor[0.6, 0.24, 0.5632658430022722]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.6, 0.24, 0.5632658430022722]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.6, 0.24, 0.5632658430022722],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1500"}], ",", 
   RowBox[{"VertexCoordinates", "\[Rule]", 
    RowBox[{"Flatten", "[", 
     RowBox[{"coords", ",", "1"}], "]"}]}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.812628991958969*^9, 3.8126290269198027`*^9}, {
  3.812629102441989*^9, 3.812629104574747*^9}, {3.8126292310626955`*^9, 
  3.812629299727468*^9}, {3.81263192372542*^9, 3.8126319373801775`*^9}, {
  3.8126334374380913`*^9, 3.812633455919792*^9}},
 CellLabel->
  "In[2390]:=",ExpressionUUID->"87993832-731d-472f-ba10-dfe4cdd4bf6f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 8, 6, 7, 10, 11, 13, 15, 17, 9, 4, 12, 14, 16, 18, 19, 2, 3, 
      5}, {{{1, 3}, {2, 4}, {10, 17}, {10, 18}, {5, 10}, {5, 11}, {11, 19}, {
       2, 3}, {1, 4}, {4, 10}, {2, 5}, {1, 6}, {6, 12}, {12, 18}, {1, 7}, {7, 
       11}, {3, 13}, {13, 17}, {2, 6}, {2, 7}, {2, 8}, {8, 10}, {5, 14}, {14, 
       19}, {2, 9}, {9, 15}, {15, 17}, {5, 16}, {16, 17}, {3, 12}, {4, 14}}, 
       Null}, {EdgeStyle -> {
         Directive[
          RGBColor[0.6, 0.24, 0.4428931686004542], 
          Thickness[Large]]}, ImageSize -> 1500, 
       VertexCoordinates -> {{1, -1}, {2, -1}, {1, -2}, {2, -2}, {3, -2}, {
        4, -2}, {5, -2}, {6, -2}, {7, -2}, {1, -3}, {2, -3}, {3, -3}, {
        4, -3}, {5, -3}, {6, -3}, {7, -3}, {1, -4}, {2, -4}, {3, -4}}, 
       VertexLabels -> {"Name"}, VertexShapeFunction -> {"Circle"}, 
       VertexSize -> {{"Scaled", 
          Rational[1, 19]}}, VertexStyle -> {
         RGBColor[0.6, 0.24, 0.5632658430022722]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {RGBColor[0.6, 0.24, 0.4428931686004542], Thickness[Large], Opacity[
        0.7], Arrowheads[Medium], 
        ArrowBox[{{1., -1.}, {1., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{1., -1.}, {2., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{1., -1.}, {4., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{1., -1.}, {5., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{2., -1.}, {1., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{2., -1.}, {2., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{2., -1.}, {3., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{2., -1.}, {4., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{2., -1.}, {5., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{2., -1.}, {6., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{2., -1.}, {7., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{1., -2.}, {3., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{1., -2.}, {4., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{2., -2.}, {1., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{2., -2.}, {5., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{3., -2.}, {1., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{3., -2.}, {2., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{3., -2.}, {5., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{3., -2.}, {7., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{4., -2.}, {3., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{5., -2.}, {2., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{6., -2.}, {1., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{7., -2.}, {6., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{1., -3.}, {1., -4.}}, 0.17653168243419393`], 
        ArrowBox[{{1., -3.}, {2., -4.}}, 0.17653168243419393`], 
        ArrowBox[{{2., -3.}, {3., -4.}}, 0.17653168243419393`], 
        ArrowBox[{{3., -3.}, {2., -4.}}, 0.17653168243419393`], 
        ArrowBox[{{4., -3.}, {1., -4.}}, 0.17653168243419393`], 
        ArrowBox[{{5., -3.}, {3., -4.}}, 0.17653168243419393`], 
        ArrowBox[{{6., -3.}, {1., -4.}}, 0.17653168243419393`], 
        ArrowBox[{{7., -3.}, {1., -4.}}, 0.17653168243419393`]}, 
       {RGBColor[0.6, 0.24, 0.5632658430022722], EdgeForm[{GrayLevel[0], 
        Opacity[0.7]}], {DiskBox[{1., -1.}, 0.17653168243419393], 
         InsetBox["1", 
          Offset[{2, 2}, {1.1765316824341938, -0.8234683175658061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., -1.}, 0.17653168243419393], 
         InsetBox["8", 
          Offset[{2, 2}, {2.176531682434194, -0.8234683175658061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., -2.}, 0.17653168243419393], 
         InsetBox["6", 
          Offset[{2, 2}, {1.1765316824341938, -1.8234683175658062}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., -2.}, 0.17653168243419393], 
         InsetBox["7", 
          Offset[{2, 2}, {2.176531682434194, -1.8234683175658062}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., -2.}, 0.17653168243419393], 
         InsetBox["10", 
          Offset[{2, 2}, {3.176531682434194, -1.8234683175658062}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., -2.}, 0.17653168243419393], 
         InsetBox["11", 
          Offset[{2, 2}, {4.176531682434194, -1.8234683175658062}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{5., -2.}, 0.17653168243419393], 
         InsetBox["13", 
          Offset[{2, 2}, {5.176531682434194, -1.8234683175658062}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{6., -2.}, 0.17653168243419393], 
         InsetBox["15", 
          Offset[{2, 2}, {6.176531682434194, -1.8234683175658062}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{7., -2.}, 0.17653168243419393], 
         InsetBox["17", 
          Offset[{2, 2}, {7.176531682434194, -1.8234683175658062}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., -3.}, 0.17653168243419393], 
         InsetBox["9", 
          Offset[{2, 2}, {1.1765316824341938, -2.823468317565806}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., -3.}, 0.17653168243419393], 
         InsetBox["4", 
          Offset[{2, 2}, {2.176531682434194, -2.823468317565806}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., -3.}, 0.17653168243419393], 
         InsetBox["12", 
          Offset[{2, 2}, {3.176531682434194, -2.823468317565806}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., -3.}, 0.17653168243419393], 
         InsetBox["14", 
          Offset[{2, 2}, {4.176531682434194, -2.823468317565806}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{5., -3.}, 0.17653168243419393], 
         InsetBox["16", 
          Offset[{2, 2}, {5.176531682434194, -2.823468317565806}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{6., -3.}, 0.17653168243419393], 
         InsetBox["18", 
          Offset[{2, 2}, {6.176531682434194, -2.823468317565806}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{7., -3.}, 0.17653168243419393], 
         InsetBox["19", 
          Offset[{2, 2}, {7.176531682434194, -2.823468317565806}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., -4.}, 0.17653168243419393], 
         InsetBox["2", 
          Offset[{2, 2}, {1.1765316824341938, -3.823468317565806}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., -4.}, 0.17653168243419393], 
         InsetBox["3", 
          Offset[{2, 2}, {2.176531682434194, -3.823468317565806}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., -4.}, 0.17653168243419393], 
         InsetBox["5", 
          Offset[{2, 2}, {3.176531682434194, -3.823468317565806}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{992., Automatic}]], "Output",
 CellChangeTimes->{
  3.8126290279506917`*^9, 3.812629104879351*^9, {3.8126292550085278`*^9, 
   3.81262930021566*^9}, {3.8126319161186247`*^9, 3.812631937846012*^9}, {
   3.8126334396308584`*^9, 3.8126334563068743`*^9}, 3.8126394445335703`*^9},
 CellLabel->
  "Out[2390]=",ExpressionUUID->"c3814194-3d9a-47ed-b9bd-1b280af9d250"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"cutResult", "[", "\"\<layers with dummies\>\"", "]"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"cutResult", "[", "\"\<graph with dummies\>\"", "]"}], ",", 
   RowBox[{"VertexShapeFunction", "\[Rule]", "\"\<Circle\>\""}], ",", 
   RowBox[{"VertexSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Scaled\>\"", ",", 
      FractionBox["1", 
       RowBox[{"Length", "[", 
        RowBox[{"Flatten", "@", 
         RowBox[{"cutResult", "[", "\"\<layers with dummies\>\"", "]"}]}], 
        "]"}]]}], "}"}]}], ",", 
   RowBox[{"EdgeStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.6, 0.24, 0.4428931686004542], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.4, 0.16, 0.2952621124003028],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.6, 0.24, 0.4428931686004542]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.6, 0.24, 0.4428931686004542]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.6, 0.24, 0.4428931686004542],
       Editable->False,
       Selectable->False], ",", "Thick"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"VertexStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.6, 0.24, 0.5632658430022722], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.4, 0.16, 0.37551056200151484`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.6, 0.24, 0.5632658430022722]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.6, 0.24, 0.5632658430022722]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.6, 0.24, 0.5632658430022722],
       Editable->False,
       Selectable->False], ",", 
      RowBox[{
       RowBox[{"x_", "/;", 
        RowBox[{"x", "\[GreaterEqual]", 
         RowBox[{"cutResult", "[", "\"\<first dummy\>\"", "]"}]}]}], 
       "\[Rule]", "Black"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1500"}], ",", 
   RowBox[{"VertexCoordinates", "\[Rule]", 
    RowBox[{"Flatten", "[", 
     RowBox[{"coords", ",", "1"}], "]"}]}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{
  3.8126334730939136`*^9, {3.8126335645100937`*^9, 3.812633626094285*^9}},
 CellLabel->
  "In[2391]:=",ExpressionUUID->"4cfa453c-e733-4ecd-be42-b83fb9c90580"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 8, 6, 7, 10, 11, 13, 15, 17, 9, 4, 12, 14, 16, 18, 19, 2, 3, 
      5}, {{{1, 3}, {2, 4}, {10, 17}, {10, 18}, {5, 10}, {5, 11}, {11, 19}, {
       2, 3}, {1, 4}, {4, 10}, {2, 5}, {1, 6}, {6, 12}, {12, 18}, {1, 7}, {7, 
       11}, {3, 13}, {13, 17}, {2, 6}, {2, 7}, {2, 8}, {8, 10}, {5, 14}, {14, 
       19}, {2, 9}, {9, 15}, {15, 17}, {5, 16}, {16, 17}, {3, 12}, {4, 14}}, 
       Null}, {EdgeStyle -> {
         Directive[
          RGBColor[0.6, 0.24, 0.4428931686004542], 
          Thickness[Large]]}, ImageSize -> 1500, 
       VertexCoordinates -> {{1, -1}, {2, -1}, {1, -2}, {2, -2}, {3, -2}, {
        4, -2}, {5, -2}, {6, -2}, {7, -2}, {1, -3}, {2, -3}, {3, -3}, {
        4, -3}, {5, -3}, {6, -3}, {7, -3}, {1, -4}, {2, -4}, {3, -4}}, 
       VertexLabels -> {"Name"}, VertexShapeFunction -> {"Circle"}, 
       VertexSize -> {{"Scaled", 
          Rational[1, 19]}}, VertexStyle -> {
         RGBColor[0.6, 0.24, 0.5632658430022722], 18 -> GrayLevel[0], 15 -> 
         GrayLevel[0], 13 -> GrayLevel[0], 11 -> GrayLevel[0], 19 -> 
         GrayLevel[0], 16 -> GrayLevel[0], 17 -> GrayLevel[0], 14 -> 
         GrayLevel[0], 12 -> GrayLevel[0]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {RGBColor[0.6, 0.24, 0.4428931686004542], Thickness[Large], Opacity[
        0.7], Arrowheads[Medium], 
        ArrowBox[{{1., -1.}, {1., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{1., -1.}, {2., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{1., -1.}, {4., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{1., -1.}, {5., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{2., -1.}, {1., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{2., -1.}, {2., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{2., -1.}, {3., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{2., -1.}, {4., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{2., -1.}, {5., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{2., -1.}, {6., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{2., -1.}, {7., -2.}}, 0.17653168243419393`], 
        ArrowBox[{{1., -2.}, {3., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{1., -2.}, {4., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{2., -2.}, {1., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{2., -2.}, {5., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{3., -2.}, {1., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{3., -2.}, {2., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{3., -2.}, {5., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{3., -2.}, {7., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{4., -2.}, {3., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{5., -2.}, {2., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{6., -2.}, {1., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{7., -2.}, {6., -3.}}, 0.17653168243419393`], 
        ArrowBox[{{1., -3.}, {1., -4.}}, 0.17653168243419393`], 
        ArrowBox[{{1., -3.}, {2., -4.}}, 0.17653168243419393`], 
        ArrowBox[{{2., -3.}, {3., -4.}}, 0.17653168243419393`], 
        ArrowBox[{{3., -3.}, {2., -4.}}, 0.17653168243419393`], 
        ArrowBox[{{4., -3.}, {1., -4.}}, 0.17653168243419393`], 
        ArrowBox[{{5., -3.}, {3., -4.}}, 0.17653168243419393`], 
        ArrowBox[{{6., -3.}, {1., -4.}}, 0.17653168243419393`], 
        ArrowBox[{{7., -3.}, {1., -4.}}, 0.17653168243419393`]}, 
       {RGBColor[0.6, 0.24, 0.5632658430022722], EdgeForm[{GrayLevel[0], 
        Opacity[0.7]}], {DiskBox[{1., -1.}, 0.17653168243419393], 
         InsetBox["1", 
          Offset[{2, 2}, {1.1765316824341938, -0.8234683175658061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., -1.}, 0.17653168243419393], 
         InsetBox["8", 
          Offset[{2, 2}, {2.176531682434194, -0.8234683175658061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., -2.}, 0.17653168243419393], 
         InsetBox["6", 
          Offset[{2, 2}, {1.1765316824341938, -1.8234683175658062}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., -2.}, 0.17653168243419393], 
         InsetBox["7", 
          Offset[{2, 2}, {2.176531682434194, -1.8234683175658062}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., -2.}, 0.17653168243419393], 
         InsetBox["10", 
          Offset[{2, 2}, {3.176531682434194, -1.8234683175658062}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0], DiskBox[{4., -2.}, 0.17653168243419393]}, 
         InsetBox["11", 
          Offset[{2, 2}, {4.176531682434194, -1.8234683175658062}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0], DiskBox[{5., -2.}, 0.17653168243419393]}, 
         InsetBox["13", 
          Offset[{2, 2}, {5.176531682434194, -1.8234683175658062}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0], DiskBox[{6., -2.}, 0.17653168243419393]}, 
         InsetBox["15", 
          Offset[{2, 2}, {6.176531682434194, -1.8234683175658062}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0], DiskBox[{7., -2.}, 0.17653168243419393]}, 
         InsetBox["17", 
          Offset[{2, 2}, {7.176531682434194, -1.8234683175658062}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., -3.}, 0.17653168243419393], 
         InsetBox["9", 
          Offset[{2, 2}, {1.1765316824341938, -2.823468317565806}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., -3.}, 0.17653168243419393], 
         InsetBox["4", 
          Offset[{2, 2}, {2.176531682434194, -2.823468317565806}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0], DiskBox[{3., -3.}, 0.17653168243419393]}, 
         InsetBox["12", 
          Offset[{2, 2}, {3.176531682434194, -2.823468317565806}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0], DiskBox[{4., -3.}, 0.17653168243419393]}, 
         InsetBox["14", 
          Offset[{2, 2}, {4.176531682434194, -2.823468317565806}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0], DiskBox[{5., -3.}, 0.17653168243419393]}, 
         InsetBox["16", 
          Offset[{2, 2}, {5.176531682434194, -2.823468317565806}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0], DiskBox[{6., -3.}, 0.17653168243419393]}, 
         InsetBox["18", 
          Offset[{2, 2}, {6.176531682434194, -2.823468317565806}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0], DiskBox[{7., -3.}, 0.17653168243419393]}, 
         InsetBox["19", 
          Offset[{2, 2}, {7.176531682434194, -2.823468317565806}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., -4.}, 0.17653168243419393], 
         InsetBox["2", 
          Offset[{2, 2}, {1.1765316824341938, -3.823468317565806}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., -4.}, 0.17653168243419393], 
         InsetBox["3", 
          Offset[{2, 2}, {2.176531682434194, -3.823468317565806}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., -4.}, 0.17653168243419393], 
         InsetBox["5", 
          Offset[{2, 2}, {3.176531682434194, -3.823468317565806}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{805., Automatic}]], "Output",
 CellChangeTimes->{
  3.81263356871395*^9, {3.812633608270296*^9, 3.812633626443983*^9}, 
   3.812639449215973*^9},
 CellLabel->
  "Out[2391]=",ExpressionUUID->"27730db7-c521-43a4-9bcf-623cc558198d"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["1.4 Test Package AddDummyVertices", "Section",
 CellChangeTimes->{{3.812640108271225*^9, 3.81264011717787*^9}, {
  3.812705288116218*^9, 
  3.8127052897212114`*^9}},ExpressionUUID->"4a969076-8a57-43af-88c0-\
37ca0834d683"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AddDummyVertices", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Composition", "[", 
     RowBox[{"GetLayering", ",", "GetDAG"}], "]"}], "[", 
    RowBox[{"GetGraph", "[", "10", "]"}], "]"}], ",", 
   RowBox[{"ApproachOption", "\[Rule]", "\"\<Cut\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8126401203526893`*^9, 3.81264017084039*^9}, 
   3.812640287650238*^9, {3.8126406332245307`*^9, 3.81264064441411*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"4511fe8d-ec15-4831-976d-3f319e44a8ba"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"acyclic graph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "3"}]}], "}"}]}], ",", 
   RowBox[{"\<\"feedback set\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "8"}]}], "}"}]}], ",", 
   RowBox[{"\<\"graph with dummies\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"13", "\[DirectedEdge]", "14"}], ",", 
      RowBox[{"14", "\[DirectedEdge]", "15"}], ",", 
      RowBox[{"15", "\[DirectedEdge]", "16"}], ",", 
      RowBox[{"16", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "17"}], ",", 
      RowBox[{"17", "\[DirectedEdge]", "18"}], ",", 
      RowBox[{"18", "\[DirectedEdge]", "19"}], ",", 
      RowBox[{"19", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "20"}], ",", 
      RowBox[{"20", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "21"}], ",", 
      RowBox[{"21", "\[DirectedEdge]", "22"}], ",", 
      RowBox[{"22", "\[DirectedEdge]", "23"}], ",", 
      RowBox[{"23", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "16"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "15"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "24"}], ",", 
      RowBox[{"24", "\[DirectedEdge]", "25"}], ",", 
      RowBox[{"25", "\[DirectedEdge]", "26"}], ",", 
      RowBox[{"26", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "27"}], ",", 
      RowBox[{"27", "\[DirectedEdge]", "9"}]}], "}"}]}], ",", 
   RowBox[{"\<\"layers with dummies\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"8", ",", "6", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "7", ",", "11", ",", "13", ",", "17", ",", "21", ",", "24", ",", 
        "27"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"9", ",", "12", ",", "14", ",", "18", ",", "22", ",", "25"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "1", ",", "4", ",", "15", ",", "19", ",", "20", ",", "23", ",", "26"}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "3", ",", "16"}], "}"}], ",", 
      RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"first dummy\"\>", "\[Rule]", "11"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.812640638819645*^9, 3.8126406447502694`*^9}, 
   3.8126407317962017`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"a98d72c2-0f43-4383-bab8-50a7dda36ede"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AddDummyVertices", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Composition", "[", 
     RowBox[{"GetLayering", ",", "GetDAG"}], "]"}], "[", 
    RowBox[{"GetGraph", "[", "10", "]"}], "]"}], ",", 
   RowBox[{"ApproachOption", "\[Rule]", "\"\<Base\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8126407364446516`*^9, 3.812640738200025*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"c106a72a-63e3-4afc-9d62-f2320ecc092e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"acyclic graph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "6"}]}], "}"}]}], ",", 
   RowBox[{"\<\"feedback set\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "9"}]}], "}"}]}], ",", 
   RowBox[{"\<\"graph with dummies\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"13", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "14"}], ",", 
      RowBox[{"14", "\[DirectedEdge]", "15"}], ",", 
      RowBox[{"15", "\[DirectedEdge]", "16"}], ",", 
      RowBox[{"16", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "17"}], ",", 
      RowBox[{"17", "\[DirectedEdge]", "18"}], ",", 
      RowBox[{"18", "\[DirectedEdge]", "19"}], ",", 
      RowBox[{"19", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "20"}], ",", 
      RowBox[{"20", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "21"}], ",", 
      RowBox[{"21", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "22"}], ",", 
      RowBox[{"22", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "23"}], ",", 
      RowBox[{"23", "\[DirectedEdge]", "24"}], ",", 
      RowBox[{"24", "\[DirectedEdge]", "25"}], ",", 
      RowBox[{"25", "\[DirectedEdge]", "26"}], ",", 
      RowBox[{"26", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "27"}], ",", 
      RowBox[{"27", "\[DirectedEdge]", "28"}], ",", 
      RowBox[{"28", "\[DirectedEdge]", "29"}], ",", 
      RowBox[{"29", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "30"}], ",", 
      RowBox[{"30", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "31"}], ",", 
      RowBox[{"31", "\[DirectedEdge]", "32"}], ",", 
      RowBox[{"32", "\[DirectedEdge]", "10"}]}], "}"}]}], ",", 
   RowBox[{"\<\"layers with dummies\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "8", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", ",", "4", ",", "20", ",", "23", ",", "27"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "1", ",", "2", ",", "9", ",", "14", ",", "17", ",", "22", ",", "24", 
        ",", "28"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "3", ",", "11", ",", "15", ",", "18", ",", "21", ",", "25", ",", "29", 
        ",", "31"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "6", ",", "12", ",", "13", ",", "16", ",", "19", ",", "26", ",", "30", 
        ",", "32"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "5"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"first dummy\"\>", "\[Rule]", "11"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.812640738662093*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"dd4fb00b-8249-43b2-afbd-be0f6fd8ccd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AddDummyVertices", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Composition", "[", 
     RowBox[{"GetLayering", ",", "GetDAG"}], "]"}], "[", 
    RowBox[{"GetGraph", "[", "10", "]"}], "]"}], ",", 
   RowBox[{"ApproachOption", "\[Rule]", "\"\<Unknown\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8127053036452365`*^9, 3.8127053281659527`*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"cf9822e6-9a0a-4c34-baf9-570b50613ca9"],

Cell[BoxData[
 TemplateBox[{
  "AddDummyVertices","option",
   "\"Option \\!\\(\\*RowBox[{\\\"\\\\\\\"Unknown\\\\\\\"\\\"}]\\) is not in \
list of options. Choose another one from the list: \\n\\!\\(\\*RowBox[{\\\"\\\
\\\\\"Base\\\\\\\\nCut\\\\\\\"\\\"}]\\)\"",2,175,9,31927144100921435527,
   "Local","MethodSugiyama`AddDummyVertices"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8127053286006346`*^9},
 CellLabel->
  "During evaluation of \
In[175]:=",ExpressionUUID->"2b246261-d861-4c71-9c3a-a3bdbf2a832f"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.812705328621601*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"81d38e31-e25c-45b0-9cd7-3232c10fb350"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Part II. \:0423\:043b\:0443\:0447\:0448\:0430\:044e\:0449\:0430\:044f \
\:044d\:0432\:0440\:0438\:0441\:0442\:0438\:043a\:0430", "Chapter",
 CellChangeTimes->{{3.812647596146973*^9, 3.812647601675561*^9}, {
  3.8127053759751697`*^9, 
  3.81270538773236*^9}},ExpressionUUID->"476622c9-ae95-405e-8ba2-\
2b202c91792e"],

Cell[CellGroupData[{

Cell["2.1 \:041f\:043e\:0441\:0442\:0430\:043d\:043e\:0432\:043a\:0430 \:0430\
\:043b\:0433\:043e\:0440\:0438\:0442\:043c\:0430", "Section",
 CellChangeTimes->{{3.81272461972174*^9, 
  3.8127246289420896`*^9}},ExpressionUUID->"2a7d3d66-f3d8-4bb3-8a16-\
ad5fb7729f96"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
lJJz4ZWNZFhjleNlVxlkyYyftjcsoVMSW64bVh90dHBv+Iwd+hx1Gvo/qqpP
MEQ7Plq7/IQJhqjlxDDoEYlcgQjdyU6IxBYMh0vJ2UhdvLVptIJ9dV/eKirl
o0mOjFPSkfndeBjC+wEAAOCLEXGVRBDBgsGL3AIC8cCgnCCuywcfGa3O8ILi
FgxsnENii+6j7wVM2eem3sVa4hcuGDw2XSsaRbPL8diJD9+b3203Pbv/1BRa
4BbBgMI2UoNWSfylLEzk7HaBAzWjLOQWlJ88nCjWffR9RJalB40Q3fa5v+bs
QVMSEQxo0OeeWfWlDrXZGbMcymVWCXPP97QdL5QZtl0juY1gCPdshF4XrV3N
keg/RBUM0Y6P1i4/4R6GaOXsjWBAT3KQhyHo2YstGOI29PYXRGGdim2gc0l7
JTO1Q8/q2EA5HrP60iV10BTDVg9DaD9s+xsBAADYN3YkGJDnNqlAJOnE7oDr
cuVPTyd9MWdMkBj7emUiHGIKBq/NKC3icnKadYxTgX6ptuUxUXbRCBcMzBYK
3OSKQdMG5aVWdM1H0Cr7ul/QlLxtRJzC5XCyxbqVoCK2CAav2zbWnctl3fXU
gqqSt4t9GPyFMZFyeDcG30dro505KZVS7Vs75bZP32/M4PuqFE0w4AUXmdf0
tk37nwPlCcwmGNHLcc2ohIVoMsLxhzSvhBhbjW1PdiYYvK4lTVNKyhnFq6VN
+1uNpIgXiGGIJBiiHR+1XT7CYxiilbM3gsGLQmgKUspl2hkbxcaEMLITxTcm
1GpW2U7m7VIwoObwMhrvT6NYSlx+QDAsaxszM9tHbZTtT0VVQpFyOoZg8MWu
MDEMFs3ljIO3uQcAAP983CbybEXoTo9NaE1lgA0TWS9A4dkJ6YJ6+ivKNtqe
yQv15B6uJN/g2XqXVdddmp5R0tjRKT5f19V6OpHWCPwy6fNZ3fVSFE7JTeKX
nCVNgaG7a9EweFGQlEJf+qQgt6Dp7qQ98rge1bS8vLwEeXfpMkvofzMF0a9i
jUyYmyM4ibeoTMoTSh9NM4VsviErD3P8kya4seXlxSg2MryxzE6Pgmpx89/e
6RHvFBS+zxUuPyOBiRmo7n+xTG3ZQIknUi8F2b2NqSEhDsUPiTHYWo7Px4IK
0Cz7VzqE2KDQnvRfN3T+IlZ9AqsVuMml3YFVEjTp+QK0rwUvXZCPtsjgFMon
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
oimOq3MaRBke2dL5Gd0oAAAA7wvlNWJHYkpaU+6F4QaJtEODY6rujkZM70Qf
OvXtWHuruJZYZGKHexorbhhbY95EfXYDfk0i6yAIVV3DXVTa0mcZxloaReeU
o/eJNlV3q+Q88XSLWjX2d/W0XjhH/5nZhXlQdbNJfLpj9NGwWon398qEFZr5
jeiJeR1T3XU1WO+PtzGsue47LepTT3D6S1rx2QOG/u2XHKTemIcVYmn7AH5L
2a26jOnX0If/6Ntv3Yme8NoMVlk3thw6N0OvTNKgJvpVda13HVuJLznodxkH
VT3XxeeIxS36WNSGmcRuXhOdbp94NKxS4kRvfWlFn3kj8vqe/JLX9bIUfiG+
EP7Aa9fWZuY3jYYbLhI+NYbfbf6XouoS1kv0YjcGze5gMOAau8LPU8/7vQ49
3txaL/q6w+Sh0NAO3SUe94LWGdvAsDJ2pWXMFT6s5zHejDUJJd1/aLuaVb39
LeLzAzHnDwAA4BBDbd3RV1efhRQXCIln6OVzVSfhse+br/RtuNHzQis+JtLa
4wKu78Vo/alildGNgsYbg+Ka1unzGL9v01uNmIBbcHPGtayXFeRj069MeKPu
xbJWksIeyzXe0v4fl0GRyi1RmV6jLMOIpUWb3P1rU60FxbdNqFbmG4M8jysk
E1XZ9rumsJOX/1g5WMiKv+TghpWUZAoHraij5KVOciRFpl+no6q+U2V8RZ8w
X6RF0Rc11+cyd8PrGG0KnxvlNdy4oF1KeMnuzcftjSP0LsQpl3SrfhR8W3CT
a0qemnqCvWPomo8rTet7XrJ/Xp3HSS+R95LIj2rpKYHojiHSzZH4qaHt3HM/
CHOlWrs3GHhOVmYxN9hlxApSZOP/zP2r5751VX8tM//GjDvAHpRTiJtjEzP6
qi8Mh0/Dt6y92TVv08tyM6q1dnS7bGR5rli7BBkDAAB8AegQmVMc6qTespNV
vPCrd8CMF/KYSBewTY5bNunAx68krJtomL3mDBNw6ah6LYMn0S77fCt/6Yew
mraHa5TPOTlidD2PHyTgW5keN7lsWnFuGYGG1AVshhHzCgrcoWF7fqf2AreU
sLEbeB5hORnsN5kzzI55uQ6jXIu6toqq3rkDF+COveQgZScrIhE2sIAXZkt0
L+lrtE1OWTaXIieMmuvZu4HGbR5BUdK3Ytb/1FzTPrXmTXTJQWrFeM+0glKO
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
yegMb9TTU3p4LfvprXoJAMDTkhzsLFPrDNQ+k8kp/x6t+kqNAYtFCPWn/b2t
1ib7gQa9tszaNzSbmhvxvl2T7f20w2y2qO2fHi5aWCcwyDPhnkMn2iw7T335
+elDzg9723c3KkeeHT3vOnLAusP5+TeSy3X6sLXxrNqbMj3ifuT8sRZHlySd
sFnE/uicHLt26pB40NLUfe0bqf1Il9TtMO90DYSvuF2dnr7TLfW7lAPmvi8+
dF60O7p6JeeblvZL0Zmbfpd4sMGg2VzT3CGKUjguT4V6T53p2P2a9NN8vlGJ
hdmIVzz+TsOOd69cO+9yuqXuVlN9T2R28Y5EMv5jX2vrScn7P52O476RmSf6
7YSdxasDQ1GDb/xJjgkAwJ+zsjH1qp7RmRlfU9TkG0/IKfmWZCoQdPv6Ywt5
ukuvSgj5A4N82/dO9+BvV+ybSpt8o8pXp2dDrc13a+D40av306ekqRa/uxcL
vLPFcOy7+EI6Lfzotpa3Xp5WZua5EU9dkf3STz7nmchYf3OJ1vTBjXiuzLJo
r298Lntdxc6wev9ejl93W2qyXbnlnz3V5fbAPaU5prtG19wfUz/ye9h9wP/L
hM+2yeafSuUbNdR/2B2ODTgKCqpcoXi2r3elM/wge10z10TD4eBc+mc16rW8
bPPfWXnVv/jbXjPn9Wb60A/9alYFBtp5AwCejUcIDKX2QGYKHfOa059t8CpF
Ck8WGBbGrn49MjvYWZaNHyl5xFMt6DsuXPw0NBH1WrUWb3SpjkCeCR0t1eyU
RjO1BvNjUr1Q2CZ9PTAye6OzrCx3enf7m0tzBQm/j0o7NSZpTDlIOoBUamql
0cwB1dijXK8ypxdXe35W307c/fbrcGzMZ91WK42o76w16rD01ReRB0otgc03
of7AJn0NmnppLHdPIv1Su83S0X3hq+sjI6N3n6wWgjsMAICN4xECw+Kc9dcF
BoUy72uywWAh1r9Pp9ntm0xm5v2yzhvLavtiIbFcqPaMZKffqYC9NDNQiRmL
dYDK/LotGx7k2z5rSYV7SMkic9+JWwtywSBTt7DZ4h2VY/3NuurOwaWnBvK4
t16XiyX5RikXbtVkT0Z+EGjbVOGOLCwe4v6Pnt0vaQTltswbn088Ye0kNQwA
gA3jLwgM6Zm60qXe/H+swJAOBtuyc3rqt6BDr633jsuZmTo372cp31vgCGbW
aqZmBhxbttQrc7dadJGbr5eHB3lUqtXUuCPxyW+/Gbx5ziyUOYL31cHyTPDQ
Fu0u7/i8Ur+xqS3wQE7N3Pjs69uyelNCZ/VNxG5c/HZCVmbnNUatzDPp065I
X0Jy8vuvB2OpxET4i6uReDIlx0evuEy6TP5Z5jEfSairJEoWn2sogYhVEgCA
ZyRT95gNDMpKyeJHCwyZCskCk3Qr/We2vSozaz9OYFCCQZH6N7ucGD1r2WLz
jiolimstHpwb9tQV2ANqocDMTc/OLVbvqHK3fypg37ZV/E4NEur5ZP/wT076
duvS8WNu8MyBC+PJnzzbDdkEMh/x1Bqs3pFEJvCYvdHU7OhHrt6bM6nUHb/N
YPWN3vOfeDccTy2sOWplnlGmcJM7MhU5c+J8OoGkX+X2oJCn/G/UeIYXUk9G
udji1isx5aJmhz07S7NVHAAAPHXyrwGxrqSoprnjsL2p5ejB+k3K2od6Z/B2
RNpjLNEJgq7EuEeKjAZEs75QIwib9aZjgelkanaoz1qmLJOoqnvnyq9yanbl
56dXvpxd9bVKMNDVNh857u57t9nafj67e1J63t+7ZdeF6MppUY5f97zR1N4t
dZ9obT31TXafhIUhd4VBLV9MexB2Vld0XlcfJ8jzw9Jr1iMfut73KyEkGf+x
941dh7rPdZ9468CpgfHMNhFy9LM3TG91nnZ2ffWL+s7MsLTX6nAd7flenaDX
HqVUKRS93T+dKaa8O9De2Ox0ufy3EspJ3jgrHndL5855XG2tH1yJzv0Fvx1l
p8e3Wpy959ztTa3s9AgAeNGolQDZokQAAIA1PVzZCAAAsIx8J+jeV7NZV2J+
pyd0j3sMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAQNr/A3hQ1JM=
    "], {{0, 741}, {699, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{538., Automatic},
  ImageSizeRaw->{699, 741},
  PlotRange->{{0, 699}, {0, 741}}]], "Input",ExpressionUUID->"eef1e20c-ac71-\
46cb-8408-72afc1ef380a"]
}, Closed]],

Cell[CellGroupData[{

Cell["2.2 ImproveHeuristic", "Section",
 CellChangeTimes->{{3.812703215541577*^9, 3.8127032176138864`*^9}, {
  3.812705406821349*^9, 3.812705409764999*^9}, {3.812724633529273*^9, 
  3.81272463358924*^9}},ExpressionUUID->"6ba4f07a-784f-4fdd-873c-\
e2502f57a793"],

Cell[CellGroupData[{

Cell["2.1.1 PromoteVertex", "Subsection",
 CellChangeTimes->{{3.812705417168294*^9, 
  3.812705425536064*^9}},ExpressionUUID->"c7af484d-dc32-43f1-9601-\
59c46ba37912"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "PromoteVertex", ",", "VertexPromotionHeuristic", ",", "ImproveHeuristic"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.812703652908163*^9, 3.8127036853049326`*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"5e60aaaf-eaa9-4fba-b7bf-95e7a4b5c5e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PromoteVertex", "[", "v_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dummydiff", "=", "0"}], ",", 
      RowBox[{"b", "=", 
       RowBox[{
        RowBox[{"relations", "[", "v", "]"}], "[", "\"\<parents\>\"", 
        "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"layer", "[", "u", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"layer", "[", "v", "]"}], "+", "1"}]}], ",", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"dummydiff", "=", 
           RowBox[{"dummydiff", "+", 
            RowBox[{"PromoteVertex", "[", "u", "]"}]}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"u", ",", "b"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"layer", "[", "v", "]"}], "=", 
      RowBox[{
       RowBox[{"layer", "[", "v", "]"}], "-", "1"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dummydiff", "=", 
      RowBox[{"dummydiff", "-", 
       RowBox[{"Length", "[", 
        RowBox[{
         RowBox[{"relations", "[", "v", "]"}], "[", "\"\<parents\>\"", "]"}], 
        "]"}], "+", 
       RowBox[{"Length", "[", 
        RowBox[{
         RowBox[{"relations", "[", "v", "]"}], "[", "\"\<children\>\"", "]"}],
         "]"}]}]}], ";", "\[IndentingNewLine]", "dummydiff"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.812703692356243*^9, 3.81270369292047*^9}, {
  3.812704001247116*^9, 3.812704027474391*^9}},
 CellLabel->
  "In[304]:=",ExpressionUUID->"2672efa3-6c90-4006-ba9d-82d932818fc0"]
}, Closed]],

Cell[CellGroupData[{

Cell["2.1.2 VertexPromotionHeuristic", "Subsection",
 CellChangeTimes->{{3.8127054287830515`*^9, 
  3.8127054335602655`*^9}},ExpressionUUID->"76f4cd37-d6c6-41a0-9acb-\
a08a622c9450"],

Cell[BoxData[
 RowBox[{
  RowBox[{"VertexPromotionHeuristic", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"layeringBackUp", "=", "layer"}], ",", " ", 
      RowBox[{"promotions", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"promotions", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"s", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{
                RowBox[{"relations", "[", "v", "]"}], "[", "\"\<parents\>\"", 
                "]"}], "]"}], ">", "0"}], ",", "\[IndentingNewLine]", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"PromoteVertex", "[", "v", "]"}], "<", "0"}], ",", 
               "\[IndentingNewLine]", "\t\t\t", 
               RowBox[{
                RowBox[{"promotions", "=", 
                 RowBox[{"promotions", "+", "1"}]}], ";", 
                "\[IndentingNewLine]", "\t\t\t", 
                RowBox[{"layeringBackUp", "=", "layer"}]}], ",", 
               "\[IndentingNewLine]", "\t\t", 
               RowBox[{"layer", "=", "layeringBackUp"}]}], "]"}]}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"v", ",", "V"}], "}"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "layer"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[305]:=",ExpressionUUID->"64dac49d-5718-4e9f-a086-2880c81eb140"]
}, Closed]],

Cell[CellGroupData[{

Cell["2.1.3 ImproveHeuristic full", "Subsection",
 CellChangeTimes->{{3.8127054394397945`*^9, 
  3.8127054483940907`*^9}},ExpressionUUID->"fd9b504e-578e-4ae4-8785-\
e6bfe29ccbe1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImproveHeuristic", "[", "DAG_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "=", 
       RowBox[{"Graph", "[", 
        RowBox[{
         RowBox[{"Union", "[", 
          RowBox[{
           RowBox[{"DAG", "[", "\"\<acyclic graph\>\"", "]"}], ",", 
           RowBox[{"Reverse", "/@", 
            RowBox[{"DAG", "[", "\"\<feedback set\>\"", "]"}]}]}], "]"}], ",", 
         RowBox[{"VertexLabels", "->", "\"\<Name\>\""}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"V", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"DAG", "[", "\"\<layers\>\"", "]"}], "]"}]}], ",", "newnames",
       ",", "resultLayer", ",", "betterlayers"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"relations", "=", 
      RowBox[{"Association", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"v", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<parents\>\"", "->", 
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{"IncidenceList", "[", 
                RowBox[{"g", ",", "v"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"e_", "\[DirectedEdge]", "h_"}], "/;", 
                 RowBox[{"h", "==", "v"}]}], "->", "e"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<children\>\"", "->", 
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{"IncidenceList", "[", 
                RowBox[{"g", ",", "v"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"e_", "\[DirectedEdge]", "h_"}], "/;", 
                 RowBox[{"e", "==", "v"}]}], "->", "h"}]}], "]"}]}]}], 
           "|>"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"v", ",", "V"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"newnames", "=", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"v", "[", 
          RowBox[{
           RowBox[{
           "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
           "#1"}], "]"}], "&"}], ",", 
        RowBox[{"DAG", "[", "\"\<layers\>\"", "]"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"layer", "=", 
      RowBox[{"Association", "[", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", 
          RowBox[{"DAG", "[", "\"\<layers\>\"", "]"}]}], "\[Rule]", 
         RowBox[{
          RowBox[{"Flatten", "[", "newnames", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"resultLayer", "=", 
      RowBox[{"VertexPromotionHeuristic", "[", "]"}]}], ";", 
     RowBox[{"betterlayers", "=", 
      RowBox[{
       RowBox[{"GatherBy", "[", 
        RowBox[{
         RowBox[{"Normal", "[", "resultLayer", "]"}], ",", "Last"}], "]"}], 
       "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}]}], ";", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<acyclic graph\>\"", "->", 
        RowBox[{"DAG", "[", "\"\<acyclic graph\>\"", "]"}]}], ",", 
       RowBox[{"\"\<feedback set\>\"", "->", 
        RowBox[{"DAG", "[", "\"\<feedback set\>\"", "]"}]}], ",", 
       RowBox[{"\"\<layers\>\"", "\[Rule]", "betterlayers"}]}], "|>"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.8127036898298235`*^9, {3.812703719998991*^9, 3.812703767363511*^9}, {
   3.8127038762967386`*^9, 3.8127038858611917`*^9}, {3.8127040175636945`*^9, 
   3.81270402221095*^9}, {3.812704183216408*^9, 3.81270418964756*^9}, {
   3.8127044495725956`*^9, 3.8127045210226135`*^9}},
 CellLabel->
  "In[306]:=",ExpressionUUID->"79b65003-a776-42bb-8de9-0ef79b6bf54d"]
}, Closed]],

Cell[CellGroupData[{

Cell["2.1.4 Test", "Subsection",
 CellChangeTimes->{{3.812705461904245*^9, 
  3.8127054647146406`*^9}},ExpressionUUID->"5ec1f857-c664-488e-9f6e-\
b089b551e339"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gr", "=", 
   RowBox[{"GetGraph", "[", "14", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graphLayering", "=", 
   RowBox[{
    RowBox[{"Composition", "[", 
     RowBox[{"GetLayering", ",", "GetDAG"}], "]"}], "[", "gr", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"res", "=", 
  RowBox[{"ImproveHeuristic", "[", "graphLayering", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8127032250413084`*^9, 3.812703239335167*^9}, {
  3.8127032875813026`*^9, 3.8127032933230667`*^9}, {3.8127034163049107`*^9, 
  3.8127034164929204`*^9}, {3.8127034656931305`*^9, 3.812703481089941*^9}, {
  3.8127035356472197`*^9, 3.8127035362550945`*^9}, {3.81270357713428*^9, 
  3.8127035866149187`*^9}, {3.812703830053842*^9, 3.8127038304813795`*^9}, {
  3.8127038953527737`*^9, 3.812703897108277*^9}, {3.812703985338577*^9, 
  3.812703985442611*^9}, {3.8127040334906607`*^9, 3.8127040369963636`*^9}, {
  3.8127041348321676`*^9, 3.812704135334342*^9}, {3.8127243203207197`*^9, 
  3.8127243222940426`*^9}},
 CellLabel->
  "In[307]:=",ExpressionUUID->"3e4073bb-7bb0-49a8-b853-f6e5a493e9ec"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"acyclic graph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"14", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"14", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"14", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"14", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"14", "\[DirectedEdge]", "13"}]}], "}"}]}], ",", 
   RowBox[{"\<\"feedback set\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "14"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "14"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "14"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"13", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"14", "\[DirectedEdge]", "9"}]}], "}"}]}], ",", 
   RowBox[{"\<\"layers\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "7", ",", "9"}], "}"}], ",", 
      RowBox[{"{", "14", "}"}], ",", 
      RowBox[{"{", "8", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "11"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "13", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", ",", "12"}], "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.8127039855608206`*^9, {3.81270403093287*^9, 3.812704038658517*^9}, 
   3.812704135746685*^9, 3.812704194279396*^9, 3.8127045261912136`*^9},
 CellLabel->
  "Out[309]=",ExpressionUUID->"41b423b4-0af7-4ed0-8e26-2779f22d971f"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["2.3 Test From Package (Add Improvment Option)", "Section",
 CellChangeTimes->{{3.812704764275738*^9, 3.812704776011731*^9}, {
  3.812705475154253*^9, 3.81270547639091*^9}, {3.8127246351832237`*^9, 
  3.812724635270279*^9}},ExpressionUUID->"523fe366-da82-4286-b675-\
9967194c4c4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testGraph", "=", 
   RowBox[{"GetGraph", "[", "10", "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[168]:=",ExpressionUUID->"d90b42d4-aaf5-4322-acb8-336b263646bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dag", "=", 
  RowBox[{"GetDAG", "[", "testGraph", "]"}]}]], "Input",
 CellChangeTimes->{{3.8127048654898405`*^9, 3.8127048783643017`*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"fc9aba83-cc65-4bbc-8863-6171bc160b1d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"acyclic graph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "1"}]}], "}"}]}], ",", 
   RowBox[{"\<\"feedback set\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "2"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8127048787146006`*^9, 3.812704946358818*^9, 
  3.8127050141509447`*^9, 3.812705070090293*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"6020ac18-2867-4c0a-90d5-2960c212e1a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetLayering", "[", "dag", "]"}]], "Input",
 CellChangeTimes->{{3.812704883157934*^9, 3.8127048882557116`*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"52941e39-22be-447d-a3cf-bfc474055a1a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"acyclic graph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "1"}]}], "}"}]}], ",", 
   RowBox[{"\<\"feedback set\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "2"}]}], "}"}]}], ",", 
   RowBox[{"\<\"layers\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"4", ",", "5", ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "6", ",", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "10"}], "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "9", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8127048886126556`*^9, 3.8127049469631815`*^9, 
  3.8127050145758157`*^9, 3.8127050715146046`*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"bb8e8727-5df9-4986-9b44-b71e169605ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetLayering", "[", 
  RowBox[{"dag", ",", 
   RowBox[{"ImprovmentOption", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8127048994637156`*^9, 3.812704929995697*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"4d06931e-cd4e-4e4b-be96-e80cb3545b74"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"acyclic graph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "1"}]}], "}"}]}], ",", 
   RowBox[{"\<\"feedback set\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "2"}]}], "}"}]}], ",", 
   RowBox[{"\<\"layers\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"4", ",", "5", ",", "7", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "8", ",", "3", ",", "10"}], "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "9", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.8127049079162245`*^9, 3.812704948954139*^9}, 
   3.8127050155711546`*^9, 3.8127050727914996`*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"58919684-0e14-4119-bc60-9838d5e97f19"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetLayering", "[", 
  RowBox[{"dag", ",", 
   RowBox[{"ImprovmentOption", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8127050203913126`*^9, 3.812705020979467*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"18de15b6-1f28-4cd7-a34c-bcc822c8505c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"acyclic graph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "1"}]}], "}"}]}], ",", 
   RowBox[{"\<\"feedback set\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "2"}]}], "}"}]}], ",", 
   RowBox[{"\<\"layers\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"4", ",", "5", ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "6", ",", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "10"}], "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "9", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8127050212026696`*^9, 3.812705073855603*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"bd4b8ca0-a53b-48e1-ab79-4814d1132c4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetLayering", "[", 
  RowBox[{"dag", ",", 
   RowBox[{"ImprovmentOption", "\[Rule]", "\"\<Unknown\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8127050326255693`*^9, 3.812705035474682*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"a5adb2fc-4a63-40e7-83e5-fa56958ebd9e"],

Cell[BoxData[
 TemplateBox[{
  "GetLayering","option",
   "\"Option \\!\\(\\*RowBox[{\\\"\\\\\\\"Unknown\\\\\\\"\\\"}]\\) is not in \
list of options. Choose another one from the list: \\n\\!\\(\\*RowBox[{\\\"\\\
\\\\\"True\\\\\\\\nFalse\\\\\\\"\\\"}]\\)\"",2,173,7,31927144100921435527,
   "Local","MethodSugiyama`GetLayering"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.812705035822332*^9, 3.81270507484254*^9},
 CellLabel->
  "During evaluation of \
In[173]:=",ExpressionUUID->"c3274c3c-1d72-40d0-8463-df5cd223c6b0"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.8127050358403683`*^9, 3.8127050748545337`*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"20343da5-5520-4c78-ad5a-3003955cd32c"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Part III. \:041c\:0438\:043d\:0438\:043c\:0438\:0437\:0430\:0446\:0438\
\:044f \:0448\:0438\:0440\:0438\:043d\:044b \:0441\:043b\:043e\:0451\:0432", \
"Chapter",
 CellChangeTimes->{{3.8126484472599*^9, 3.81264845590385*^9}, {
  3.812705515295556*^9, 
  3.812705518789403*^9}},ExpressionUUID->"278a3c68-97e4-4658-ac70-\
b7f860b8518b"],

Cell[CellGroupData[{

Cell["3.1 Min-width(G, W, c) \
\:0430\:043b\:0433\:043e\:0440\:0438\:0442\:043c", "Section",
 CellChangeTimes->{{3.812706740822997*^9, 
  3.8127067618140717`*^9}},ExpressionUUID->"82150409-a3b4-4555-8108-\
583fcb64f42f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
OqWmgeImEfOFMqazmRofD/lKBp28MPfudJYd4yUJNx6nFTdyzgd8euIX+VfD
hUm8epl/a491djdljl922Xt30mK8rFXWlSInMxt4Yl24El1iXMoOioqSnxPB
tyboomoJ9qXjwD5qrpxsmePmQJ41BQpn9fbl8dQoA71iay/CsznYIKBEbbQk
MeGYRw8T79XDXyySqD9J/uI3jvlHaNJ6xvuUv86y3SP7aP3m6L/AzUzJu4RZ
f5QbaqqNf0m+yh3e0kkvPIb3CVHMMZ4dFNnkd7aM3XQxQzyU/ekMZMmD4l4r
pna+/NKfUnjJDLbrDPcz+5kXrcoyQmBKDzOEaMsRnE0Qdx0H7D0XJx/+tVWE
ugt66Ubn0DSvHV+pzjJX6+lL8tP+5tBWE0z3csfKs3PjhAPuCartmLxrgMKh
xrHp2Z/Gzg4515Iumq6zmKjHUM3vuLYeGLv+kpz1lF1n9yI+i4MgJCHR2BYS
vxKeoZTXcyS/RZbcN4y6M8ekiq4LqnpRvjqL/59cpVw6K+g3Tpwt8AAkdfgp
IsX/M8Pb/cp1djdlToeO+G9qKkpwd8deWSBunPx2Cr41bHQpHTbym0fqFOjs
nuC3tKjSJ2gwd0eMbqKAtZh0bjZ7lgN31/noLB24d/dx1iQenP7KdNrLkz09
MQd13iXM+qPp9mwq9Oqdix1Dl89Ukg1XZ3NFu3BrVOviPfPm/bEzX8wJCybz
qJ96L0/zMOVMNhPq0tfWPNOfUgrJjFve4w/7UxBWMTo4PXTi87y93OyAudHw
/S3sU31ibd2/Tzf12KrtTporlEVnI8v3fuJGOzvU2WW7pjc5eZ51ppFl9Q1N
KS1Pr80alZXyj6bjvlbWzxbzoMbBepreQeEHKWGz0Jse45nUODhT7LKsYeVd
5huzUUKxLCniT687qebMkehtbo5tuVjxyQxe3aJge7YwnRXMg8IulGqDJypg
Z9F+i4JMtg2FNQsXJil5T6B48SLm1Fk6NDtx9ZvUpKOM9uzOyoxHHUlW5zYX
ukItzEVwlMbbriRSQqWCoonrXtRq/OdM0qlcyLlQezYa8nxzdWK2wEwSAPdd
XIYPD+T7kiC/cXr0Ez08t65MPMoVn91GoVibcWI+iP3Gx5OsuY3Hd+8FUkOl
zA1VZu8z2Xhfbae6kxfay7uECQR+NC0+y1zlV9uVb+a3uCvaz+ssvg166WZH
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
sXcGxx9HUS8VJq8xNhYezK1Qu6kasQr9wV8i9s9Wmzk32rOcjUwPqeKKbTa7
MQ7BEhGi+uROi77y3J/2M24HkLMAAHx4vKGc3fZZTotYgRINTH1x6fojwcTY
QtIKS4T8avOvTIDPlntYWiguMEyuuz5pRHK2qKRnMsAKhfVpsk7vfJm5EKaU
w93OmGEZzfCl9WYv06Jo0P2ZNC8RjRzx2zsufDcfpnapV26jLE/+5Szr/A35
7ZcvZHZ95iBniSM9rlW2vpv/JI92O2mhmXMROPq3OBH6FVm0d3RY5jeZO4hK
LrsCUbY5s19dMP4LB0+/chnKmdAmaulWc+8k+pC3RCZu+WisknQ/3NYdFnOs
ExmJLNnUYkKMPfJb8+Z2Y9xlkE3OoqLvdleI8ivab/u2mPVDeG3O0nTyM3dS
HBTIWQAAPhTQjkW845KQlMuazJ7N1P2zZ828+1bibP3nhkYm1/b265svjs0I
nBwV9VrOJzZ46iwPf6H/l5VLcFmnzlu8UXoedgzIK07pr/3Fcq1XN/DD7E+X
KyQfSZVDk2sL1vpzg6P9DfWX+sl+g+asxixQ1qJVqfx8cnL8qsly+96E7UuD
7pNxL3evazTo/d5Q87GyrY806NTtf03sn6XWveM9NdLTbf39Bu2Fdmb/bPaa
p+Efr1eSo6Smni6C7NIodYnNtrkUgTV3Kvhw3KCUKlv7yW6t2pDYP0ute653
yKtOtRj6+9svXhyeiB9ATS3fH5CXV6nb9TqjI75xNVOJsX64RdbJcD+0aXuu
DbeUYG9yPMw7E5FnLlOb7HBpVe1pjfEfeHMRPt9YVl6IHOfFVbUXzJ5A2ifM
0Z3hV94fRw3nq6uO1yqUZ1Xqi8Zbc2t4lZF4GtGzhx699E946wQAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwHsDtTLz
d/eywClCQDKbnuFqJnU8f67eXImnoU/NPPu+E50dLhPjhgnla3hf+GCH6e1A
+e0dylp8Ggw+6UShVHXeXuQ/OR0APnSSU9C+ATibqpjNuv6hQy1a5PshZ/G9
nljkBe/VBM4kOiyO5bjn/RpOnPchyFnE+zdMfyyBabKS4KYDA4A/LSgFrXhf
Xod3Uc6GXIazbz4xrrsMl1KFBTr+d5/kbKYM7+82meRshq7Onn/wveK9G6bf
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
RZdt6uIhd+7Nj0yThSBnAeD3Ac2i+RxtBee3LTW6t5PUodA0eTBd+MZ+Mjcs
FxGlOgePVcxvVaQkzH3noLbdxlKiasidw7Sz43Ncu7Pw+ikF95ctr0nGMQhn
bIjw8FFbc1elIlGR7i6PIFi0Ks6YF95ldXYvw/dmoEVjBuOMoD6LcmOVax0r
eywKGZryaiy+nB60iN+qKiSnc3fpgpwFAH6iwblv23VtaumJjonn7Ny6fK+j
+pJ9OcJYz0QSLf57lwrOjLVf6lJ/fCQ5rysVfDjerpCpu/p1Lb2jZK2oGE0C
m7PmptOK2qpiESEqrqpVKFWdtxdZJRf7pPJUn39zpUnb0d/fIq/UfOtl31Bq
yVYvJojKEQ+f6AnOfP+jD9+JivgdA7r2vqQqbc7faKluv7fGtsVp1DfKq8nJ
te3g3JhO06ZVNptxWQKXYu361T6krlFd6ic71fVXnKgTqC3vtzqNRlFRb5p7
4Z+8pq3XGsgOlfS0ceolLj8wZ76oRPpIHtNsheqyfVFIpqCZ9g2clRkGhXo+
0aFosvupXWrTbawUHdagv3mHb5da9453yWVqQ3+rpvfqYC1jEBZoiNDw7VK/
2eoPEMTHwx4+V90r9/dO9kmIPHUMtOn71NIjPRPLzKROhedvnKvumViLMm1x
GtvV8lM9kyt0/b/StXRpzzaYPVvCl9ieSR8+ZCoZ011oUUiVJveq/x8j2kat
4XK36kSN8QF2WO95+PZONOgdb5efVBt6dJrLo4MKUV6rI5Ay/EJylvJblaI6
yyI3K3L8LZah3kBfWnLoSkVHRuY461tq0SIX1Vv9uQhPkLMAsH9sz4w0jnrD
yNgbcxJFl22NItYwi9KvS5jXhxZLXb22pW1kV+S4X+kpzqQsl4+4UagSsk0d
IohTCW0FndV/MM1IiHxShOhYOxsDue4ylMWcffQLXi8i8nIKc6Ink84Bx2o4
4GjNi1cJKdR5sTCeTe9Xn95aWrAqDlZe6mi5MO7bXLzbfiwflSVwCd97bZKU
lrLtQtbUrsrh2SgtRJoHXZuv6AqLPzrRwkZ7hhctdUSSrHxmUxWJ1XbhUDBc
zKqr50SdNTclIwMbcyMdJu9G0qAk+pyWWZY6iQhNmDzDh8KiTGcPyL+cRX5w
WuVpySO4BuGMDREYPkYKEEROK4foqmOg07FEISt03COMFWo2LogKe//Sd+u/
9Jwvqmzubumw+tb9d7sr8mnBFOW/hArOPHzI4mroda2FXD0F4lJpyxjj/UcC
KCl2Oufh2zO0QPxaeUAxMovc1tSqXZNHEBmMMwJyFhv2U0Rg2GOiV4jct5ha
meypEhGqJKmKZGHWAEX2qyBnAWCfoDZdg8223yjsjSod+mUbfYgdrPF3Pzw7
XHmOfluppVvNvZObu7SIKefYgbHCWzIwzcZX0PNDOWdLCOPsO5VqJEQ+KXFJ
z2SAnV64Uh6XTpQZXOvZa++7riKnQowCFa8SkjISNuxq+xfjpb8tUTi9zuFu
51o06jUdFR2qszwKC1zaxfGZTSWiapOX1alpAdRWa1mgJ8ZmWgJgUS5WXvex
WxexfneI481CDRRwX8YJ+e8aqk9b5l/baLw52dt8a4niDkpKn294hk8prIs8
w8covEfJaba38WzJMQhnbIjQ8DGlEwUGV3YlkFqwqIzTIeRtFCeMtEjGidgA
pKDbSNqWtug5nyAq2p3LVPSh6WiBpI7uMYFLFO/w0SuEZtK5sYlEuVhl8W3F
KmKuJo4mYmVzHb69g2ICC0vIf7L9i7o74w44ATmLJGCyaI69xdu/DJXmx95i
LMQPJEtKFEl+MLcEVSBnAWC/oCLP558Eo9jdFpvoorPDZfmJd596YlF9TksQ
Kuh79Dy0mySRmdhRcfzftC0hePfHodRwiqhnuIzrk8LzQ6xELPiIFLMYt8rB
p09eshZGXCVsZ86jtRX8g6QwHmrx9mf2p1SmaVPgUsw9x3weDS7+++63PXUN
o0j3iSwtPN3AEbmSRAQ1FvRc9Qc38GiWPQ6RF9PmFmnN0OTyG+xrjCw9ehKg
QlPkwfig4D5PLHVoXVtP1yTj8LE7YRNiN3WPScaGCA4flgJEgdzyhEdIRYNP
fSvM+oQKPHm0FGGWSXE3QTwuCH3hv7c+u+Onkhd+bM35LwkM327o+YJ/iwnx
TcQSY0HPiazLafheByZUPuH25d8BJ3AeFF7KJuVkZN/iVJ9yyNXbkqKSo5cr
N+kJchYA9hc8M8cMfdjuV5yIsgg4LnXG5eYOstAmLGx4Cw9X90zZEpJ59we2
siZ8UlTYM1JJlBtcr/C/SJ0hUuxdCegvf6FIWv8zdYhXKX1fJzPrZgza4buE
xQ1RotBfJkmjyTJuf/BfzmkAaRG5yOxZWGOJT/bY9J3B6cYteWmivRKfB5Ez
RZ1OnhtiuRCrT2qfrzguDcTkZsrwMePF1T1T9phkbIjw8GGnA8Gf1Tc8O6z4
IukEDFSHhJsgVYjvpsjxZDJfEh6+ZFHOdJG2WJQIEMo+fDvz5uNZBq/guPlR
2u+xvb2gxxWKa9nJO+ByIl3OMuAnnxNwuOM1t1hSDNJ8cpYKe03V2R/HMr3z
JV+1QM4CgBBICS2IRQhjIZIIlqA2XcbOuMzFqgeekaLBJ/PPI/iVT0wUCQHE
LLDxhBZTbSL+GQ+O0MDTGiG3LLJTAA5IRtNadOvpf59HsHuO76AhatnZ22fz
c1Vd5BxMeAOxQo2kDKMroY+4/r4U+C7hdvHOtCminDF7Ijst9dKHWs2YvtkG
hvwz3pXMql3IP/mZoqSeG3n1WmCxEq8P6nOOrr052df5Iyu0UoePwnMjZ10U
F0CMmpy5IcLDR+EAWj73enTNOdhqW+T0B4VcpYnhZiKs6LtFmBrushG5mb2K
PJeEhy9VlGN7CFZ+qdUnvK3eD3B3c5Yx8R1woeePfDmnWcSPX7qcxU8+Z8m0
4RnpNM+nGO9pOVuU22Yl0GcBYF9Bb0hcAcF2v/gLhgKNhuJqFJ6RsOJGLVjU
Jk8Uv/KJtxFPuWjCp+WXnp458TTIaIvRgJNsZvbuYSNn4mVHKklekX4iQE/g
rX303Ej5bzZI8mN2YC4hv53ssPmS3320RE9ML/F9nbTm1op1OqzfZY5p4b2E
Z/uUWYZ6OX3HjUJS46Kc/RwLr+Pm+R221TgQq4BpIBWY6ET+U76ujwZnv6w5
0j+59ibbNJMVHL9VkZjuoquOT3pjOkja8DESJ/5lRrtHAmjH+7WKFpQZG5Jt
+HapRVtDcaZwcSrit3d2/O1Z0nm8+HlLqHhYiCM7cOxujHaZebs03yXB4UuI
cjbiGS2TRLW0SBJq9b6APDLiRL1w16H1LV2i6uucA85xj6WHmSW9xbvU2k9d
HXdS91WhChSBfxYA/gCQpChm5VrEZ9OUxFS8aNB9rXXMG5d3UffQIaS4bW25
v2i2zNNT6ub0QAk7ZdEiw6QsykcTfthjahyl5wH8fWQBpoLTn7ZaHoczqSco
bAn9G/H99cIAEx8SQoGj4mN626P4Ip8KPrT16jqs6dnVUWBPTOptPjbX4UNp
AgHnJx2MGi5wogL/pR2f5WTeaYsv5sZEO0Q6P3HifU8pv0KNLKD/3QlM9jWP
P6OYTyRoNqNeuT/tHXssfGjPptdUd9zk4fFG5wKWFKxcCz2ztRTFupfb7bsZ
ho8u/J9kSQnjI6CC7qvKwwVovAJeUydaMGRqSA7Dx5zlVVSht80HE1HNXhvZ
1DHuTfU54mNM2EcInVlUI8YSkhZwHYwaHpe86Q3nvSQ0fKm/2nAPHUX/7qy6
+rqtz8J7HL49sT5NHmWfVWp99uqZogK6IF/YO9q4l0NEUQXTjTBoU+2BmF97
dcp4+fp8Ws2RvSJHvzPIWQDYX+iJ8W4P2tB32aDTj/w8OzlQJ1V1kAadhnT4
udoHOqZJqmhr0w3EPqfW58wX5PUd/fpm3ch93+PvNZUnW7QtfcxW3PCvNxpk
Sn2nTjc84Wc0TjyvSi454hoc2ux5Qqpu07V/yzliEacPqD8iwVsYFXK5os30
40Igk2KBK199XNV92aDVknfdk0ZFlapFo/vWu4W+jlQ2rK2k/1LgEpL1E4NK
udpAkv3tWk33V/HSkW9OzP1V0GtuqFDo9Dqjg23j5vyNZqmy1aBrM078lnWm
onyWmo/4D+3PhchTR49Spu4iDa30KPxncqhGWt9Ndms1Q7EqYdKHD20zGWuQ
n+vu12t01yZ9D29qjstbWjR9zAbb9IbkOHxM+oCGCslhPH41MoXe9OPjzKZR
VPmTVezzdufhpPF4leqSpn3MG4/Kk2TydQpe4h++3Z1H5uMHOb+itrxjygpl
m75twMFsU9rb8O0JKjhjbqit7+7Va9pGJh8/vqmrlGu0msGJPcXCoZVeumOF
bsgNjfSUtr9Pr+kYSzvucpdZIwmHDSTIXc5ueS06haJWVi4hCFFh+QmFQnne
4n3fjkEDAOCDhlp23/mXP2t2MwBgoVXy8prUGKesbPssp/MFjqROYs/6LAAA
AAB8KCB/TWlid3BuhD2m6uPxjdJZi4j43fe9GZRiAAAAAPjwQQdxnESnc+T6
g2jA2f1RU8559AAAAADgzw21fK/ztDFjQqsMXw48GDjdvzcvMAAAAAD8qaEi
/r/3tt7IfmhnZGG8Y/Cu/11OkAQAAAAAAAAAAAAAAAAAAAAAAAAAwB9LaNnj
fZ51W3HkhcezBPE9AAD8adgJODuLUGqPjFk1YzDp2BAZ8gVQy44e5cmq4jz2
eBml1uTGuWCop/aOOvx5XnHVqfrhqQ/liLeXTn0Z7o2MSYVYcApC/K2cUqi/
AwQm9EU4B0zZa5x2FfLfvXLxq5nsp+tT63NfdfWyGecBAAA+COiZbayjaeTn
NZ45kD+rJpf0BHZc8CG06QniUXqX3pL2iYwnML7LUMGZsYutI1MveSqemvg1
M+ikwbxYZqX3gdR8xDkSDbo/P3kh582e1DP7hQaj+9X79lAAAADwgHKFF1SQ
D3jUybSsmpv/Gqo8lMjUxpA5NW38Hu6hQ6L0BPFYHqmzSfB3EHwssEhKTq3x
fCEl8Su16TZWiutTkvCmpgZ+90nJR5wjWzPD1XUmb+4H+KMEBCePGt2bIGkB
APgzEM+qyfyLRUy6RVQgjQ6rEROZpPALe1NHphRp7zmpmcdREqI0cyuTpT1d
x3/LLNtUxekLnlxI5CPe3XlsvVCnyEybNalFKP1QgcaemtMtS1HP7ZrKeibx
IgAAwIcNSt+Zz7Ft4qS0pUb3NncKpELT5EFedyQjUCSpKvAulkfSffFOhhYd
FvvCPqY8eyNwsrlE5nGcmTS/dOiX7aRvBabJytfydb4ZfqviNQ+U3/KaZPyu
AR5QfrfyvevsyIqSh1LY7/F3AAAAb51ocO7bdl2bWnqig0lmh49066i+ZEen
tAXcQ8dFEi3+GzsZ2y91qT8+0nGPe7IqFXw43q6Qqbv6dS29o2QtY9vcnDU3
nVbUVhWLCBFKb6dUdd5eZEUkk2tb9fk3V5q0Hf39LfJKzbfeuB0au24zhUhF
PSPVKd7J8KPrF5svqY5Xk07f47+RGp2hX6uo6XcIn36DFgMn0++fK8hDbdB1
NUqP9MTOsossT/RWN91G3YLs5AUSDf47U/cyTQl6x9tRLsIeneby6KBChBKW
RTfnvmlSMn2WV1x1UqFo6LT7YoYBnF9eZfxm8KK2va9fe7Kyns39h6KGHEad
vjOplPCvN87Vtk8wpujN+eudmkuqquork76Ht0it1tCjVZzuceQQPrQnOUut
e8e75DK1ob9V03t1sJbfNcB3A2Qbr7MscvPxxvtQ1jO5glpHLTl0paIjI3Oc
xRu1aJGLUi3tAAAAfzzbMyONo94wMvbG/IPRZVujSNyMzbOb85YGCZO+mVp2
dvXalraRMZDjfqWFr0lZLh9xo9BQZL47lBS/hPKAH1TbXySXityRhOhYOxsm
uu4ylCUmZOqJRV5AFPS4UvWgiN+q0yVpOjsB50Cr/TnKMS2SVOjtOLscUqPE
9Tb+KJpowHW5rM767DV1H2p7ztRo8oSRsTfufHxmUxWJ1XbkOQ4/stQdwtnK
d6m1n7pa/7ZEcbt3FwuOr5UHFCOzKB8KtWrX5BGczOPc/ueAfJ2EqKKbPUAv
5DIUsL5aatXR2elYpVDwWLyUpITsgYnO1h9WUTeJCys67fgO6AtitS3rnpjc
5Sy9/DCdPSD/chYloqUVzJY8gtc1wHcL9HSlFBf2mJrNSY8otTLZUyVCKek5
30Otyxp9BwAA8DtDbboGm22/USi0KS9mqMQO1vi0H54drjxHT2jU0q3m3slN
xnWYsANjhbdkYJoNQQlOk1zHIuOhS3MpIgklLumZjIUNJ4shdJVgZVYSKw6d
LllhWXFc7LKvhvzWelFCZKDUmUS6nIo1OeK/016ttsy/ttH4lavXYFsKY79z
1ZA7GKtzXKZQYc9IpcLqR65GQ6/r1W5S9zIKb2EJ+U+2Blj8cbZBJfd/rNq4
J4/0uGJ+y4SU3/ZZ2sjpALVkqxeLY6VgYc3qdzsBR88F+wusKh5IODFpAUqk
L4HSyFXO4tgt0dF45jXULMGdSpnAY5fU9tgjmmxLR4uTA8m1Qvr+QYV1cS/F
AQAAvG2oyPP5J8Eo9pbGRAbaPJKfmPZp7VL1uTtK662+R89DKSIDb+oUJyRI
6j4ObAFOCxuOeobL0tyR8RLx1Ux6UGiKrB5J9k6Gnj/yBakUwcSYnVWZTIih
5WmzRlo3MPniDfx4TKHYWxpbb+A6J2QKtXhdhRodDT6Zfx7ZSZLIu+Fn1gZx
4t+0bVB4805an6Vsg6K23cZStkSmFBQ+JCY+HvYwfc+NRmNGOZKy5sF1Lswu
mHKUs8ye6MQCLLedSqngdRpaoiTuyzyiuL2JTqPV+d6WlJXYIl1RSE0OAMA7
CZ7DYxHCqZtHAo5LnXG5yUQoxT2neAsPUWZwxZJHp+zjyLx5J7xoqSOQO5Jx
PGLtjyg3uF4x90SKGHF0yJ2y5xJJFmnGraOpCwNUaKY9QdHVie4SfHBCzpTp
nS8z9xkqtCAWIRxBCnWiRXQv9XcmDJh4L3AiABvbzBNW8dRtUJk372BbOqcn
NzzDHxMHel2JnSz4tvFSMuy0xaOcMDXgOqf3M8oGXpCtW0RF+olUrys2axcY
XLESU3Yq5Ui6nOVUnhNNt+M1t1iSNX6QswAAvLMgJbQgNidj+2QinoTadBk7
43M+9Zut/oAIRXUyOhSeFRMyIrGPg9FBsG2zQG55gubDiH/Gg4NYGLkjtyyy
syQOSMZRQFtP/0vrZchymK6NUquuXm3GPZUoAIZIWhho88QJq2zydyP++0bF
UaXZ87ohULEbISU0rpJju7fS6mdb9MrV90lM5u5ic25hDS0UqMCTR0sRbE7l
CKC44smoyUwfMoFAdG0felYisUbFenKXsQCIsdjdeLqAzeXIXZvYGYSrh/qE
tULspktqPAoJgz8/uemzuFmcJVZ8p1Jk6dGT3I8VwfI0Xc5iOwlHiG94RjrN
8ylrLlrOFgmdQgYAAPBHgabIuP0Qi7n4vEotOTqHnBlExoJFbfJE8ayYmISx
xES2zS2vSU9LWxyKw9o2A06ymfEMhqbIg3mJ+RCJjDysH604WvtoaYsthCku
3eja5CenBx5kmq8ZFTseoYrNp5Immz+c/lW2FUH3SI2cjVx9kz5LLAaSNCkU
ldTrjIkzXB/RaYtvm/J9px6ZjSJNU5zoM9x8tMjZeWhSfe3dwXthGK2Teuns
7MZO55RtUIzRGOvadONbsehEzta4YSG+03Yr4OhrZVYgyZIaD2Vxg20xeyfk
JmexFRrHyyVqiNYhO96vVYl9wdn7FT1+6QdLJj2iOLqs407qBlvUsUXgnwUA
4F0EaanFlcOzSDJFfDZNScytFg26r7WOeeMSC53ShGfvLfcXzZb5HVrbnR4o
Ye2l0eCsSVmUj5SRsMfUOEpPlfj7SBhRwelPWy2PcULqpDjYXSYgGf0b8f31
wgBWQlG8bpnUOM2ebRtZclva6zru+DMfKY/9pKznjlYAb+tKpO1ZTrulwl7T
8eMmb9YE2QK3QHKKcYZSkWc2TZGI9UpTr9yf9o49jivTG+6ho9h3HHAbDRYf
vXhYnyaPsnoltT579UxRgURh9YW9o41IHuHvI4WO2/lY+CZ8ndi0jv7d9Fm6
Bpi4I+Q3P8wq9WGvuUaC1z+0pCbx6DCSOuZJjyzadUcr2vm6NJkc/bOb/yRL
Stj456D7qvJwARr6gNfUuaf9U+iZSffqok21B1htnVqdMl6+nh7GhjTodHcD
AADAuwAtnu72oL2clw06/cjPs5MDdVJVB2nQaUhH0lS85TErpYq2Nt1A7HNq
fc58QV7f0a9v1o3c9z3+XlN5skXb0sfs4gz/eqNBptR36nTDE+yGVnw8lOSS
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
U6uuHmlFz/013gl9wzP8McGdkeh38JjRvYXkQ2DqSmVenfkxntCoJYeuLOY2
wlOi+GBpy/e/Lf1dKxFLtHfXdjOqVAI32d3dmjPJJWLldR+axOianFaaZgSt
UfhNLCjXZGz7bnTV0XXSOI3vsPnYXJcnvTq3hW+3/ctQRZdzg7l1VusoLkVc
OzLLCBQq/HisJq+anFqlBFtEBR6QlYdqzN4wW5m2oriHTnjUUqG23cYKvXMj
MUasNV6oiKTOF+h2KuKz1ksq253YMEktO9tP6RxLVLzhyT0jUCK1fK+j4qjO
vsiKmOC0UVogJGeXbSo0lfMpLOkG4RQ5Gw36HtzoOVlU3mLx8C9REM9sqiIR
vZRK+lJoxftwkVlsRBas9cWEREnenJhy3RnVHhWJ2PGNm4Lpde9h1dBN54NJ
i+4wUaxlszozvSeWyA3f3p103f1aW5Fsg0W/n6bB90h+oyMr3tiFfLX5wTTD
7GJs/RP7qdOsLk7rxli5igG6Sky5osorU4Eo42liqywqUw2NO6ecFm05kdfq
COzsMqsboszgWud2xbL7H9PsKlTgzruC+iy33Er1tf/lmpq4SSolxKE6yyN+
tzQz1wnos7Ju4+dj7peo9fRrWyomxM32VaYy0YD7ixpJoZR9x+maX1eKJbGH
k67bQ5M0X/AOwJ+HdPPIXuQs8/OD5HSImUSYuYi5W/iZtUGc3xETKAhqwVxN
HCWn1/luR/ksNaJ4VAk9w480WhbQ3zuPzMcL8rSOQOyLIVdPASHDS3SmUMYA
SL9uv7JzRbqcFbrJLivCxMX11vnN+e8udN7N5pMSaDvNC7v6IBGXAku2evFB
tf0FW7GE3ERTj7HlFr93L13crDi0xaLj5vkdgRatIx0qNrkhQi5DQd4R08Od
7DVPAV0Vy7+cjc3AUffVFqT1hISK4Ha+QLdTi7aGYnG9jZGs2L5Ka3721cwN
FyjxpVNfRhwxeXfiX85mN0Y1zC5nORVgPhEXKy6RiL42RamIO458ZLFt7gSc
nUXEkR7XKnufyGOLsogd39jPiZLLLkbWJN0Nt/pwd8xWw3icM5SFf5Tpjc5u
d83YjbjceJVYEVNw3PyIU2VxSc8k4/fllM4EXgoYY4XvnMVujP8rqDZ5WEmH
FvZHiKJOZ2BnNzNZ5Wxe5fBsOOmTWDduzwwfocXoKfNCXN3GvoYDva5NKqc7
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
kLpGdamf7FTXX3Hir2VraWZ2vKYj3MS1rwMM2WsO2S713GlsV8tP9UyuUMGZ
r3QtXdqzDWbPVtYuBzkLAMBrEg3Ofa2UlLLpHSmf9cxF29Jvjs4Bx2o44GjN
iye/3nloOpKXr3fiLHeb3q8+vbW0YFUcrLzU0XJh3Le5eLf9WD5KAi5wCRW3
5roiLVLEcpiuOvVnkEWR+s3WPOjafOUylIk/OtHy1Qw+2DS8aKkjuCJp2aYS
ZcyP9symKhLO052URZd6btccIohTZpQaPrrqGOh0LFEBhzbv/7Z3fy9tZXv/
wPcfkJtceiEIEvCiUIrMhSKDXlg6CCpPEdGREEtLlBmJjmhqaVQ0KnVLpwnT
iWfOhPMYer5NzzOhh5MemtPHtMcUdOY0M03R0CdOtRNb46jVGqIYk7j97rV2
fv/yR21nOn2/rpqduLN3dlmf/Vlr7fUpkJsX6cdpFIhUt+fWJ9nK4ki9VG7T
1ldOsrDsZ5rpONamBs42pg5WHgIu2ZEvGRdw/b+hO794THJReXt/R4/JvUHK
j+YeYIwYcRYAjoRb/3f3RzkFynFaV3trztgsYc58+d03cvaRn29Im07EevxI
gykJz2bZeay99M9lLla7POTSnxGdajTOBrK8Requ320ryK/SOwPhr1+ytLWR
+ptrlna+gaRxQSy7Fan47J83fMqcig6K8a1lT264pU20aVPlMky2JNHr0FSL
ikbs4drNPjtbypToSPFIbt4o19r9QqnoyNxXPnjJJGKFheRa3KKlrUhUpXeF
e3pDa5bLDcZ5LuuZZuD3jKurzhnn3qDTGJfs6Jdsz+fQsublbVrqvazbtsKF
nurP5EkaD3BFEGcB4Cg27OwZRtxsWhQa0a1581Ara11cd88u+bllc5M4h88C
6HtCg1mjd5EONm7h7nXLC440lblVhp/jW6gsb4WH6oRWl/Mt2P/3prq5WU/z
oODy/ItNOjFGEpuYSqNGuOWkh+fUVcW14TEhp66EYfLUU0mtOffK/ZzWj+YW
TY1icbHmcbi2KJ3pGk70OO/z2eWgEKHKR51Cexs7fm7HoS1mhH+HfAs/jd8c
aGwem/GFsp5pOsFf7YaOyjpNuOfziHDJjn7J9rhf7ly/5+H4lLyIqTLMH+pm
B3EWAI6A5hRxrWI8PgVoF0da6XCDeZK1+6Ntk9CapZtHmukt4TmOQqmKZVmN
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
ZtUnohKd8yDBJ+DUV/PR8MiDm0c+Br9nvL+8rO3bf82sRqNzcMX5r28UZdU9
E0vpIv/WnLG5IPZF/hWH8WLj0CHmfQEAABzc7qyhOo9hRPmlZ6VRNaX5ZDhV
XKx5vHOgvey4jRc+1k0fMSF8o2MI+eYfjKnlZfmi8CBw/mm5euz+vDfz7K0N
561LFYVlNdKGmrIzMva2YwVBFgAAfte41Sf37J4MU5IAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAACS7HptvQV0HaeSLMtDcW5TI/0UU7Pf+sn+
FcdtVlFdKCmtIYtEVdUo/+b0hYJuU3PrnZVjP3zwTqgK6MpaWZa7zH75OI91
QN5QUUj2ks9ftXOt+p985I2AxzIopdtFhRUNTd/Yfbtv9VQAAN5X3MbMjZ62
0R8yFQ7g5g1VTJHKtpZ1L1tOXRVzks1Sio7zTRtby8Wl7WMPn0cq+IR8c7cv
yj//vExyWv8UzfRR7Hf59rifDVW5uSrbZra9ZL98u15rVw6TW5VaaMk/pS7q
s6FkAwBAFluT6hN5Zez3vvRvk3J1YlGLeSXSlm79qCk/JTMllpDlcyKZJKfT
mqEcLRf03Osuy5PI/nvGl9QmBxZNzWKmnLVnq2T7O+B1aKrFMpPn91bSdp/L
t7e3ZlGIC+TmxcjrdCeyz+XbdGjOMMwZjSM5VvP3YDX7RHAAAMhuzaYqYk7r
XeFsk9uaGjzBVOmcidV8vNbOnHT5jmDbaZCdEpV/mbZW3a5Lf1rcbln7fedE
JJzlZOs8/53iNm09ufEdwmlPJPvloxkxk9Nl9SZ1OfD3YD1tqUWBAQDg4Haf
6k/nnmQfRUrg+ByaCqZY69hJSIf8dvZkavCN/MmMrlbEFCuty+mbcY9JWmWY
/73liQm4HYe2mKnQODJmjTG7buu39+YDv5Pz2Xbpa+I6hNOeSPbLJ0RhRpQm
l+fvwZr3r2gMAPCHEvLN3OxWXlZUno0WbOVWHvRUXbKsBIU+Q5Gkk/57j/M9
udF9qU/xX6d7HqzENaGc7+ntbmmNom9Y2TE4xjaICjutq3tb04a2c1I6IYbM
e5HK5L13F8L5jX/e8CmTI//6r1+2dfYMD3fUlrfedIVbcm7Z3CRmmPJRZ6bQ
43vy9/tuuicu6LGOKLuHEg5pa+67jqruB+vhc7FpVS21Vezk+o5v5oay9XKn
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
p+ZBZY/pqS85ZpGJPZGot/XM0CgmgcPrtV3tEVKkLCsqZH5r122szzlndEeG
MckDPr1XbfS5p6S/IieZx7/c9U4Otd9e5IQtEnLfwr12fDV441n2zGzLpW+s
TpfoHRiNTeHHoPyL5o6CyM8b/7Pvpbl8/Jf/hy0qEnJJzuf4k+yjPHK9vC59
L7lhSHciB7h8ZI56QeV1R3ghL/+Kw3ixcWg8/aM6XjtbzoTnBnBBz11lUWVk
GjMAwB8G376ND9TWK9RX1ErV6A/TkyONlfIeVq1sZa2eYFwUIss0VUovX1aO
RLZzGzOGL2qbeoZV7crRh+5nf28tr+/o7BgSHsUN/Pxdc41M1atU6ibCzSxd
HkpyyRrN4MjDnmcrFZeV3Tfjllik5QOaTkvog5vS2lrpZf39eW+6vJAefFW1
vP+KurOTHXdMaqUV8o5W5U3XNvk4SdlEDYa5NI18lrdIrJ+4JqtVqFl2uLuz
tf8v0W/fnTNUi+P/yucyNJdJlSqlNvLU59bcd+2Vsi618rJ24uW+IYNzG+s+
zrxo/0EEX1gHZDWKPlbdxV+F/5vU1FU29bP9na2ahAdRUy8feXr6RnPtZ/3D
qlblt5Pup/9ora7t6GgdEh6wTT2Rg10+bsN561JFYVmNtKGm7IyMve1YyfA8
rDBxroX9StnRP9wlq2rRTS4iyAIAwHHiVhz3fky4n/lwkIlYqY9XAwAAwJvj
/FMDefvXRgQAAIAjyDIVHAAAAN7ArtvSKyvNp4tfS/vMbixoDAAAAAAAAAAA
AAAAAAAAAAAAAADwIdj12noLSHUZcUlCVZ1EQjk2Is2zk9yKdUBWX1GYwzCi
/NKzUlmn3kFrwXAvLD2NdHtOYcWnTbpHb7j+PgAAwO8RtzFzo6dt9If1DE89
cvOGqvglcNNLLWAXjxaFSS0QT1Y2GCzqnki7AuM7FVyc1LVUybqG2b5WmeKa
5eeUhZcBAACOhNQKzytjv8+QTtKCsLFiefznf9SUn4pVahOkL00b3YdDc0qU
rgipf96g2C+CvwNbzwznTrbdFQrxcD67trKi27aCSAsAAG8fLVoaLQgrrDyf
Wks9SxmdcEbMpIvCv1raeixrv3UJcO+EqqA4LtzTOnqxUwYAAHhrSNHS3EjV
+L1wUdpirWMnoR6p386eTA2+kV3QmqSS5BR4jxYirzyWcOZfsBot80erJS6U
s4/v007dAgAAIAj5Zm52Ky8rKs/2CMXsyEykBz1VlywrQT5zc2iqRZJO+u89
zvfkRvelPsV/ne55EN9Jyvme3u6W1ij6hpUdg2Nsg6iQlDTdmja0nZM2VBTS
pfUapDJ5792FcIikCWCO/Ou/ftnW2TM83FFb3nrTFe2HpkO36aZIhZyjVbEI
TgVmb11svySvrmJt7mf/ZFuV6uFOad2wNX210whyM1B/1OXrAwvGRobW1Y1u
CtrZfKZEPbVxpB0CAMAf186T0ZYxV4B09ork5hWyKbRibhGJ22n3LKnZLSGV
03189LX1DZqXd0juFjf8ygdfvay0dtRBJgJxS5bWUwnzl0gd8NTCZ79aFCcZ
0SeRit4bU+qSWC8x99xYm8fkDUwlT5EKekxKpVC9PWzXaxvpsiyRMCeSlKks
tLocWZ1e3GRezjhcGvJOXSlpNC0ecTzVZ2dL08XZfFISHQAAIIbbmrrWbn7J
kalNOcWaxztkIx1grTLMC2EoMK0r/4yPKdzynfbBya2911Pq0rh+YJrwFo3Y
t4SXNAaVRKuWZ+hQ3bSpcsVFA5ORacPxUV54lxErLCmznVatSmV8dCNbLvZZ
1vweU5NIrDAvC2/x4VjOhO8T0pxy0HOvu0phnDtap/Ee4iwAABwYF1yae+4L
0dHSCo2D9tyGpnUlubGnX/nsUv61I8Tnre7ZJf9eQkTe4xZNjWJx9OUe97Oh
KjdXZdsM75/2AKdMGw45dSVMOWuPzHLaeawpjn0jfTfdFCn/I7Zq1JmwK//S
rNvHJd4YhLud5YkROfz5FbuhtbJxZPLXN5gbjDgLAACHQgNTZLos5zHJhAFW
gdd6qTcaN4UZStGRU/oIT/y45JpFIS6QmxfDL9M/vEPHN3O6rF5hsJYLOEfL
mVL11Gthn6TXmjmjcWwm/NEet+PQViYNzgqSbwzIl6Z7Jii0NtFfJGIOo0Rl
e5XyfRifBQCAwyBJaF5khjDt6RU1RYIItzWl7Y3GXO6luemEqM7o5kK+53NL
QZrZxcZqhV5iEoWFNJn2AOfVGp+T5DHoeeJcpVkkXYOi1rgQTinphGQSdkPb
L35ZCtJe39RslFubGuzUu9J09nILxlom4cagM0dcxP4nXb8wF/Q81ErPyAzO
o02BijvN+MnSwv0G5hsDAEA6JBmL9nnSMJfP2sNhdtnaq7F5I4/CLpubxPl1
xnmOmzcq9M4QTYSjHxYiJlniadulV/HRdtelPx2ORyGvjSUDwXu0+/dkTiz9
JJ3GOQWqCS8ff7uG+GjL563FyTErtD559dzI9+mWgRJS7EbjQkA4/mWzQixp
M3sCmU6X8zlG62oHJleP3nVMQnlcZKczr/D8LAAApEey1MJy3TSJTEG3ubWI
ye2xbXLkkR/Ht103XNGIRVZpIhFwe9vxTbtxbpfPdu0jReEe4JBvWi8ryGWk
Jk/AqW8Z44MO/TzJTDmf/asu47MAiWw0+MatykgmJJOXQff/fDFCk9DArLGx
pFJrD69kGFx2GLsbe+7RucSpvHa2nAkPLvPp6l1lUWVkGnPGEw649NXVelfg
yJHW9396aa7slpseEuedHCgqv2j1YD0oAABIhw9P4wO19Qr1FbVSNfrD9ORI
Y6W8h1UrW1lrQnTbdhpkldLLl5Ujke3cxozhi9qmnmFVu3L0ofvZ31vL6zs6
O4aER3EDP3/XXCNT9SqVuonwA610eSjJJet6ZPSUW5roOVupuKzsvjnjiz4r
NH1LWV1YelYqPVtWdp41PV5JH2QjM69a2K+UHf3DXbKqFt3kYtYgK/zVvLGu
LsMqGQcT/PWRvrNOfmmY7VPUSLtvP8X6xgAA8AdEZl6lPp+7r+Cqw2bPvpYF
AADAh47zTw3kpVs5CgAAAN4YnYAUHk0GAACA47PrtvTKSvPp6snSPrMbncAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwx7BkVV+QSusrCk9krawaXLGxlfkn
Kgf/vRL/GGtw2XFbe1HRdvmyvKL8M+3Ey/2XQwQAAPiwbLn0dcw+FcwXzfIC
Uqw1ViCPt/6IrRTltJhe+mnddoYp0TmTC8ICAAB84IRqsNnjbGj90Z9kRaUy
3Q/r0XyWFj4PF5nlfAtPfnyygIX2AQAAkhwkzqb9OxpnpSbP2zksAACAdy7k
m38wpv6iubNvWN0pl3dp70SKta1a1VKptKGiUCQ3edbm7v1V9/W1AUVdhbRr
1JY4bEoHVZXy8wrVEMsODmj/9o9r+/Qbh5yGC8K+I1GVbCGvGbIiYgP/xcPW
VXQZAwDAey3kdXxTJ8mPlEfngu5bMrGkzhCp0h58qq/MZZiafu3XNxyvSGzd
eawpFjPidstaJAiS8rKnGEnLrTlhXX4u6LnXXZa7Xz7LBedv1DCJ2auQz+az
dkx+AgCAP4CdJ7rTfED81DAfXU5/zaYqYk4MTm0JOe2CScpHvpxy3XQ48oa3
lLJ2H33pdxvPixnRSfZR3Ir8Pjtbun+/scckRZwFAIA/rvCc3oS4FlgwNsZF
3qSomrKFe26szUsJqYizAAAAoRVzi4iPdOIKxRU24opKWsQwZzSOTfqZ/eKs
EBkRZwEAAJJxm7ae3OR8NgnyWQAAgCPi1saVBSJG1GTyxAe20GvnQ7tnh/57
vzi7558zNIgYcYluOm5yMOIsAAAAz+8Z7y8T5ZZ133Vv79ItgfUZY1v9dUfC
PKgscXaP8z3Ry04xRVemvEKkPeB8Y8RZAAD4EAReu+6PqT+vqqhukMouyBUX
tXdm1unkYvL87NnSfBHD5BRW1F8wOEOpW+guON+z+2NDnUq1Rj+m111ltWNf
txSSNRXzS2vU1tU0X8rvaVhaU5ovfIbuKOn52ejOAQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI7bklV9QSqtryg8sc8yxce/z+CK
ja3MP1E5+O8VssoyXaRRKiWLMsYvhgwAAPB+23Lp6/YvB3A4Qh357PtcNMsL
yPLIohbzSqQ2gUtfmVR0AAAA4P0W9Jjkxx1nD7LP0PqjP8mKSmW6H9a5yLbU
4j4AAADvt98qzqaDOAsAAL+lkG/+wZj6i+bOvmF1p1zepb3z1Cckg6SYnTC6
KTd51ubu/VX39bUBRV2FtGvU9jKh0Gtw2XFbq5SfV6iGWHZwQPu3f1zL3m+8
ZFU3VhTmMIwov/RTtfXlqnU4WtruPC1sF3KONZRKGEZS2jBGC91F4+xz35zV
oLuuGVDUVMiUozZPMJy7kgJ5qaOxqXGW887fH1O3tnT2D6k7m+XKr+64Nrg9
AACAYxfyOr6pk+RXau00tnJB9y2ZWFJncAWE94NP9ZW5DFPTr/36huMVia07
jzXFYkbcblmLVHnddhpkpxhJy625TRqtDliuPbhsVogZJqfVsiYEOe+EqkAk
bjIvh2Met2X/8qzm8U7k8zTO5p3tv6a98dM6ia0+h6aCYU4qLL9G9skF52/U
JEXVpDjLrTtGZRJRjdbxmn7PttsoF4sbDc+23uyXBAAASLHzRHeaD4ifGub9
kU1rNlURc2JwakuIdgsmaT4fDMt10+HIG95Sytp99KXfbTwvZkQn2Uf+2H59
drZ0/z5er7WTz2jFCvMyCeDcmqWVJLjnjG4htL6eGugwzEX3KsRZhikfdQa4
+C35rD2WXKdmrwlbuJ2Z0dN82lxlmI9msJs2Va7ohHoSgRYAAI5XyKkrSQ5U
wrTeaORNiqopW7jnxtq8lJB6sDjLR1I1+VidkQ96fHrbdaHzs2Imr9owu7tH
orCyweiO9eemRtUjxNktp64q+U+EU4iPvAAAAMcgtGJu4XM7RlyhuMJGXFFJ
ixjmjMaxST+zX5wN2tl85qhxlttxaIv5FLbaMBeaNzZctiw91pXn0IyVhN3P
zC/jQt+xxNnwgz8JZ8xekhaKmVMaR2gPAADg+HCbtp7c5ECV5K3ms3z2PE0C
K/NfX333lXRgcmtvx208J2LOsP/5kYTdtfjIdyxxlvaKZz9jAACAY8KtjSsL
RIyoyeSJDzuh186Hdo8wSLpfnN3zzxkaRIy4RDcdFxQPHGfDf847w9o3yCEt
mhrFooKzNTXdE96ETx5LnA2tWS/zCa1IZvLE9xJza87//dGzu9/BAgAAHI7f
M95fJsot677r3hbCTGB9xthWf92RMA8qS5zd43xP9LJTTNGVKW9kCaYDzTcO
49zGOj7QFmsdO8Js5ZfmphP8/tVTrxM/eCxxlv+jF+Pdn4hEn3Rbnm+Hp1O9
mjFerNf8iHlQAADwFgReu+6PqT+vqqhukMouyBUXtXdm1unkYvL87NnSfD4K
5hRW1F8wOEOpW+guON+z+2NDnUq1Rj+m111ltWNftxSSJDW/tEZtXc3+/ZzH
0nqm3vgskk3ueieHis+MzuzEJ5xLVvX5GvI4LXnAtoF8ceoWuppxTWm+8L2p
W6TD1lV6vME1l3VM3VJTUVkvlZ6XKy5rzdPrQcyCAgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/gv8PsTU2
Jg==
    "], {{0, 504}, {632, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{550., Automatic},
  ImageSizeRaw->{632, 504},
  PlotRange->{{0, 632}, {0, 504}}]], "Input",ExpressionUUID->"5d675499-3f09-\
4e29-a489-f2d4f142e66c"],

Cell[TextData[{
 "Min Width Heuristic\n\nInput: DAG=(V,A)\n\nassign = {}\nfullLayers = {}\n\
num = 1\nwidth = widthUp = 0\n",
 StyleBox["while",
  FontWeight->"Bold"],
 " assign \[NotEqual] V\n\t",
 StyleBox["select",
  FontWeight->"Bold"],
 " v \[Element] V \\ assign ",
 StyleBox["with",
  FontWeight->"Bold"],
 " children(v) \[SubsetEqual] fullLayers ",
 StyleBox["and",
  FontWeight->"Bold"],
 " outdegree(v) \[Rule] max\n\t",
 StyleBox["if",
  FontWeight->"Bold"],
 " v \[NotEqual] null\n\t\t",
 StyleBox["put",
  FontWeight->"Bold"],
 " v ",
 StyleBox["on layer",
  FontWeight->"Bold"],
 " num\n\t\tassign = assign \[Union] {v}\n\t\twidth = width - outdegree(v) + \
1\n\t\twidthUp += indegree(v)\n\t",
 StyleBox["if",
  FontWeight->"Bold"],
 " v == null \[Or] (width \[GreaterEqual] W \[And] outdegree(v) ==0) \[Or] \
widthUp \[GreaterEqual] c\[Times]W\n\t\tnum++\n\t\tfullLayers = fullLayers \
\[Union] assign\n\t\twidth = widthUp\n\t\twidthUp = 0\n",
 StyleBox["return",
  FontWeight->"Bold"],
 " layering"
}], "Program",
 CellChangeTimes->{{3.8122300655495825`*^9, 3.8122303259800863`*^9}, {
  3.812230415226431*^9, 3.812230415694088*^9}, {3.812230586100535*^9, 
  3.8122305877411733`*^9}, {3.812230620407993*^9, 3.812230631638678*^9}, {
  3.8122311218737383`*^9, 3.812231207058238*^9}, {3.8122312556487646`*^9, 
  3.812231560516828*^9}, {3.812231594846791*^9, 3.8122316967477465`*^9}, {
  3.8122317294508533`*^9, 3.8122319401982737`*^9}, {3.812231995938597*^9, 
  3.812232005564395*^9}, {3.812233230978729*^9, 3.812233236259384*^9}, {
  3.8122345387578144`*^9, 3.812234559978469*^9}},
 FontFamily->"Verdana",
 FontWeight->"Normal",ExpressionUUID->"870f29a2-29b9-4d1a-8fff-a74bbc3cec14"]
}, Closed]],

Cell[CellGroupData[{

Cell["3.2 \:0420\:0435\:0430\:043b\:0438\:0437\:0430\:0446\:0438\:044f", \
"Section",
 CellChangeTimes->{{3.8127067706185827`*^9, 
  3.812706773171873*^9}},ExpressionUUID->"a6563b29-0c0c-4886-b2da-\
6be12f594271"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MinWidthHeuristic", "[", 
   RowBox[{"getDagResult_", ",", 
    RowBox[{"W_:", "20"}], ",", 
    RowBox[{"c_:", "1"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dag", " ", "=", " ", 
       RowBox[{"Graph", "[", 
        RowBox[{
         RowBox[{"getDagResult", "[", "\"\<acyclic graph\>\"", "]"}], ",", 
         " ", 
         RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"U", "=", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Z", "=", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"currentLayer", "=", "1"}], ",", "\[IndentingNewLine]", 
      RowBox[{"widthCurrent", "=", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{"widthUp", "=", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{"newlayers", "=", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", "l", ",", "step1", 
      ",", "step2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"verticesList", "=", 
      RowBox[{"Sort", "@", 
       RowBox[{"VertexList", "[", "dag", "]"}]}]}], ";", 
     RowBox[{"edgesList", "=", 
      RowBox[{"EdgeList", "[", "dag", "]"}]}], ";", 
     RowBox[{"adjAssoc", "=", 
      RowBox[{"Association", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"v", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<parents\>\"", "\[Rule]", " ", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"edgesList", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                   "==", "v"}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
            RowBox[{"\"\<children\>\"", "\[Rule]", " ", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"edgesList", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   "==", "v"}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}]}], 
           "|>"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"v", ",", "verticesList"}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"ContainsExactly", "[", 
         RowBox[{"verticesList", ",", "U"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"step1", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Complement", "[", 
            RowBox[{"verticesList", ",", "U"}], "]"}], ",", 
           RowBox[{
            RowBox[{"SubsetQ", "[", 
             RowBox[{"Z", ",", 
              RowBox[{
               RowBox[{"adjAssoc", "[", "#", "]"}], "[", "\"\<children\>\"", 
               "]"}]}], "]"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"step1", "!=", 
           RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"step2", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"VertexOutDegree", "[", 
               RowBox[{"dag", ",", " ", "ve"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"ve", ",", "step1"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"v", "=", 
            RowBox[{"step1", "\[LeftDoubleBracket]", 
             RowBox[{"First", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"step2", ",", 
                 RowBox[{"Max", "[", "step2", "]"}]}], "]"}], "]"}], "]"}], 
             "\[RightDoubleBracket]"}]}]}], ",", 
          RowBox[{"v", "=", "0"}]}], "]"}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "\:0432\:0435\:0440\:0448\:0438\:043d\:0430", " ", "\:0441", " ", 
          "\:043c\:0430\:043a\:0441\:0438\:043c\:0430\:043b\:044c\:043d\:044b\
\:043c", " ", "\:043a\:043e\:043b\:0438\:0447\:0435\:0441\:0442\:0432\:043e", 
          " ", "OutDegree"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"v", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"newlayers", ",", 
             RowBox[{"{", 
              RowBox[{"currentLayer", ",", "v"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"U", ",", "v"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"widthCurrent", "=", 
            RowBox[{"widthCurrent", "-", 
             RowBox[{"VertexOutDegree", "[", 
              RowBox[{"dag", ",", " ", "v"}], "]"}], "+", "1"}]}], ";", 
           RowBox[{"widthUp", "=", 
            RowBox[{"widthUp", "+", 
             RowBox[{"VertexInDegree", "[", 
              RowBox[{"dag", ",", " ", "v"}], "]"}]}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"v", "\[Equal]", "0"}], ")"}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"widthCurrent", "\[GreaterEqual]", "W"}], " ", ")"}], "&&", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"VertexOutDegree", "[", 
                RowBox[{"dag", ",", " ", "v"}], "]"}], "\[Equal]", "0"}], 
              ")"}]}], ")"}], "||", 
           RowBox[{"(", 
            RowBox[{"widthUp", "\[GreaterEqual]", 
             RowBox[{"c", "*", "W"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"currentLayer", "++"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Z", "=", 
            RowBox[{"Union", "[", 
             RowBox[{"Z", ",", "U"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"widthCurrent", "=", "widthUp"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"widthUp", "=", "0"}]}]}], "\[IndentingNewLine]", 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     RowBox[{"l", "=", 
      RowBox[{
       RowBox[{"GatherBy", "[", 
        RowBox[{"newlayers", ",", "First"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "All", ",", "2"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<acyclic graph\>\"", "->", 
        RowBox[{"getDagResult", "[", "\"\<acyclic graph\>\"", "]"}]}], ",", 
       " ", 
       RowBox[{"\"\<feedback set\>\"", "->", 
        RowBox[{"getDagResult", "[", "\"\<feedback set\>\"", "]"}]}], ",", 
       RowBox[{"\"\<layers\>\"", "\[Rule]", "l"}]}], "|>"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.812721075057788*^9, 3.8127211990252132`*^9}, 
   3.8127213178628407`*^9, {3.8127214446582894`*^9, 3.8127214945716767`*^9}, {
   3.812721540744302*^9, 3.8127216179781027`*^9}, {3.812721691154272*^9, 
   3.812721718609686*^9}},
 CellLabel->
  "In[553]:=",ExpressionUUID->"479fbba7-6a4c-4c91-ae41-487b0b74f8f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testGraph", "=", 
   RowBox[{"GetGraph", "[", "12", "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[554]:=",ExpressionUUID->"9535c35a-2eae-4aea-99bd-212836e43f71"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getdargresult", "=", 
   RowBox[{"GetDAG", "[", "testGraph", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8127216543727236`*^9, 3.812721662799662*^9}},
 CellLabel->
  "In[555]:=",ExpressionUUID->"a550b160-ed67-4379-a032-7e2afd00d74f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MinWidthHeuristic", "[", "getdargresult", "]"}]], "Input",
 CellChangeTimes->{{3.812721627273608*^9, 3.8127216863448772`*^9}, {
  3.81272172329828*^9, 3.812721723482498*^9}},
 CellLabel->
  "In[560]:=",ExpressionUUID->"77c9488c-fca5-4fa6-b281-9dc47bdd6106"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"acyclic graph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "10"}]}], "}"}]}], ",", 
   RowBox[{"\<\"feedback set\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "10"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "4"}]}], "}"}]}], ",", 
   RowBox[{"\<\"layers\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3", ",", "5", ",", "8", ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "11", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"12", ",", "2"}], "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.812721665902322*^9, 3.8127216865614414`*^9}, {
  3.81272172381824*^9, 3.812721747685549*^9}},
 CellLabel->
  "Out[560]=",ExpressionUUID->"ff078923-66c5-4a52-b453-342743fbcff0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["3.3 Test Package Option \[OpenCurlyDoubleQuote]Min Width\
\[CloseCurlyDoubleQuote]", "Section",
 CellChangeTimes->{{3.812721761953957*^9, 
  3.812721777647951*^9}},ExpressionUUID->"9543eca1-bbdb-4a7c-b009-\
05aafeee165c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testGraph", "=", 
   RowBox[{"GetGraph", "[", "15", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.812724364922611*^9, 3.812724390429346*^9}},
 CellLabel->
  "In[1065]:=",ExpressionUUID->"1f58bf0a-ec3f-47eb-88ac-36151d80937e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getdargresult", "=", 
   RowBox[{"GetDAG", "[", "testGraph", "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[1066]:=",ExpressionUUID->"243e4dc2-3225-489c-ae42-35ed339b1227"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetLayering", "[", 
  RowBox[{"getdargresult", ",", 
   RowBox[{"ApproachOption", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Min Width\>\"", ",", "3", ",", "1"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8127241904475117`*^9, 3.8127242367404757`*^9}},
 CellLabel->
  "In[1067]:=",ExpressionUUID->"30457342-f16d-455d-9f77-33649e894de8"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"acyclic graph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "15"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "15"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "15"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "14"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "15"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "14"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "14"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "15"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "14"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "15"}]}], "}"}]}], ",", 
   RowBox[{"\<\"feedback set\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"13", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"13", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"13", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"14", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"14", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"14", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"14", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"15", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"15", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"15", "\[DirectedEdge]", "8"}]}], "}"}]}], ",", 
   RowBox[{"\<\"layers\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "13", "}"}], ",", 
      RowBox[{"{", "14", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "1", ",", "15"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "11"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"12", ",", "4"}], "}"}], ",", 
      RowBox[{"{", "3", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", ",", "8"}], "}"}], ",", 
      RowBox[{"{", "2", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.8127241922838593`*^9, 3.812724237019496*^9}, {
   3.812724367588919*^9, 3.8127244118827343`*^9}, 3.8127245120919795`*^9},
 CellLabel->
  "Out[1067]=",ExpressionUUID->"27246a58-b1da-4b07-91fe-4d718dbcd50b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetLayering", "[", 
  RowBox[{"getdargresult", ",", 
   RowBox[{"ApproachOption", "\[Rule]", "\"\<Min Width\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8127242187484875`*^9, 3.812724225066473*^9}},
 CellLabel->
  "In[1068]:=",ExpressionUUID->"f67ff69a-eb59-4916-92c5-9455e2eb7568"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"acyclic graph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"2", "\[DirectedEdge]", "15"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "15"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "15"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "14"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "1"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "15"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"8", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "14"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "14"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "15"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "14"}], ",", 
      RowBox[{"12", "\[DirectedEdge]", "15"}]}], "}"}]}], ",", 
   RowBox[{"\<\"feedback set\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"1", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"3", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"4", "\[DirectedEdge]", "9"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"5", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"6", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"7", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"9", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "6"}], ",", 
      RowBox[{"10", "\[DirectedEdge]", "11"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"11", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"13", "\[DirectedEdge]", "2"}], ",", 
      RowBox[{"13", "\[DirectedEdge]", "3"}], ",", 
      RowBox[{"13", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"14", "\[DirectedEdge]", "4"}], ",", 
      RowBox[{"14", "\[DirectedEdge]", "8"}], ",", 
      RowBox[{"14", "\[DirectedEdge]", "12"}], ",", 
      RowBox[{"14", "\[DirectedEdge]", "13"}], ",", 
      RowBox[{"15", "\[DirectedEdge]", "5"}], ",", 
      RowBox[{"15", "\[DirectedEdge]", "7"}], ",", 
      RowBox[{"15", "\[DirectedEdge]", "8"}]}], "}"}]}], ",", 
   RowBox[{"\<\"layers\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"13", ",", "14", ",", "15"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"11", ",", "4", ",", "6", ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"12", ",", "10", ",", "1"}], "}"}], ",", 
      RowBox[{"{", "5", "}"}], ",", 
      RowBox[{"{", "3", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", ",", "8"}], "}"}], ",", 
      RowBox[{"{", "2", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.81272422552314*^9, 3.812724240237303*^9}, {
   3.8127243685778027`*^9, 3.8127244127763433`*^9}, 3.8127245131088123`*^9},
 CellLabel->
  "Out[1068]=",ExpressionUUID->"b0bcd7ac-2ff6-48d4-bacf-7fc36e5668c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetLayering", "[", 
  RowBox[{"getdargresult", ",", 
   RowBox[{"ApproachOption", "\[Rule]", 
    RowBox[{"{", "\"\<Min Width\>\"", "}"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[1004]:=",ExpressionUUID->"4450da6d-d64e-4dff-a71d-8ea71de85c88"],

Cell[BoxData[
 TemplateBox[{
  "GetLayering","option",
   "\"Option \\!\\(\\*RowBox[{\\\"{\\\", \\\"\\\\\\\"Min Width\\\\\\\"\\\", \
\\\"}\\\"}]\\) is not in list of options. Choose another one from the list: \
\\n\\!\\(\\*RowBox[{\\\"\\\\\\\"Longest Path\\\\\\\\nExact\\\\\\\\nMin \
Width\\\\\\\"\\\"}]\\)\"",2,1004,14,31927244914744663060,"Local",
   "MethodSugiyama`GetLayering"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.812724210415613*^9, 3.8127242492201405`*^9},
 CellLabel->
  "During evaluation of \
In[1004]:=",ExpressionUUID->"0000e035-1491-400b-bf61-a66faafaedee"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.8127242104314284`*^9, 3.81272424924166*^9},
 CellLabel->
  "Out[1004]=",ExpressionUUID->"8f0a085d-cb76-4ea5-beec-5ac39c750ab7"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{960, 1007},
WindowMargins->{{Automatic, -968}, {Automatic, -8}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 421, 9, 156, "Title",ExpressionUUID->"513ba1f4-f772-434d-bcd7-4d887003a6fc"],
Cell[CellGroupData[{
Cell[1026, 35, 431, 7, 67, "Chapter",ExpressionUUID->"b9c3ae62-66bc-40f3-82cd-296b4e269121"],
Cell[1460, 44, 275, 6, 28, "Input",ExpressionUUID->"a92dee2a-c262-48bb-b086-19f25bcacdcc"],
Cell[1738, 52, 234, 4, 28, "Input",ExpressionUUID->"7259c43c-c5cb-41b6-915c-9b439295a581"],
Cell[CellGroupData[{
Cell[1997, 60, 249, 5, 28, "Input",ExpressionUUID->"77f65e31-7b60-4150-aaac-33cebdc0fd22"],
Cell[2249, 67, 7761, 178, 129, "Output",ExpressionUUID->"6833a719-53ae-48c6-8348-5d22ae14302d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[10059, 251, 150, 3, 56, "Chapter",ExpressionUUID->"f169089e-0eea-473e-ad55-f091e87f48a4"],
Cell[CellGroupData[{
Cell[10234, 258, 222, 4, 67, "Section",ExpressionUUID->"df0f20a2-daf0-4063-8707-21d3262df676"],
Cell[10459, 264, 658, 16, 67, "Input",ExpressionUUID->"508def74-2ec1-44a6-a2dd-7e8eaaf7eaba"],
Cell[11120, 282, 6348, 145, 694, "Input",ExpressionUUID->"eb0cab9c-6a9c-4433-8f2a-150ec957b0f6"]
}, Closed]],
Cell[CellGroupData[{
Cell[17505, 432, 269, 4, 53, "Section",ExpressionUUID->"5d736691-e0c2-46aa-bf51-998e078bdd67"],
Cell[17777, 438, 15275, 344, 1017, "Input",ExpressionUUID->"7d33540e-2415-497e-967a-f01139e7f286"]
}, Closed]],
Cell[CellGroupData[{
Cell[33089, 787, 228, 4, 53, "Section",ExpressionUUID->"d92d1032-6760-4a17-b007-6cdf663fdeda"],
Cell[33320, 793, 475, 13, 48, "Input",ExpressionUUID->"21bea083-4e47-46e5-bf98-7d4d7fbcde50"],
Cell[CellGroupData[{
Cell[33820, 810, 284, 6, 28, "Input",ExpressionUUID->"26f0355e-1be7-4607-80f8-8f1ab32943d7"],
Cell[34107, 818, 4431, 94, 147, "Output",ExpressionUUID->"cf0b9166-80fc-45fc-8055-02dbb3f33c89"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38575, 917, 309, 6, 28, "Input",ExpressionUUID->"c60708ad-d732-4428-92c0-c4b68f21f27e"],
Cell[38887, 925, 15034, 388, 337, "Output",ExpressionUUID->"3230967f-4446-4677-935d-dee82711a7ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53958, 1318, 220, 4, 53, "Subsection",ExpressionUUID->"5e3c5898-60c6-4b27-8634-9d8aa16900ff"],
Cell[CellGroupData[{
Cell[54203, 1326, 593, 15, 28, "Input",ExpressionUUID->"e40f04a8-b3ff-4fe4-bb2e-40ef030aa2ca"],
Cell[54799, 1343, 402, 6, 32, "Output",ExpressionUUID->"be696768-0252-4ece-ac90-02f1bd1ead02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55238, 1354, 458, 9, 28, "Input",ExpressionUUID->"daeb6386-8e5c-42f1-931a-7820f513960f"],
Cell[55699, 1365, 8798, 162, 289, "Output",ExpressionUUID->"1b8797ad-8af3-4c3c-a943-9fc72f1a1aef"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[64546, 1533, 221, 4, 37, "Subsection",ExpressionUUID->"4f41949e-5dbb-46a7-a804-c075a66fc826"],
Cell[CellGroupData[{
Cell[64792, 1541, 548, 14, 28, "Input",ExpressionUUID->"1c14dcfb-cc8b-49ca-a5f5-89546c2d4c87"],
Cell[65343, 1557, 369, 6, 32, "Output",ExpressionUUID->"10cefb14-e15b-4adf-b429-937452561e80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65749, 1568, 309, 7, 28, "Input",ExpressionUUID->"2b80bee7-cc2b-41b4-bbf8-c42b8276e80f"],
Cell[66061, 1577, 611, 11, 32, "Output",ExpressionUUID->"99f5dc73-8648-46b9-b541-1223e6418fea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66709, 1593, 505, 10, 28, "Input",ExpressionUUID->"9b55bd2b-c0f7-4343-8518-df9881c96d1b"],
Cell[67217, 1605, 7309, 136, 368, "Output",ExpressionUUID->"1514a176-e8fb-4c41-a52c-cdbc3a7aba27"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[74575, 1747, 229, 4, 37, "Subsection",ExpressionUUID->"a09b43b5-3ade-439a-bde2-13b9b9b0c441"],
Cell[74807, 1753, 515, 14, 48, "Input",ExpressionUUID->"fe57bd22-ac02-48b0-b80d-fbaf534cb59e"],
Cell[75325, 1769, 333, 8, 28, "Input",ExpressionUUID->"c70a2f3e-1aae-4b72-9056-7ffca5e03813"],
Cell[CellGroupData[{
Cell[75683, 1781, 4772, 119, 164, "Input",ExpressionUUID->"87993832-731d-472f-ba10-dfe4cdd4bf6f"],
Cell[80458, 1902, 7789, 144, 558, "Output",ExpressionUUID->"c3814194-3d9a-47ed-b9bd-1b280af9d250"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88284, 2051, 4928, 125, 183, "Input",ExpressionUUID->"4cfa453c-e733-4ecd-be42-b83fb9c90580"],
Cell[93215, 2178, 8103, 155, 456, "Output",ExpressionUUID->"27730db7-c521-43a4-9bcf-623cc558198d"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[101379, 2340, 228, 4, 53, "Section",ExpressionUUID->"4a969076-8a57-43af-88c0-37ca0834d683"],
Cell[CellGroupData[{
Cell[101632, 2348, 512, 10, 28, "Input",ExpressionUUID->"4511fe8d-ec15-4831-976d-3f319e44a8ba"],
Cell[102147, 2360, 4438, 96, 147, "Output",ExpressionUUID->"a98d72c2-0f43-4383-bab8-50a7dda36ede"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106622, 2461, 441, 9, 28, "Input",ExpressionUUID->"c106a72a-63e3-4afc-9d62-f2320ecc092e"],
Cell[107066, 2472, 4608, 99, 166, "Output",ExpressionUUID->"dd4fb00b-8249-43b2-afbd-be0f6fd8ccd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111711, 2576, 450, 10, 28, "Input",ExpressionUUID->"cf9822e6-9a0a-4c34-baf9-570b50613ca9"],
Cell[112164, 2588, 529, 11, 56, "Message",ExpressionUUID->"2b246261-d861-4c71-9c3a-a3bdbf2a832f"],
Cell[112696, 2601, 160, 3, 32, "Output",ExpressionUUID->"81d38e31-e25c-45b0-9cd7-3232c10fb350"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[112917, 2611, 321, 5, 56, "Chapter",ExpressionUUID->"476622c9-ae95-405e-8ba2-2b202c91792e"],
Cell[CellGroupData[{
Cell[113263, 2620, 267, 4, 67, "Section",ExpressionUUID->"2a7d3d66-f3d8-4bb3-8a16-ad5fb7729f96"],
Cell[113533, 2626, 90495, 1488, 583, "Input",ExpressionUUID->"eef1e20c-ac71-46cb-8408-72afc1ef380a"]
}, Closed]],
Cell[CellGroupData[{
Cell[204065, 4119, 261, 4, 53, "Section",ExpressionUUID->"6ba4f07a-784f-4fdd-873c-e2502f57a793"],
Cell[CellGroupData[{
Cell[204351, 4127, 167, 3, 53, "Subsection",ExpressionUUID->"c7af484d-dc32-43f1-9601-59c46ba37912"],
Cell[204521, 4132, 298, 7, 28, "Input",ExpressionUUID->"5e60aaaf-eaa9-4fba-b7bf-95e7a4b5c5e7"],
Cell[204822, 4141, 1769, 49, 143, "Input",ExpressionUUID->"2672efa3-6c90-4006-ba9d-82d932818fc0"]
}, Closed]],
Cell[CellGroupData[{
Cell[206628, 4195, 182, 3, 37, "Subsection",ExpressionUUID->"76f4cd37-d6c6-41a0-9acb-a08a622c9450"],
Cell[206813, 4200, 1694, 41, 219, "Input",ExpressionUUID->"64dac49d-5718-4e9f-a086-2880c81eb140"]
}, Closed]],
Cell[CellGroupData[{
Cell[208544, 4246, 179, 3, 37, "Subsection",ExpressionUUID->"fd9b504e-578e-4ae4-8785-e6bfe29ccbe1"],
Cell[208726, 4251, 3921, 99, 200, "Input",ExpressionUUID->"79b65003-a776-42bb-8de9-0ef79b6bf54d"]
}, Closed]],
Cell[CellGroupData[{
Cell[212684, 4355, 160, 3, 37, "Subsection",ExpressionUUID->"5ec1f857-c664-488e-9f6e-b089b551e339"],
Cell[CellGroupData[{
Cell[212869, 4362, 1118, 22, 67, "Input",ExpressionUUID->"3e4073bb-7bb0-49a8-b853-f6e5a493e9ec"],
Cell[213990, 4386, 3717, 81, 128, "Output",ExpressionUUID->"41b423b4-0af7-4ed0-8e26-2779f22d971f"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[217768, 4474, 286, 4, 53, "Section",ExpressionUUID->"523fe366-da82-4286-b675-9967194c4c4e"],
Cell[218057, 4480, 195, 5, 28, "Input",ExpressionUUID->"d90b42d4-aaf5-4322-acb8-336b263646bf"],
Cell[CellGroupData[{
Cell[218277, 4489, 245, 5, 28, "Input",ExpressionUUID->"fc9aba83-cc65-4bbc-8863-6171bc160b1d"],
Cell[218525, 4496, 1595, 35, 52, "Output",ExpressionUUID->"6020ac18-2867-4c0a-90d5-2960c212e1a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220157, 4536, 217, 4, 28, "Input",ExpressionUUID->"52941e39-22be-447d-a3cf-bfc474055a1a"],
Cell[220377, 4542, 1970, 45, 71, "Output",ExpressionUUID->"bb8e8727-5df9-4986-9b44-b71e169605ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222384, 4592, 288, 6, 28, "Input",ExpressionUUID->"4d06931e-cd4e-4e4b-be96-e80cb3545b74"],
Cell[222675, 4600, 1926, 43, 71, "Output",ExpressionUUID->"58919684-0e14-4119-bc60-9838d5e97f19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224638, 4648, 289, 6, 28, "Input",ExpressionUUID->"18de15b6-1f28-4cd7-a34c-bcc822c8505c"],
Cell[224930, 4656, 1917, 44, 71, "Output",ExpressionUUID->"bd4b8ca0-a53b-48e1-ab79-4814d1132c4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226884, 4705, 302, 7, 28, "Input",ExpressionUUID->"a5adb2fc-4a63-40e7-83e5-fa56958ebd9e"],
Cell[227189, 4714, 540, 11, 56, "Message",ExpressionUUID->"c3274c3c-1d72-40d0-8463-df5cd223c6b0"],
Cell[227732, 4727, 186, 3, 32, "Output",ExpressionUUID->"20343da5-5520-4c78-ad5a-3003955cd32c"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[227979, 4737, 339, 6, 56, "Chapter",ExpressionUUID->"278a3c68-97e4-4658-ac70-b7f860b8518b"],
Cell[CellGroupData[{
Cell[228343, 4747, 220, 4, 67, "Section",ExpressionUUID->"82150409-a3b4-4555-8108-583fcb64f42f"],
Cell[228566, 4753, 73452, 1209, 452, "Input",ExpressionUUID->"5d675499-3f09-4e29-a489-f2d4f142e66c"],
Cell[302021, 5964, 1696, 43, 348, "Program",ExpressionUUID->"870f29a2-29b9-4d1a-8fff-a74bbc3cec14"]
}, Closed]],
Cell[CellGroupData[{
Cell[303754, 6012, 213, 4, 53, "Section",ExpressionUUID->"a6563b29-0c0c-4886-b2da-6be12f594271"],
Cell[303970, 6018, 7474, 177, 694, "Input",ExpressionUUID->"479fbba7-6a4c-4c91-ae41-487b0b74f8f2"],
Cell[311447, 6197, 195, 5, 28, "Input",ExpressionUUID->"9535c35a-2eae-4aea-99bd-212836e43f71"],
Cell[311645, 6204, 272, 6, 28, "Input",ExpressionUUID->"a550b160-ed67-4379-a032-7e2afd00d74f"],
Cell[CellGroupData[{
Cell[311942, 6214, 281, 5, 28, "Input",ExpressionUUID->"77c9488c-fca5-4fa6-b281-9dc47bdd6106"],
Cell[312226, 6221, 2713, 60, 90, "Output",ExpressionUUID->"ff078923-66c5-4a52-b453-342743fbcff0"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[314988, 6287, 227, 4, 53, "Section",ExpressionUUID->"9543eca1-bbdb-4a7c-b009-05aafeee165c"],
Cell[315218, 6293, 262, 6, 28, "Input",ExpressionUUID->"1f58bf0a-ec3f-47eb-88ac-36151d80937e"],
Cell[315483, 6301, 205, 5, 28, "Input",ExpressionUUID->"243e4dc2-3225-489c-ae42-35ed339b1227"],
Cell[CellGroupData[{
Cell[315713, 6310, 376, 9, 28, "Input",ExpressionUUID->"30457342-f16d-455d-9f77-33649e894de8"],
Cell[316092, 6321, 3872, 83, 109, "Output",ExpressionUUID->"27246a58-b1da-4b07-91fe-4d718dbcd50b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320001, 6409, 313, 7, 28, "Input",ExpressionUUID->"f67ff69a-eb59-4916-92c5-9455e2eb7568"],
Cell[320317, 6418, 3799, 80, 109, "Output",ExpressionUUID->"b0bcd7ac-2ff6-48d4-bacf-7fc36e5668c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324153, 6503, 267, 6, 28, "Input",ExpressionUUID->"4450da6d-d64e-4dff-a71d-8ea71de85c88"],
Cell[324423, 6511, 598, 12, 74, "Message",ExpressionUUID->"0000e035-1491-400b-bf61-a66faafaedee"],
Cell[325024, 6525, 184, 3, 32, "Output",ExpressionUUID->"8f0a085d-cb76-4ea5-beec-5ac39c750ab7"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

